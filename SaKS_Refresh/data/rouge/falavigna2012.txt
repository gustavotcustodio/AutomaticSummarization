Validation of a neural network model for forecasting healthy state of firms with scarce data. Identification of a three-layer framework for simulation of financial ratings. Ability of complex model to solve missing value problems.

0.101449 - On a wake of Basel II Accord in 2004, banks and financial institutions can build an internal rating system.
0.052805 - This work focuses on Italian small firms that are more hard to judge because quite often financial data are not simply available.
0.178635 - The aim of this paper is to propose a simulation model for assigning rating judgements to these firms, using poor financial information.
0.128514 - The proposed model produces a simulated counterpart of Bureau van Dijk-K Finance (BvD) rating judgements.
0.043796 - It is clear that there are problems when small firms must be judged because it is difficult to obtain financial data; indeed in Italy these enterprises must deposit the balance-sheet in reduced form.
0.124142 - Suggested methodology is a three-layer process where each of them is formed by, respectively, one, two and four feed-forward artificial neural networks with back-propagation algorithm.
0.120564 - The proposed model is a good solution for evaluating small firms with poor financial information but not only: the research underlines and supports the ability of artificial neural networks of learning and reproducing some aspects or some features or behaviours of reality.
0.070349 - Bankruptcy prediction of firms has been largely studied by banks and researchers since late 1960 (Altman, 1968).
0.030581 - Ravi Kumar and Ravi (2007) underlines that banks or firm health in competitive industries is dependent upon “(i) how financially solvent it is at the inception; (ii) its ability, relative flexibility and efficiency in creating cash from its continuous operations; (iii) its access to capital markets and (iv) its financial capacity and staying power when faced with unplanned cash short-falls”.
0.097715 - The concept of default probability has become very relevant after Basel II (2004) because the New Basel Accord (Basel Committee on Banking Supervision, 2004) provided the possibility for banks and financial institutions to define a model for assigning rating judgements to their customers.
0.104800 - For this reason many statistical and intelligent techniques have been used for forecasting default probability and economic-financial performances of firms.1 Rating judgements are known as evaluations of a potential borrower’s ability to repay debt, prepared by a credit bureau at the request of the lender.
0.088435 - Typically, a credit rating tells a lender or investor the probability of the subject being able to pay back a loan.
0.081087 - However, in recent years, credit ratings have also been used to adjust insurance premiums, determine employment eligibility, and establish the amount of a utility or leasing deposit.
0.104390 - A poor credit rating indicates a high risk of defaulting on a loan, and thus leads to high interest rate, or the refusal of a loan by the creditor.
0.065574 - Standard and Poor’s, Moody’s and Fitch Rating are the biggest rating agencies but with the New Accord all financial institutions can build a system for assigning ratings.
0.022989 - In this study judgements used have been extracted from Bureau van Dijk (BvD)2 that defined eight classes, from KR7 (the best performance) to D (default firms).
0.098246 - Obviously, the problem of determining rating scores or default probability is very close to the variables introduced in the model.
0.123694 - Indeed big rating agencies assess performance of firms on a base of balance-sheet accounts, market information (i.e.
0.069264 - share value) but also confidential data (economic situation of owner or shareholders or managers).
0.146602 - Nevertheless, the problem in this study is not feature selection because the issue faced is to build a model able to determine rating score of firms with scarce balance-sheet data.
0.048000 - Indeed rating judgement of Bureau van Dijk and then also that reproduced in this context is called “technical” because it does not draw from personal or informal information about firm.
0.060956 - The first studies on financial prediction model for bank were made by Beaver (1966) and Altman (1968) that have used univariate analysis and discriminant one.
0.000000 - The last work has been revised in Zeta analysis by Altman, Haldeman, and Narayanan (1977) that have introduced comprehensive inputs in the previous analysis.
0.069652 - In the following years many researchers used different models as logistic regression but also data envelopment analysis (DEA), for predicting failure probability of bank (Cielen, Peeters, & Vanhoof, 2004; Kao & Liu, 2004; Martin, 1977).
0.080321 - All these researches use statistical methodologies suffering from the assumption of multivariate-normality for independent variables.
0.025641 - If this hypothesis is violated these methods could be theoretically invalid for finite sample (Berrt & Linoff, 1997; Huang, Chen, Hsu, Chen, & Wu, 2004).
0.035398 - Data mining techniques and intelligent systems are good tools for finding out the potential and significant information from large data sets (Lin, Shiue, Chen, & Cheng, 2009).
0.025109 - Indeed many authors displayed that decision tree methodology or artificial neural networks perform better than the discriminant analysis or logit regression in predicting bankruptcy event (Olmeda & Fernandez, 1997; De Andres, Landajo, & Lorca, 2005).
0.141667 - A second flow of studies focuses on hybrid frameworks that include strengths of different models.
0.170087 - In this direction is the work of Ahn, Cho, and Kim (2000) that combines a rough set approach and a neural network for forecasting failure of firms based on past financial performance data.
0.027211 - More recent study is made by Ryu and Yue (2005) that introduce the so called “isotonic separation method” for bankruptcy prediction.
0.015414 - The evidence emerging from these studies is that hybrid methodologies are the best performers because statistical methodologies, as logit, probit, ANOVA, discriminant analysis, are very effective in selecting determinant variables; whereas intelligent models are the best in providing provisions (Lee, Han, & Kwon, 1996; Lin & McClean, 2001).
0.050424 - Other researches use hybrid intelligent models for selecting input variables and forecasting default event as fuzzy clustering, self-organizing map or support vector machines (Alam, Booth, Lee, & Thordarson, 2000; Huang, Chen, & Wang, 2007; Lin et al., 2009).
0.000000 - The same considerations and results have been found on credit scoring field.
0.091667 - Indeed creditors construct classification rules (rating or credit scoring models) based on data of applicants.
0.017292 - Hybrid methodologies are the most numerous in the literature, in particular the methodologies combining statistical and intelligent techniques: clustering and neural network (Hsieh, 2005), artificial neural networks and multivariate adaptive regression splines (Lee & Chen, 2005), discriminant analysis and neural network (Lee, Chiu, Lu, & Chen, 2002), genetic algorithm and neural network (Chen & Huang, 2003).
0.073024 - The research presented in this paper uses a unique technique, that is the feed-forward artificial neural network with back-propagation algorithm.
0.219414 - It will show the ability of this model to predict insolvency of a firm and to simulate credit ratings.
0.042105 - On the computation side, an algorithm for calculating an optimal threshold that separates good firms from bad ones is illustrated.
0.228405 - Moreover, a three-layer neural network framework for the rating simulation is explained.
0.023810 - In this study three subjects are considered.
0.140824 - The first two have a computational soul and the third one represents an application of model to rating assessment problem.
0.057548 - The inspiring idea was born from the evidence that in Italy the majority of firms have micro or small size and laws do not require them to present completed balance-sheets.
0.055944 - It became very difficult to assess these firms from the only information collected in these poor documents and also big analyst companies, as Bureau van Dijk (BvD), were not able to judge a lot of them.
0.076503 - Ceris-CNR institute analyses the economic and financial situation of Piedmont firms applying descriptive statistics but the data lack can often produce distorted images of reality or weak considerations.
0.125655 - On a wake of these remarks in the first presented model we discuss the artificial neural network validity in forecasting default probability of firms and its classification power in the situation of weak disposability of balance-sheet data.
0.172451 - A second more complex framework will be shown for proving that it is possible to simulate rating judgements also with scarce data.
0.051282 - Indeed Ceris-CNR buy from Bureau van Dijk rating judgements but for the above mentioned reason not all firms have their rating scores.
0.100775 - A third result shows a model customization built for improving outcomes just obtained from the previous framework.
0.014981 - As explained in the previous section Italian laws do not require that all firms compile detailed balance-sheets.
0.109009 - This depends on the nature of society and then, substantially, on the size of firms.
0.128598 - Rating agencies and analyser societies even have not disposability of data outside of balance-sheets for assessing financial and economic performances of firms.
0.090909 - AIDA3 database has been the source of our Italian data and according to the mainstream analysis of Ceris-CNR and according to the unbiased method of BvD, in the model only balance-sheet accounts are used, so that the judgement for each firm is a technical rating.
0.174005 - First model: validation of network The first step of the analysis was to define a model for forecasting default probability of firms starting from a database of failed and best performance firms.
0.085853 - The methodology chosen is a feed-forward artificial neural network with back-propagation algorithm as performance function.
0.087598 - An artificial neural network (ANN) is a network made up of several simple processors, units or neurons, each one possibly having a local memory.
0.031008 - The units are connected by unidirectional communication channels, connections, which carry numeric, as opposed to symbolic, data.
0.015504 - The units operate only on their local data and on the inputs they receive via the connections.
0.090231 - A neural network is a processing device, either an algorithm or actual hardware, whose design was inspired by the design and functioning of animal brains and components thereof.
0.092826 - Most neural networks have some sort of training rule whereby, the weights of connections are adjusted on the basis of presented patterns.
0.087714 - In other words, neural networks learn from examples, just like children who, for example, learn to recognise cats from examples of cats, and exhibit some structural capability for generalisation.
0.000000 - Neurons are often elementary non-linear signal processors, or they can be simple threshold discriminators.
0.087227 - Another feature of ANNs, which distinguishes them from other computing devices, is a high degree of interconnection, which allows a high degree of parallelism.
0.014035 - Furthermore, there is no idle memory containing data and programs, but rather each neuron is pre-programmed and continuously active.
0.138187 - The framework of an artificial neural network is represented as a group of nodes joined among them through links.
0.029963 - In the Multi-Layer Perceptron (MLP) network the neurons are organised in layers, as shown in Fig 1.
0.064499 - Feed-forward neural network Fig 1.
0.072998 - Feed-forward neural network.
0.065268 - Literature suggests that an artificial network with a only one hidden layer is the best structure for facing classification problem (Dillon, Calantone, & Worthing, 1979; Hornik, Stinchcombe, & White, 1989; Hornik, 1993; Min & Lee, 2005; Olmeda & Fernandez, 1997).
0.035794 - The feed-forward connections show that the information travels in the direction from the input layer to the output one, but it is possible to build different frameworks as the recurrent networks that provides different link among nodes.
0.074713 - The input layer has a number of neurons equal to the variables analysed, then the input matrix X is done by i rows and n columns (Xin).
0.018018 - In this study subscript i represents balance-sheet indexes and n are firms.
0.048662 - The optimal number of hidden nodes must be found empirically (Kim, 2003; Min & Lee, 2005) but many researchers have shown that there is a relation between the hidden node number and the input one.
0.028986 - Patuwo, Hu, and Hung (1993), Nath, Rajagopalan, and Ryker (1997) Chauhan, Ravi, and Chandra (2009) suggests to use the formula (2i + 1) where i = 1, … , I represents the number of considered variables and this is the method chosen in the present study.
0.010667 - Salchenberger, Cinar, and Lash (1992) and Olmeda and Fernandez (1997) propose the proportion 0.75i that is more performing in time computing compared to that offered by Chauhan et al.
0.000000 - (2009).
0.083333 - The output layer is formed by the same number of neurons as the answers required to the model (k rows and n columns).
0.061668 - In this paper, only one neuron is the solution adopted, then k = 1 and n is the number of firms (Ykn).
0.016064 - Arrows linking layers represent connection weights (the biological “synapses”) that are tools collecting rules about inputs.
0.028070 - This information is mathematically represented by weights: Wij from input to hidden layer and Wjk from hidden to output one.
0.072607 - For computing the weight matrixes, that are the containers of signals between subsequent layers, are determined by mathematical transformation (called “transfer functions”).
0.109731 - The transfer or activation function, φ(·), from the hidden layer to the output one varies on the basis of a considered problem.
0.134685 - This function defines the output of a neuron in terms of the induced local field.
0.045198 - In this case, we use a logsigmoid function.
0.036036 - The transfer function from the input layer to the hidden one is tansigmoid.
0.072072 - The only requirement of the activation function is to satisfy the differentiability property.
0.000000 - Logistic and hyperbolic tangent functions are continuously differentiable non-linear activation functions.
0.011799 - In this study the activation function between the input and the hidden layer is the hyperbolic tangent sigmoid function: where f(x) ∈ [−1, 1] and x ∈ (−∞, +∞).
0.052083 - Similar function, logarithmic sigmoid function, is used from the hidden to the output layer for having a score included between 0 and 1, indeed: where f(x) ∈ [0,1] and x ∈ (−∞,+∞).
0.115646 - This allows to obtain a probability for each element (firm) on a base of variables introduced and analysed by network neurons.
0.025157 - Fig 2 represents how network works.
0.013605 - The initial dataset is subdivided into two groups: the training set (Xin) and the validation one (Vih where h = 1, … ,H).
0.083333 - Generally the second one is a little part of the first one, usually about 10%.
0.074936 - Neural network runs twice: in a first phase the model analysed the relationships among the data because input variables (Xin) but also outputs (targets, Tkn) are introduced in the model.
0.017316 - The network learns and collects this information into the weight matrixes (Wij and Wjk).
0.076336 - When the network is well trained to recognize inputs on a base of an error measure, the information saved is applied in the second phase on inputs of the validation set (Vih).
0.000000 - The main and fundamental difference between these two phases is that in the first one the unknown variables are the weight matrixes, whereas in the second phase the outputs are the real expected result.
0.113643 - In this study, during the training phase of the model are introduced the firms with their variables (Xin) and also the healthy state (Tkn): the network learns and when the error is quite little, the same framework and weight matrixes are applied to the validation set (Vih) for determining the healthy state of these firms.
0.102041 - The criterion employed to evaluate the accuracy of the model is the percentage of correct classifications (Olmeda, 1993; Olmeda & Fernandez, 1997).
0.020513 - ANN process: the training and the validation phase Fig 2.
0.022599 - ANN process: the training and the validation phase.
0.095238 - The percentage error is done comparing the number of errors made by the network to the number of elements to classify.
0.049844 - The back-propagation algorithm works on errors generated from the network in terms of empirical outputs (ykn) too different from the expected ones (tkn).
0.048193 - The error signal at the output of the k neuron at the m iteration (i.e.
0.048023 - presentation of the nth training example) is defined by: Neuron k is the output node and the instantaneous value of the error energy for neuron k is defined as: Correspondingly, the instantaneous value ε(m) of the total error energy is obtained by summing the previous equation on all neurons in the output layer: these are the only “visible” neurons for which error signals can be calculated directly.
0.072464 - The following may be written: where set C includes all the neurons in the output layer of the network.
0.034632 - This algorithm allows to minimize the absolute error both in training and validation phase.
0.043290 - For improving the network generalization power in this study the Bayesian regulation is used.
0.027027 - This algorithm updates the weight and bias values according to Levenberg–Marquardt optimization.
0.082596 - It minimizes a combination of squared errors and weights, and then determines the correct combination so as to produce a network that generalizes well (MacKay, 1992).
0.069767 - In addition, a mean squared error with regularization performance function (Mreg) has been implemented in the model.
0.052083 - In this way network performance is measured as the weight sum of two factors: the mean squared error and the mean squared weight and bias values: where γ is the performance index.
0.125413 - At the end of this complex process, the explained tool allows to obtain outputs defining for each firm its probability of default.
0.035928 - Indeed the function used from the hidden layer to the output one is a logsig that has codomain comprised between 0 (the firm has best performances, its default probability is equal to 0%) and 1 (the firm is failed, its default probability is 100%).
0.122449 - The performances of the network are very good and we can provide a proof on Italian database of healthy/failed firms.
0.028070 - Balance-sheet data have been extracted from the AIDA database and they refer to Italian public societies failed in 2008.
0.051613 - The considered accounts date to 2006 because it is necessary to forecast the earliest possible the default event and because from the analyses of BvD and K-Finance4 the time period necessary for assessing correctly the bankruptcy is two years.
0.018018 - Notice that in this paper failed firms are those judged by the court.
0.020513 - Firms in bankruptcy procedures are not considered in this study.
0.099736 - Database used to test the ability of network to classify firms into healthy and failed has been extracted by AIDA and it is formed by micro and small Italian firms of manufacturing industry.
0.016064 - The initial sample was done by 631 companies whose economic-financial position in 2008 we know.
0.100000 - On a wake of suggestion of K-Finance 2006 balance-sheet variables have been extracted.
0.127341 - The problem of many works is that detailed variables are required for being able to forecast firm performance.
0.096936 - The strength of artificial neural networks is that they can learn the relationships among data from an initial dataset (training phase) and after, the acquired rules are applied to a validation sample.
0.033333 - This propriety allows to simulate results, also starting from different information regarding the initial ones.
0.101449 - The analysis of weight matrices built during the training of network allows to deduce the relevance of considered features.
0.068966 - Also if the goal of this work is not the feature selection, because firms studied have poor balance-sheet data, it is necessary to highlight this issue.
0.099010 - Literature studied largely the problem of feature selection because when a model is build, its performance is often determined by inputs introduced.
0.071172 - Researchers proposed many methods for choosing model variables: starting from simpler methodologies, as the ANOVA (Huang et al., 2004; Lin & McClean, 2001) for extending the analysis of problem to more complex models as combined methodologies of Support Vector Machines and F-score or genetic algorithms (Huang et al., 2007; Ravi & Pramodh, 2008; Huang, 2009).
0.052594 - Moreover, artificial neural networks have the interesting advantage that don’t require that Xin ∼ N(μ,σ2), as instead required by econometric models but too many information could be redundant and make difficult to perform model.
0.040816 - Nevertheless, a variable that alone is completely useless can provide a significant performance improvement when taken with others (Guyon & Elisseeff, 2003).
0.069264 - For these considerations variable selection is a very decisive topic for providing good results.
0.126246 - The framework of a model can be perfect but if variables are unfit it could be very difficult to have performing outcomes.
0.074713 - In this study variables to introduce in the model are specified before but it could be interesting catches the relevance of each variable to the default problem.
0.057971 - In this sense many researchers (Chauhan et al., 2009; Huang et al., 2004, 2007; Mak & Blanning, 1998; Nath et al., 1997) suggest the Garson index (Garson, 1991) as a tool able to represent the importance of each feature introduced in the model.
0.020558 - Let i input variables (where i = 1, … ,I),j hidden nodes (where j = 1, … ,J) and k output neurons (where k = 1, … ,K), matrices are signed with capital letters and their elements with minuscule ones, Garson index is a vector made by: where Wij is the weight matrix between input and hidden layer and Wjk is the weight matrix between hidden and output one.
0.059880 - The indexes used are only eight, built starting on very simple balance-sheet information: Receivables due from shareholders (called Share capital), Fixed assets, Total current assets, Equity, Total provisions for risks and charges, Total payables, Value of production, Costs of production and Financial interests.
0.148613 - In Table 1 balance-sheet variables and a short summary of database subdivided on a base of healthy state of firms is done.
0.000000 - Table 1.
0.116667 - Sample description for the default probability model sample size and mean values of input variables.
0.035022 - Type of firms Sample size Total payables on liabilities Total payables on value of production Return on sales (ROS) Return on asset (ROA) EBIT on total payables Fixed assets on value of production Financial interests on EBIT Fixed assets on equity Healthy 525 0.422 0.565 0.126 0.119 0.301 1.413 0.021 1.255 Failed 106 0.916 0.997 0.036 0.035 0.039 3.532 0.864 0.136 Total 631 0.505 0.638 0.110 0.105 0.257 1.571 0.025 0.527 Fig 3 shows the percentage weight of each variables in forecasting the default probability.
0.116200 - The result is not surprising because the ratio between Total payables and Liabilities represents a measure of financial dependence of a firm from external creditors.
0.065574 - From the analysis of statistics (Table 1) healthy companies are less dependent than the failed ones, that is that they are less leveraged and with less interests to paid.
0.079096 - Garson indexes for default probability model Fig 3.
0.088050 - Garson indexes for default probability model.
0.094203 - The sample for training the network was formed by 588 firms, whereas the validation set was of 43 elements.
0.097769 - The results on validation sample are shown in Fig 4 where blue stars (∗) are the outputs of network, that is probabilities of default, and red plus (+) represent the correct classification of a firm (targets).
0.000000 - Vertical red lines display shifts between empirical outputs and expected ones.
0.052325 - Feed-forward neural network – results on default probability Fig 4.
0.057776 - Feed-forward neural network – results on default probability.
0.112269 - The relevance of this model does not only show good ability of network to classify elements but a new cue is done by the green horizontal line in the figure.
0.062016 - Indeed this represents a threshold subdividing firms into healthy (network output < threshold) and failed (network output > threshold).
0.081794 - Many authors established 0.5 as the cut-off value (Olmeda & Fernandez, 1997; Huang et al., 2007) of a model analysing similar problem but in this paper the optimal value of threshold is not defined by the user but it is calculated in the training phase so that performing the results.
0.080620 - Let s a vector of thresholds where s∈ [0, 1] with a step of 0.001, yn a vector of network outputs (where n = 1, … ,N) and tn a vector of targets, it is possible to define a vector as: In this manner for each threshold value a vector of approximated network outputs has been computed to compare with targets .
0.074534 - At the end of the process we will obtain the number of correct classification of n elements for each s. At this point the algorithm computes the optimal threshold as the mean of cut-off values with the lowest number of misclassifications.
0.064677 - This method of threshold selection takes into account the size of absolute errors ( yn − tn) made by network because the threshold is compared directly with the empirical output of network not approximated yet.
0.069333 - Notice that due to the fact that the threshold is fixed to 4 digit we will obtain a threshold measure that is an approximation of the optimal cut-off value.
0.000000 - At the end the percentage error (E) is: 3.2.
0.129189 - Second model: rating simulation After validating the feed-forward artificial neural network with back-propagation algorithm and having computed a performing algorithm for classifying firms into healthy and failed ones, this study shows as the previous tested network can be used for simulating rating values of firms.
0.058997 - The database used is extracted by AIDA for the year 2008 and for each firm K-Finance with Bureau van Dijk have provided the rating judgements.
0.115037 - For the prior considerations rating judgements are not available for all firms and we propose a model able to simulate them and to upload missing values in the database.
0.112520 - Ratings are judgements defined by accredited agencies that analysing economic and financial statements of firms issue a score representing the economic safety of companies.
0.020513 - The rating judgements are expressed as score, through an acronym.
0.043478 - In particular, for K-Finance the best performance rating class is the best performance KR7 and the worst KR1.
0.077316 - Default firms are assigned to D class whereas the firms with intermediate economic-financial performance are of KR6, KR5, KR4, KR3 and KR2.
0.161434 - The framework of the model proposed in this research is a three-layers structure: in each structure at least one neural network runs.
0.153948 - In the Fig 5 there is a scheme of the three-layer model.
0.198157 - Three-layer framework for simulating rating judgments Fig 5.
0.220000 - Three-layer framework for simulating rating judgments.
0.040712 - As shown in this figure, in the first layer the training sample is subdivided into two groups: 0 for KR7, KR6, KR5, KR4 firms and 1 for KR3, KR2, KR1, D companies.
0.085374 - Only one neural network runs, able to classify firms in correct group.
0.076421 - In the second layer, two artificial neural networks run.
0.020833 - The first one groups KR7 and KR6 as 0 and KR5 and KR4 as 1; the second network selects KR3 and KR2 firms as 0 and KR1 and D as 1.
0.069576 - At the end, in the third layer, 4 neural networks run.
0.079208 - Each model subdivides firms into two groups (0 an 1) and each firm will be classified in its correct class of rating.
0.091259 - The proposed model exploits the properties of artificial neural network and minimizes the potential error that should incur using the network with non dichotomous output.
0.226150 - The results are very surprising because they confirm the ability of a model to simulate correctly the rating also for firms with poor data.
0.077922 - The database used for testing the model is formed by all Italian manufacturing firms.
0.072072 - After introducing data into the model a pre-processing methodology has been adopted.
0.041026 - Input variables are the same considered in the previous model.
0.090101 - The steps of firm selection are the following three: (1) For each n-th firm the norm of indexes (Nn) introduced in the model has been calculated: (2) The mean and the variance of norms have been computed; (3) All firms with a norm value higher than the mean of norms plus once the variance are deleted from the database.
0.093828 - Nevertheless this procedure has been run not on the whole database but after a clustering on a base of firm size and rating judgement.
0.056075 - In this manner firms have been subdivided into 5 classes of size5 and inside these groups they are subdivided into the 8 rating classes.
0.036036 - This means that the procedure for deleting outliers has been run 40 times.
0.011204 - In this manner the spikes are deleted taking into account both the size effect and the economic-financial performance aspect and the outliers are dropped from the database.
0.125829 - In Fig 6a there is the plot of the norms for the group of big KR7 firms with spikes in red circles.
0.042105 - In Fig 6b the histogram of norms, the mean (red vertical line) and the median (yellow vertical line) are shown.
0.044944 - Green vertical lines in Fig 6b represent the mean of norm plus respectively once and twice the variance.
0.096386 - (a) Plot of norms and spikes – (b) histogram of norms, mean and variance [Big… Fig 6.
0.112450 - (a) Plot of norms and spikes – (b) histogram of norms, mean and variance [Big KR7 firms].
0.104079 - After the firm selection process and the elimination of firms with missing value in necessary variables, the training database is formed by 35,978 units.
0.150354 - For improving results, three models are performed, on a base of size of firm (Micro, Small and Other).
0.051282 - Table 2 represents statistics on the training sample and validation one, considering that elements of validation are not passed by pre-processing phase.
0.000000 - Table 2.
0.023810 - Descriptive statistics on training and validation sets.
0.039186 - Rating classes Training Validation Size Size Micro Small Other Total Micro Small Other Total D 521 255 79 855 67 7 8 82 KR1 744 154 34 932 80 17 3 100 KR2 2,267 871 139 3,277 248 96 15 359 KR3 2,863 1,623 509 4,995 284 180 56 520 KR4 3,872 3,002 1,757 8,631 321 330 195 846 KR5 2,495 2,043 1,502 6,040 235 220 166 621 KR6 3,947 2,944 2,034 8,925 405 320 226 951 KR7 1,058 719 546 2,323 120 80 60 260 Total 17,767 11,611 6,600 35,978 1,760 1,250 729 3,739 For simulating rating of presented firms the feed-forward artificial neural network with back-propagation tested in the previous section has been introduced in the proposed three-layer model including the threshold search algorithm in training phase.
0.118750 - This framework should minimize the number of big errors (more than one class) that could be very destructive for economic-financial evaluation of firms.
0.000000 - One-class errors are considered less incident because the difference in judgments between sequential classes are not very big.
0.039216 - A pre-test has been made on the whole database, not subdivided on a base of size and the results were good if two-or-more class errors are considered (0.41%) but one-class errors, also if less serious, are many still (37.63%).
0.020513 - Nevertheless another test has been made on the same data.
0.106443 - Subdividing the data on a base of three-size (Micro, Small and Other), for each dimensional class a specific model ran, providing more persuasive results, presented in Figs.
0.000000 - 7–9.
0.024242 - In these figures empirical outputs (called “Network Outputs”) are depicted with black five-pointed stars (∂) whereas red square (o) are expected results (called “BvD Outputs”).
0.045198 - Yellow lines represent the errors made by models.
0.166189 - Three-layer artificial neural network for micro firms Fig 7.
0.183349 - Three-layer artificial neural network for micro firms.
0.166189 - Three-layer artificial neural network for small firms Fig 8.
0.183349 - Three-layer artificial neural network for small firms.
0.166189 - Three-layer artificial neural network for other firms Fig 9.
0.183349 - Three-layer artificial neural network for other firms.
0.064516 - Micro firms (Fig 7) are the largest and heterogeneous group and for this reason the number of errors is big but, the model does not commit two or more class mistake (0%), whereas 492 are firms not correctly classified (28%).
0.102974 - The second group of firms are Small sized.
0.052142 - This sample is both less numerous and less heterogeneous than that of Micro units and the effect on the network performance is that the number of one-class errors diminishes to 2.23% (29 non-correct classification, Fig 8) whereas two-or-more class errors are always 0.
0.054264 - The last sample is formed by firms of non-micro and non-small size (so that “Other”).
0.032000 - This is the smallest group of elements and the results are very good as Fig 9 shows (19 one-class error, 2.61% and 0 two-or-more class mistakes).
0.039341 - The results we obtained confirm that artificial neural networks are very good tools in generalization and classification.
0.125676 - These proved characteristics allow to use neural network for solving problem in many different fields.
0.165850 - This paper proposes the well known methodology of artificial neural networks applied to financial problem of default of firms and rating judgements.
0.050000 - In particular, generalization property is exploited so that to provide good solution to financial problem.
0.054422 - The study concurs to economic literature proposing a first tool able to forecast the default event two years before the bankruptcy.
0.167342 - This model is used for validating the ability of network in generalization and in forecasting.
0.135135 - Moreover, a threshold search algorithm for minimising errors of network has been built.
0.253586 - A second model, the three-layer neural network framework, uses the previous tested model for simulating rating judgements of firms with scarce data and covering missing values that often pose a threat to significance of analyses.
0.035088 - This problem is frequent in Italy because firms are micro or small sized and it is difficult to study them.
0.071795 - The results are very good for both the models presented.
0.061069 - From these issues stems the possibility to propose the tool to banks, as internal rating system, or to micro and small firms for having a previous evaluation before asking for a loan.
0.028986 - Nevertheless, it is necessary to perform better the results because the test has been made only on manufacturing firms.
0.042105 - Moreover, it could be interesting to use cluster analysis in a previous phase and to see if results are different.
0.108108 - 1 For a deeper illustration of techniques see Ravi Kumar and Ravi (2007).
0.041026 - 2 Bureau van Dijk is a company born in 1991.
0.074906 - Its product range includes databases of company information and business intelligence for individual countries, regions and the world.
0.000000 - Its global database, ORBIS, combines information from around 100 sources and covers approaching 65 million companies.
0.070796 - 3 AIDA is a database edited by Bureau van Dijk that contains comprehensive information on listed companies in Italy, with up to five years of history.
0.082725 - Provided information are about accessible accounts following the scheme of the 4th directive CEE, probabilities of default and rating assessments, over to provide information about identification number, address and trade description of collected firms.
0.037383 - 4 K Finance is a consultancy firm that offers advisory on: mergers & acquisitions, private equity deals, planning & control, fairness opinions, structured finance deals, listings.
0.070796 - 5 The firm size has been defined on a base of sales (S): Firm=ifS⩽€2mlnMicroif€2mln<S⩽€10mlnSmallif€10mln<S⩽€50mlnMeanif€50mln<S⩽€290mlnBigifS>€290mlnLarge

[Frase 54] First model: validation of network The first step of the analysis was to define a model for forecasting default probability of firms starting from a database of failed and best performance firms.
[Frase 177] The results are very surprising because they confirm the ability of a model to simulate correctly the rating also for firms with poor data.
[Frase 218] This paper proposes the well known methodology of artificial neural networks applied to financial problem of default of firms and rating judgements.
[Frase 159] Second model: rating simulation After validating the feed-forward artificial neural network with back-propagation algorithm and having computed a performing algorithm for classifying firms into healthy and failed ones, this study shows as the previous tested network can be used for simulating rating values of firms.
