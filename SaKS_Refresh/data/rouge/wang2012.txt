A GCBR algorithm is proposed. GCBR algorithm resolves decision with multiple objectives and hierarchical criteria. GCBR is a recommender to provide cases for multiple decision-making stages. GCBR is implemented using genetic algorithm to reduce the case evaluation effort. Using GCBR for making travel-planning recommendations can reduce about 80% effort.

0.120244 - Case-based reasoning (CBR) algorithm is particularly suitable for solving ill-defined and unstructured decision-making problems in many different areas.
0.091324 - The traditional CBR algorithm, however, is inappropriate to deal with complicated problems and therefore needs to be further revised.
0.126126 - This study thus proposes a next-generation CBR (GCBR) model and algorithm.
0.178754 - GCBR presents as a new problem-solving paradigm that is a case-based recommender mechanism for assisting decision making.
0.113494 - GCBR can resolve decision-making problems by using hierarchical criteria architecture (HCA) problem representation which involves multiple decision objectives on each level of hierarchical, multiple-level decision criteria, thereby enables decision makers to identify problems more precisely.
0.163271 - Additionally, the proposed GCBR can also provide decision makers with series of cases in support of these multiple decision-making stages.
0.206822 - GCBR furthermore employs a genetic algorithm in its implementation in order to reduce the effort involved in case evaluation.
0.140732 - This study found experimentally that using GCBR for making travel-planning recommendations involved approximately 80% effort than traditional CBR, and therefore concluded that GCBR should be the next generation of case-based reasoning algorithms and can be applied to actual case-based recommender mechanism implementation.
0.070418 - Case based reasoning (CBR) is a paradigm, concept, and intuitive mechanism for solving ill-defined and unstructured problems (Belecheanu, Pawar, Barson, Bredehorst, & Weber, 2003).
0.045662 - Similar to the natural human problem-solving process, CBR retrieves past experiences for reuse in regard to target problems.
0.062827 - Since such process is likely to need to revise previous-case solutions before applying them, CBR then retains successful problem-solving experiences for further reuse (Aamodt & Plaza, 1994).
0.044077 - This, then, is traditional CBR’s 4R processes of retrieve, reuse, revise, and retain.
0.109890 - CBR is therefore a classical artificial intelligence algorithm.
0.000000 - Many have applied CBR within various problem-solving domains (Aamodt & Plaza, 1994; Kolodner, 1993; Shiu & Pal, 2001; Waston, 1997).
0.041237 - Cirovic and Cekic (2002) applied CBR to construction projects during their preliminary design phase by retrieving historical cases from a historical project database, storing useful case(s) in their construction knowledge base, and then applying the most similar previous case(s) to improve the quality of construction designs.
0.000000 - Belecheanu et al.
0.035764 - (2003) referred to past records in order to reduce information uncertainty in regard to such industrial requirements as those involved in new product development, particularly when employing the concurrent engineering approach.
0.026534 - Furthermore, Chang (2005) applied CBR to screening children with delayed development in order to detect their disorder early through analysis of their symptoms, thereby improving the chances of effective treatment.
0.033167 - Both Garrell, Golobardes, Bernado, and Llora (1999) and Golobardes, Llora, Salamo, and Marti (2002) have used CBR to diagnose breast cancer based on mammary biopsy data and micro calcifications, respectively.
0.061947 - Additionally, Shimazu, Shibata, and Nihei (2001) applied conversational case-based algorithm (CCBR) to developing a mentor guide for user helpdesk implementation and Shimazu (2002) applied CCBR to automatic-clerk mechanisms and electronic website shopping assistance.
0.034529 - Researchers have historically tended to solve these problems by using such mathematical models as regressions but these mathematical models involve too many assumptions to be applied effectively to real-world problem solving, and CBR seems to be a feasible alternative.
0.076756 - Researchers have until recently extended CBR applications as mechanisms for making recommendations based on previous cases.
0.077460 - Yang and Wang (2009a) applied the CBR algorithm to information-system project management as a recommender mechanism by offering project managers preferences from previous cases to help project managers construct new project plans.
0.055556 - They also applied similar mechanisms to travel-schedule planning.
0.064263 - Educators, furthermore, can integrate CBR recommender mechanism into e-learning systems to provide learners with reference-certification paths (2009b).
0.030612 - Such real-world problems as these are usually difficult to formulate within strict mathematical models, and people have often solved them using experiences they obtain by word-of-mouth.
0.028674 - Some studies (Adomavicius & Kwon, 2007; Adomavicius & Tuzhilin, 2005) have also recommended that the next generation of recommender mechanisms should focus on real-life problem solving and applications.
0.061728 - Case-based recommender mechanisms are therefore particularly appropriate for solving unstructured problems because people can use the CBR style to describe them and should therefore be regarded as a new problem-solving paradigm.
0.087121 - In order to create such a mechanism it is necessary to review, redefine, and expand both the traditional recommender mechanisms and the original CBR algorithms.
0.142566 - Using the traditional CBR algorithm for complex problems requires retrieving each case for the decision makers’ multiple objectives.
0.090329 - As decision-making problems become increasingly complicated, however, a merely multiple-objective problem representation becomes too unsophisticated to reflect their reality.
0.089552 - A revised case-based recommender mechanism equipped with the ability to address more complicated real-life problems is therefore necessary, as obtaining actionable information is particularly valuable for decision makers.
0.055325 - Cao and Zhang (2007) found that existing recommender mechanisms cannot provide decision makers with a direction in which to take action, even though recommender mechanisms should be able to tell decision makers what to do next (Yang, 2007).
0.077310 - Based on the previous cases that CBRs have retrieved, a next-generation recommender mechanism needs to have the ability to provide decision makers with better directions in regard to what actions to take.
0.050972 - Furthermore, traditional CBR mechanisms have to evaluate all the cases in the case base to retrieve those most similar case(s) which makes their efficiency strongly and negatively related to the size of the applicable case base.
0.072547 - Consequently, researchers have therefore developed numerous approaches to decreasing the effort involved in case evaluation, with K-means being the most popular approaches.
0.059530 - K-CBR, which involves integrating CBR with the k-means approach, first clusters all the cases and only evaluates those from the most similar cluster for case retrieval.
0.019417 - Chang and Lai (2005) then attempted to apply self-organizing maps (SOMs), and found that SOM-CBR outperformed k-CBR, although both k-CBR and SOM-CBR improved CBR’s efficiency.
0.041231 - The performances of the two revised CBR mechanisms are, however, closely related to the case representation and indexing approach (Shin & Han, 1999), so their superior performances are unstable and cannot be guaranteed.
0.133064 - This study therefore proposes a revised case-based recommender mechanism, to which it refers as the next-generation CBR (GCBR) algorithm.
0.141077 - GCBR is also applicable to various real-world applications, particularly case-based recommender mechanisms, and can serve as a new problem-solving paradigm.
0.137805 - GCBR is designed to improve traditional CBR’s efficiency and stability regardless of the case representation and indexing approach employed.
0.048048 - Section 2 of this paper presents a new method for describing problems.
0.093023 - Section 3 presents the proposed GCBR model.
0.086514 - Section 4 reports an experiment using this model and also presents a scenario illustrating GCBR application.
0.027778 - Section 5 presents conclusions and proposes future research directions.
0.062397 - Descriptions of decision-making problems involving multiple objectives become too complicated to represent them adequately (Coello, 2000) but if decision makers are unable to conceptualize such problems clearly they are unlikely to devise trustworthy and useful solutions.
0.078717 - This study has therefore adopted a new representation methodology for describing decision-making problems called the hierarchical criteria architecture (HCA) in order to enable decision makers to state their problems adequately (Yang & Wang, 2008).
0.057971 - This follows Adomavicius and Tuzhilin’s (2005) recommendation that a next-generation recommender system should be able to solve multi-dimensional problems.
0.068410 - HCA can enhance descriptions of problems involving multiple objectives by enabling decision makers to describe each decision’s objectives with the appropriate amount of detail.
0.054581 - The solutions to problems described using HCA are therefore more valuable than those using other methods because decision makers can represent such problems accurately.
0.063857 - Fig 1 illustrates how describing problems using HCA allows decision makers to consider them from a multi-criteria perspective while still reducing each criterion hierarchically until reaching the required level of detail with the description remaining sufficiently detailed to represent the problem.
0.115485 - HCA is therefore an improved and enhanced methodology for presenting decision-making problems.
0.000000 - HCA problem representation methodology Fig 1.
0.000000 - HCA problem representation methodology.
0.065097 - Fig 2 illustrates a hypothetical e-learning system problem in which learners must use the recommender system to retrieve a similar previous case or cases for an information technology (IT) certification examination reference and learning-path suggestion.
0.079346 - By representing this decision-making problem using HCA, learners can set three objectives for their decisions comparing the similarity of such data in the case-base as those in regard to personal demographics, capabilities, and learning paths.
0.028369 - They may also decide that they can measure personal capabilities with work experience and thereby achieve IT certification.
0.030905 - They can therefore increase the detail of the target conditions until they consider the problem description to be sufficiently complete.
0.026403 - An IT certification recommender problem described by HCA Fig 2.
0.029304 - An IT certification recommender problem described by HCA.
0.127011 - To address the HCA problem, this study has revised Yang and Wang’s (2008) revised CBR algorithm and used it to propose a case-based recommender mechanism that is a GCBR algorithm.
0.013201 - Table 1 shows its variables and their definitions and descriptions.
0.000000 - Table 1.
0.105263 - GCBR variables definitions and description.
0.051881 - Variable Definition and description n The number of cases in the case base Ci The ith case of the case base, i = 1, 2, … , n fet Features used to describe a case m The number of features each case employs T The target case inputted by the decision makers.
0.030722 - The recommender mechanism provides them with feasible reference cases according to the target case’s condition fetj To present the jth feature, that wgtfet Decision makers can assign an importance weighting to the feature, , to denote the importance weight of the jth feature; j = 1, 2, … , m difference(Ci) difference(Ci) is an array that records the degree of difference between the ith case and the target case (T), which is evaluated by Eq (5), i = 1, 2, … , n gap To evaluate the jth feature gap of the ith case and T, i = 1, 2, … , n, j = 1, 2, … , m, by Eq (4) level(fetj) To return to the condition that decision makers set on the jth feature threshold Decision makers can set the gap threshold.
0.075658 - If the difference in a case is less than the threshold, it provides the case as a reference next_level(fetj) To retrieve the next level feature of the jth feature fet_check_function To evaluate the gap between the jth feature and T k The numbers of stages, k, that decision makers expect the recommendation system to require for providing a feasible suggestion The revised GCBR algorithm has three characteristics.
0.119729 - One indicates that GCBR is a generalized problem-solving model because of its ability to help solve HCA problems.
0.085112 - Similar to traditional CBR problems, HCA problems can include multiple objectives on a single level.
0.072072 - Furthermore, each decision’s objectives can be divided into multiple hierarchical levels.
0.132736 - Another characteristic is that GCBR acts as a predictor in support of multi-stage decision making.
0.123288 - GCBR can provide decision makers with a series of cases stage by stage suggesting reference cases in each stage.
0.108108 - This refined information is useful for decision makers in revising their solutions.
0.067922 - The third characteristic is that its performance is superior to that of the traditional CBR algorithm because it employs a genetic algorithm (GA) to keep the convergence rate stable, thereby increasing the efficiency of the solution process.
0.073088 - GCBR as a generalized problem-solving model The traditional CBR algorithm’s 4R steps are that CBR retrieves the feasible cases so that decision makers may either reuse the solution of these retrieved cases directly or revise the solution according to real applications; CBR then retains the successful case or cases and the solution in the case base for further reference.
0.057348 - This process is similar to that of ordinary human problem solving, and many have applied CBR successfully to a variety of contexts during the past few decades.
0.076011 - Its core algorithm evaluates the similarity of the target case (T) with the cases in the case base.
0.054605 - The retrieval sub-algorithm evaluates the similarity between the target and each case in the case base by summarizing each feature’s gap, which describes that case in detail.
0.033126 - CBR judges the similarity here by calculating the difference between each case and the target, the similarity increasing as the difference decreases.
0.053922 - Each feature has a fet-check-function to evaluate the features’ similarity, as illustrated in Fig 3.
0.049383 - Fet-check-rewrite algorithm Fig 3.
0.056338 - Fet-check-rewrite algorithm.
0.056738 - The fet-check-function is set to either total or partial similar according to the feature’s characteristics.
0.041667 - For partial similarity, the check function returns a real number between 0, indicating that they are identical, and 1, indicating that they are totally different.
0.012012 - The total similar fet-chedk-function, however, returns either 1 or 0.
0.050682 - For example, if the target’s gender feature is female and casei is male, the gap between the target and casei would be 1.
0.066158 - The difference between casei and the target is therefore the gap as calculated using Eq (1).
0.120739 - GCBR then selects the case with the smallest gap as the most feasible solution and provides it to the decision makers for reference.
0.103794 - (1) The case-retrieval sub-algorithm needs to be revised, however, because the problems that GCBR addresses involve hierarchical levels of criteria.
0.040712 - This study therefore proposes the recursive sub-algorithm fet-check-rewrite, as shown in Fig 3.
0.128791 - This algorithm is a recursive one for rewriting fet-check-function in order to allow GCBR to manage the HCA problem.
0.007576 - When the HCA feature level exceeds 1, such as in level (fet) > 1, the weighted sum of the next level replaces the fet-check-rewrite.
0.032154 - For example, according to the IT certification example illustrated in Fig 2 the similarity evaluation function should be altered, as shown in Fig 4, to consider three levels recursively, so its consideration of level 3, which is the dash-block area, precedes that of level 2, which precedes that of level 1.
0.123308 - The Fet-check-rewrite mechanism is a function that returns the revised feature-check-function to GCBR’s core algorithm in order to evaluate the case’s similarity with the target.
0.037736 - Example of a similarity evaluation in an HCA problem Fig 4.
0.041667 - Example of a similarity evaluation in an HCA problem.
0.042885 - Fig 5 compares the gap between the features of specific cases with the target using the fet-check-function, as shown in Eq (2).
0.060122 - Eq (3) then summarizes the feature gap to evaluate the similarity between the target and each case in the case base.
0.043956 - Fig 6 presents Fig 5’s Reuse algorithm.
0.070875 - Following Yang and Wang’s (2009a) procedure, GCBR then analyzes the retrieved case or cases further using the knowledge discovery (KDD) mechanism, which includes association mining techniques and statistical analyses to produce potential knowledge rules and then provide decision makers with revised case information upon which they can take action.
0.066510 - Yang and Wang (2008) claimed that simply presenting the retrieved case or cases to decision makers is useless because the case filtering performs poorly under loose target conditions.
0.073395 - The system should therefore employ data mining analysis to identify knowledge with the potential to assist in decision making.
0.075269 - Except for the retrieved cases, KDD results can also provide decision makers with refined information for revising actions in order to improve the quality of their decisions.
0.131868 - GCBR’s single-stage reasoning algorithm Fig 5.
0.148148 - GCBR’s single-stage reasoning algorithm.
0.059406 - The single-stage reasoning algorithm’s reuse algorithm Fig 6.
0.065934 - The single-stage reasoning algorithm’s reuse algorithm.
0.101545 - GCBR as a prophet recommender: multiple stages of recommendations A next-generation recommender should also support multiple stages of recommendations.
0.092600 - People are likely to face multi-stage decision-making problems in such situations as making travel plans for several days, in which they need a recommender mechanism that provides a suggestion package with detailed action recommendations for each stage.
0.051724 - Almost all current case-based recommender mechanisms, however, involve only single-stage reasoning.
0.153092 - Fig 7 shows how GCBR provides a series of cases to support multi-stage decision making.
0.084679 - Few previous studies have paid much attention to multi-stage decision making.
0.057274 - Smyth, Keane, and Cunningham (2001) described the technique of hierarchical case-based reasoning, which borrows ideas from hierarchical planning and uses a divide-and-conquer strategy to enable the solution of complex problems by reusing multiple cases at various levels of abstraction along an abstract-to-concrete continuum.
0.042328 - They employed this technique to design device-control or process-control software for industrial applications.
0.069508 - Their focus differs, however, from multi-stage decision making in the real world.
0.070175 - To implement a real multi-stage case-based recommender, the target requirements should be rewritten in each stage according to previous actions or responses.
0.128021 - The target-rewrite-mechanism is a core algorithm applicable to multiple stages of reasoning, as Fig 8 illustrates.
0.104167 - The multiple stage GCBR process, including KDD Fig 7.
0.116279 - The multiple stage GCBR process, including KDD.
0.131944 - The GCBR’s multi-stage reasoning algorithm Fig 8.
0.147287 - The GCBR’s multi-stage reasoning algorithm.
0.050682 - Fig 8 illustrates an overall case feature that includes a consumption feature, an accumulation feature, a replacement feature, and a feature for other factors.
0.028369 - With the first three, the actions or responses of each stage change the feature values of the next.
0.060332 - Performing the recommender for the next stage’s recommendations therefore requires rewriting the target features, so the target-rewrite-mechanism is able to call the fet-changecheck-function to check for any changes necessary.
0.076336 - The algorithm then alters these features and generates a new target the next stage of reasoning.
0.059447 - Fig 9 presents an example involving sightseeing in which the available budget, which is the consumption feature, for travel planning decreases with each stage, while the ever-been-sightseeing factor, which is the accumulation feature, increases accordingly.
0.111111 - The algorithm therefore needs to alter the target before performing the next case-recommendation stage.
0.070393 - GCBR must first deduct the previous stage’s sightseeing entrance fees from the available budget feature to obtain the new available budget.
0.039216 - It also needs to incorporate the site visited in the previous stage into the ever-been-sightseeing feature, as most travelers do not want to repeatedly visit the same sites during a short vacation.
0.076563 - In order to provide recommendations for the next stage it should therefore revise the target to recognize the previous stages’ actions and responses.
0.012579 - The sightseeing example’s target-rewriting-mechanism in the… Fig 9.
0.040230 - The sightseeing example’s target-rewriting-mechanism in the budget-changecheck-function algorithm.
0.078183 - GCBR improving efficiency via GA The GCBR algorithm’s overall complexity exceeds that of traditional CBR in order to fulfill its reasoning’s general and forecasting potential, even with the adoption of the revised CBR (2008).
0.053258 - The traditional CBR’s reasoning process compares every case in the case base in order to obtain feasible cases to refer to the decision makers.
0.075055 - As the problem requiring a decision becomes more complicated, however, the reasoning process is likely to become increasingly time-consuming.
0.039673 - As the number of features increases, furthermore, the evaluation of the similarities between the cases and the target takes up an increasing amount of computer memory, particularly if the problem’s description is in the HCA style.
0.074074 - GCBR’s efficiency therefore needs to improve in order to enable it to function well.
0.013201 - Some works have integrated CBR with other artificial intelligence techniques.
0.054133 - Juan, Shin, and Perng (2006) combined CBR with a GA to customize housing plans, Shin and Han (1999) used one to support CBR in order to enhance classification accuracy, and Yang and Wang (2009a), Yang and Wang (2009b) also successfully combined a GA with CBR to accelerate case evaluation.
0.013201 - These approaches integrating GAs with CBR have exhibited superior performance.
0.042042 - It therefore seems to be a good method of improving CBR efficiency.
0.128190 - (4) (5) This study also implemented GCBR using a genetic algorithm that expressed the HCA problem using goal programming.
0.093023 - GCBR employed the goal gap in Eqs.
0.046512 - (4) and (5) as a fitness function.
0.032129 - It further regarded the gap between casei and T as the survival probability and used it in the evolution of the next generation.
0.030303 - If casei has the smallest gap from target, then this study regards it as an outstanding gene, and thereby has a higher probability of survival.
0.028736 - It has, furthermore, adopted the robin-wheel selection mechanism to perform GA selection.
0.025641 - The higher the survival probability, therefore, the higher the possibility that the gene or genes could persist to the final generation.
0.081489 - Finally, the best chromosome, which consists of the fittest gene, represents a series of retrieved cases for the decision makers’ reference.
0.071247 - We conducted an experiment to validate the general GCBR model’s efficiency by validating its characteristics.
0.072289 - To do this, we designed an HCA problem, implemented the model on GCBR, and compared its experimental efficiency with that of traditional CBR.
0.095890 - This section also presents a scenario illustrating a proposed IT certification path to explain the recommender’s multiple stages.
0.073529 - Experiment 1: travel case recommender We obtained the experimental cases from a free online dataset called Travel.
0.042735 - Each of the 1024 cases had 14 features and the three dimensions of metadata structure of traveler, holiday content, and budget.
0.000000 - Fig 10 illustrates this.
0.068410 - For each dimension, decision makers could set such hierarchal criteria as budget, travel duration, and hotel accommodation for each dimension for the entire travel program.
0.000000 - Meta-data structure of Experiment 1 Fig 10.
0.000000 - Meta-data structure of Experiment 1.
0.045802 - Fig 11 shows how decision makers can input their query target conditions via a web interface.
0.046512 - Fig 11(a) displays the three dimensions.
0.068100 - Decision makers can input their query conditions for each dimension and then give a real number, from 0 to 1, to represent the importance of each feature.
0.072072 - We standardized these importance weights and used them to evaluate further similarity.
0.050682 - Fig 11(b) shows how clicking on “Budget Dimension” prompts the lower level features of “Travel Duration” and “Hotel Accommodation” to the decision makers.
0.050924 - Since it describes the problem in an HCA style, this web interface enables users to reduce target conditions accordingly to make them more specific.
0.060060 - Demonstration of an HCA case-based recommendation for Experiment 1 Fig 11.
0.066007 - Demonstration of an HCA case-based recommendation for Experiment 1.
0.000000 - As described above, each feature has its fet-check-function.
0.029304 - The following function therefore replaces the similarity evaluation.
0.013889 - The fet-check-rewrite mechanism then rewrites each dimension.
0.034682 - Level 1: Level 2: The experiment assumed that the decision maker intended to spend no more than $2500, with an importance weight of 0.7, that at least two persons would travel on the trip, with an importance weight of 0.4, and that they wanted a vacation focused on active travel, with an importance weight of 0.5.
0.040332 - In regard to the budget the experimental decision maker set the trip’s duration at a minimum of seven days, with an importance weight of 0.4, and set the standard of staying at three-star accommodation at the minimum, with an importance weight 0.4.
0.052980 - Within the holiday content dimension the decision maker preferred to travel in summer, with an importance weigh of 0.3.
0.063348 - We addressed this problem by applying GCBR, using the different crossover rates of C = 0.3 and C = 0.5 and mutation rates of M = 0.1 and M = 0.01 for five generations.
0.073918 - In an average time of 0.2398 s the program retrieved five cases for the decision maker.
0.016461 - Table 2 shows the efficiency comparison.
0.000000 - Table 2.
0.081761 - Efficiency comparison of the GCBR and traditional CBR in Experiment 1.
0.028260 - Crossover rate Mutation rate Cases evaluated Number of cases suggested Amount Compared to traditional CBR C = 0.3 0.01 212 Reduced 79.30% 4 0.10 190 Reduced 81.45% 3 C = 0.5 0.01 209 Reduced 79.59% 5 0.10 185 Reduced 81.93% 4 Fig 12 illustrates the experiment’s results.
0.048565 - The program has standardized the target’s importance weights and displayed them and the convergence time to the decision maker.
0.089546 - It has listed all five of the cases it has retrieved on the screen for reference, and the decision maker can click on the button “GCBR Stage II,” which is the data mining process, to obtain more refined information.
0.051189 - These target conditions have produced such findings as that the costs range from a minimum of $988 to a maximum of $2355, that three persons are apparently the perfect number for such a travel plan, that the optimal trip length is apparently 14 days, and that a car is apparently the best method of travel.
0.068627 - Information with this level of detail provides decision makers with a sound basis for revising their actions.
0.014652 - Demonstration of the Experimental 1 result Fig 12.
0.016461 - Demonstration of the Experimental 1 result.
0.000000 - We then tested different parameter combinations.
0.023392 - Fig 13 shows that experiment’s results, which indicate a stable convergence rate at 3–4 generations that was higher with lower crossover rates.
0.082645 - The suggested parameters for GCBR are therefore C = 0.3 and M = 0.01.
0.119048 - As Table 2 shows, GCBR can therefore reduce for evaluation approximately 80% more cases than traditional CBR and still provide decision makers with a sufficient number of reference cases.
0.000000 - Convergence of different parameter combinations in Experiment 1 Fig 13.
0.000000 - Convergence of different parameter combinations in Experiment 1.
0.068182 - Experiment 2: IT certification recommender IT certification is increasingly important for obtaining employment in the industry, and employers frequently consider it a key screening mechanism.
0.033854 - Venator (2006) contended that such certification, as well as educational background, has become a standard for determining applicants’ suitability as IT workers, and Jo (2005) concluded further that IT certification increases women’s career opportunities, particularly in regard to information security.
0.073529 - It seems to be a master key for unlocking the doors to job opportunities and career promotion.
0.010178 - Almost all IT students have the goal of obtaining it, as do IT workers (Brookshire, 2002).
0.055016 - However, the examinations for earning it are interminable, as approximately 200–400 computer-related certifications exist (Zeng, 2004), and the only way to obtain them is to pass the required exams.
0.061069 - Their number, furthermore, is continuously increasing, and their content changes by roughly 10% to 15% annually.
0.050314 - Certification exams are therefore a major concern for many IT workers.
0.036036 - Even exam veterans have such problems in regard to preparing for and taking them as deciding which ones to take, learning what the current certification is, what the required courses are, and what the restrictions for applying for them are, and finding the optimal method of preparing for them.
0.074074 - They need a personalized case-based recommendation mechanism to address these problems (Dolog & Sintek, 2004).
0.063492 - The following scenario illustrates this paper’s proposed multi-stage recommendation mechanism for IT certification.
0.044199 - A hypothetical student obtained her information-management master’s degree in 2003 and then served as a database management administer (DBA) for the ABC software company.
0.019608 - She passed the Cisco Certified Network Associate exam, obtained certification, and later obtained Oracle OCA 9i certification.
0.066225 - With these qualifications, she submitted a query about receiving a personalized recommendation in order to benefit from others’ examination experiences.
0.030303 - Fig 2 shows how she was able to use the system to establish comparison conditions according to her personal demographic data, capabilities, and learning path.
0.033058 - She also considered her work experience and current certification to be possible domain capabilities.
0.061827 - Fig 14 illustrates the multiple certification paths the system recommended to her in response to these target conditions.
0.014733 - The figure’s boldface italic characters represent domain knowledge and IT certification and indicate that the system verified her domain knowledge and the certification she obtained.
0.035320 - The connection between domain knowledge and IT certification, furthermore, represents the domain knowledge she needed to pass the certification exam.
0.078414 - The recommendation mechanism also offered a sequence of two IT certification exams in case she wanted the system to provide her with IT certification planning advice in two stages.
0.078947 - Multiple recommendation stages Fig 14.
0.090909 - Multiple recommendation stages.
0.031394 - The system therefore recommended that she obtain the Project Management Professional (PMP) certification first because it required no further preparation, followed by the Oracle OCA 10 g, which is an OCA 9i upgrade that requires more feature-domain knowledge in addition to that of the 10 g, and the Oracle OCP 9i, which is another advanced DBA certification requiring further domain knowledge.
0.029412 - The multi-path mechanism arranged the priorities for the certification paths based on their domain knowledge coverage.
0.034483 - Fig 14 shows the eight learning paths to which the system referred her.
0.000000 - These are: {{OCP 9i → OCA 10 g}, {OCP 9i → PMP}, {OCA 10 g → OCP 10 g}, {OCA 10 g → PMP}, {OCP 9i, OCA 10 g → OCP 10 g}, {OCP9i, OCA10 g → PMP}, {OCA 9i (if failed, test again) → OCA 9i}, {OCA 10 g (if failed, test again) → OCA 10 g}}.
0.030842 - She therefore had to consider whether she wished to become a professional DBA, for which an Oracle database certification would be suitable, or to extend her career’s scope, as project management apparently requires another career plan, so she could decide to work toward PMP certification.
0.015625 - The application’s constraints, however, warned her that she was not qualified to take the PMP exam, as the project management institution’s regulations stipulate that all examinees must attend at least 30 h of training classes at an approved institution.
0.039216 - She therefore must decide whether to work to fulfill this requirement or apply for some other certification.
0.045375 - From a lifelong learning perspective, recommending a series of related IT certifications to learners would enable them to feel confident that their career planning will match their expectations.
0.038462 - Providing them with a choice of a series of certification paths could also increase their confidence about their upcoming certification examinations.
0.079821 - This study has proposed an HCA method for describing complicated real-world decision-making problems.
0.048048 - Its problem descriptions enable decision makers to clarify problems requiring decisions systematically.
0.085467 - HCA is, furthermore, a generalized problem-representation methodology that subsumes the traditional method of describing multiple-objective problems.
0.108232 - This paper has also proposed the next generation case-based recommender mechanism GCBR for solving HCA problems.
0.121342 - GCBR retrieves feasible cases for reference and then applies the KDD mechanism to provide decision makers with refined information upon which to take action.
0.122905 - This study then found that GCBR can be implemented with a GA algorithm to accelerate the convergence of complex problems that its convergence rate is satisfactory, and that in the experimental case it reduced effort by approximately 80% from that of traditional CBR.
0.106336 - It can also provide solutions for problems with multiple stages.
0.059735 - This study’s hypothetical scenario illustrated that using it as an IT certification recommender can provide learners with a series of IT a certification path that enables them to feel confident that their career planning will match their expectations.
0.162543 - These characteristics enable decision makers to apply the GCBR algorithm as a general case-based recommendation mechanism.
0.060606 - The quality of each case obviously limits what case-based recommender mechanisms can do, so future studies need to address the problem of case cleaning.
0.112745 - Other studies need to consider more real-world applications for the algorithm and user satisfaction with GCBR.

[Frase 8] This study found experimentally that using GCBR for making travel-planning recommendations involved approximately 80% effort than traditional CBR, and therefore concluded that GCBR should be the next generation of case-based reasoning algorithms and can be applied to actual case-based recommender mechanism implementation.
[Frase 6] Additionally, the proposed GCBR can also provide decision makers with series of cases in support of these multiple decision-making stages.
[Frase 7] GCBR furthermore employs a genetic algorithm in its implementation in order to reduce the effort involved in case evaluation.
[Frase 5] GCBR can resolve decision-making problems by using hierarchical criteria architecture (HCA) problem representation which involves multiple decision objectives on each level of hierarchical, multiple-level decision criteria, thereby enables decision makers to identify problems more precisely.
[Frase 4] GCBR presents as a new problem-solving paradigm that is a case-based recommender mechanism for assisting decision making.
