We study the transit network design problem. We propose the simple greedy algorithm for generating the initial solution. We develop the model based on the Bee Colony Optimization (BCO) metaheuristic to discover the best transit network topology. The numerical experiments are performed on the known benchmark problems. The obtained numerical results show that the proposed approach can find high-quality solutions.

0.145460 - The transit network design problem is one of the most significant problems faced by transit operators and city authorities in the world.
0.103794 - This transportation planning problem belongs to the class of difficult combinatorial optimization problem, whose optimal solution is difficult to discover.
0.212730 - The paper develops a Swarm Intelligence (SI) based model for the transit network design problem.
0.112043 - When designing the transit network, we try to maximize the number of satisfied passengers, to minimize the total number of transfers, and to minimize the total travel time of all served passengers.
0.278337 - Our approach to the transit network design problem is based on the Bee Colony Optimization (BCO) metaheuristics.
0.119205 - The BCO algorithm is a stochastic, random-search technique that belongs to the class of population-based algorithms.
0.084465 - This technique uses a similarity among the way in which bees in nature look for food, and the way in which optimization algorithms search for an optimum of a combinatorial optimization problem.
0.249869 - The numerical experiments are performed on known benchmark problems.
0.193129 - We clearly show that our approach, based on the BCO algorithm, is competitive with other approaches in the literature, and it can generate high-quality solutions.
0.034483 - Urban road networks in a lot of countries are extremely congested.
0.056225 - The consequences are high travel times, unforeseen delays, increased travel costs, increased air pollution, noise level, and number of traffic accidents.
0.022130 - Transportation engineers and city authorities have developed and implemented various Travel Demand Management (TDM) techniques that increase travel choices to travelers (“Park-and-Ride facilities”, “High Occupancy Vehicle (HOV) facilities”, “Ride-sharing programs”, “Telecommuting”, “Congestion Pricing”).
0.082919 - Still, the raising of the modal share of public transit in the cities is one of the major activities to be performed by traffic planners and city authorities.
0.058273 - This could be done by proper design of public transit networks, expansion of existing lines and park and ride spaces, increasing the availability of direct service among origin–destination pairs, frequencies increase, development of the bus systems separated from the rest of the traffic network, transit service on nights and weekends, improving passengers’ comfort and schedule reliability, better information systems for passengers (visual terminals and broadcasting information), etc.
0.072618 - Properly designed public transit network can significantly increase public transport mode share.
0.137276 - The public transit network design problem is one of the most significant problems faced by bus operators and city authorities in the world.
0.103794 - This transportation planning problem belongs to the class of difficult combinatorial optimization problem, whose optimal solution is difficult to discover.
0.088782 - The bus network shape, as well as bus frequencies, highly depend on both passenger demand, and on the number and type of available buses (fleet size), and/or available budget.
0.030905 - Poorly designed bus network can cause very long passengers’ waiting times, and/or inexactness in bus arriving times.
0.100402 - In addition, inadequately designed network can show high inappropriateness among the designed bus routes and paths of the majority of users.
0.083885 - Many of the factors that should be taken into account when designing bus network are mutually in conflict.
0.102941 - For example, the shorter passengers waiting times, the higher the number of buses needed, etc.
0.102564 - When designing the bus network, the interests of both the operator and the passenger must be taken into account.
0.141077 - Due to the conflicting nature of these interests, we treat the bus network design problem as a multicriteria decision-making problem.
0.112043 - When designing the transit network, we try to maximize the number of satisfied passengers, to minimize the total number of transfers, and to minimize the total travel time of all served passengers.
0.240376 - In this paper we develop the model for the bus network design problem.
0.205487 - Our approach is based on the Bee Colony Optimization (BCO) metaheuristics.
0.119205 - The BCO algorithm is a stochastic, random-search technique that belongs to the class of population-based algorithms.
0.084465 - This technique uses a similarity among the way in which bees in nature look for food, and the way in which optimization algorithms search for an optimum of a combinatorial optimization problem.
0.208807 - The numerical experiments are performed on known benchmark problems, as well as on the problems generated by the authors of the paper.
0.100916 - Our approach is competitive with other approaches in the literature, and it can generate high-quality solutions within negligible CPU times.
0.118812 - The paper is organized in the following way.
0.000000 - Literature review is given in Section 2.
0.097222 - Section 3 contains statement of the problem.
0.132132 - Proposed solution to the problem is given in Section 4.
0.200386 - The BCO approach to the transit network design problem is explained in details in Section 5.
0.098786 - Experimental evaluation of the proposed approach is given in Section 6.
0.022989 - Recommendations for future research and conclusion are given in Section 7.
0.144740 - Various models for transit network design have been developed in the literature.
0.137825 - Lampkin and Saalmans (1967) proposed the first heuristic algorithm to design transit route network.
0.138237 - In the first step, the proposed algorithm produces an initial skeleton route.
0.104019 - In the next steps, the other nodes are inserting one by one into the skeleton route.
0.097130 - The case study of a small town in the North of England is also presented in the paper.
0.108132 - Silman, Barzily, and Passy (1974) proposed a two-staged approach for transit network design.
0.011494 - They first generated a set of route-candidates through several iterations.
0.126437 - The authors determined the optimal vehicle frequencies in the second stage.
0.000000 - Silman et al.
0.056225 - (1974) tried to minimize passengers travel time, while simultaneously taking care about the total number of passengers who cannot find seats.
0.083770 - Byrne (1975) considered the case when the region served by the public transit is a segment of a circle and may be defined in polar coordinates.
0.102171 - He proposed the model of a transit system that is built in polar coordinates with radial transit lines.
0.163691 - Mandl (1979) proposed heuristic algorithm to find the set of the best transit routes.
0.126984 - He reported the gained experiences in the case of some real world problems.
0.133224 - Newell (1979) performed theoretical analysis of the bus route network design problem.
0.052559 - He discussed various aspects of the problem and concluded that “in essence, our conclusion is that it would require a large computer and a vast amount of data to determine even a nearly optimal route geometry”.
0.101607 - Ceder and Wilson (1986) described the bus network design problem, analyzed previous concepts and proposed a two-level methodological approach for solving bus network design problem.
0.142935 - Baaj and Mahmassani (1995) proposed route generation algorithm (RGA) for the design of transit networks.
0.087355 - The proposed approach combined expert’s knowledge and search techniques using Artificial Intelligence tools.
0.009456 - Ceder and Israeli (1998) defined objective function that takes into account both passenger and operator interests.
0.210203 - The proposed model for the transit network design problem combines mathematical programming, and decision-making techniques.
0.114827 - When solving the bus route network design problem, Pattnaik, Mohan, and Tom (1998) proposed two step procedure.
0.121708 - They generated the set of the route candidates in the first step.
0.092715 - In the second step, the authors decided about the final set of routes by using the genetic algorithms.
0.063725 - Bielli, Caramia, and Carotenuto (2002) applied genetic algorithm approach when considering bus network optimization problem.
0.060606 - They tested their approach in the case of city of Parma, Italy.
0.209697 - Chakroborty (2003) also proposed procedures for solving the urban transit network design problem based on the Genetic Algorithm.
0.133717 - Lee and Vuchic (2005) considered the transit network design problem in the case of variable transit demand, under a given fixed total demand.
0.141609 - The authors offered iterative approach that takes care about the relationship between variable transit trip demand and transit network design.
0.233138 - The proposed approach is tested on the relatively small transit network.
0.107423 - Guan, Yang, and Wirasinghe (2003) proposed the model for simultaneous optimization of transit line configuration and passenger line assignment.
0.096691 - The proposed model is solved by branch and bound method.
0.158705 - Fan and Machemehl (2006) used the simulated annealing techniques to solve the optimal bus transit route network design problem.
0.138237 - The proposed concept is tested in the case of three experimental networks.
0.068376 - Zhao and Zeng (2006) combined genetic algorithm and simulated annealing while searching for the optimal route structures and headways.
0.058824 - The authors tried to minimize transfers and total user cost, and to maximize service coverage.
0.119286 - Zhao and Zeng (2007) developed the model for route network design, vehicle headways, and timetable assignment.
0.108229 - The proposed approach combines simulated annealing, and tabu search.
0.123932 - Desaulniers and Hickman (2007) reviewed the state-of-the-art models and approaches in solving complex public transit problems.
0.100457 - Fan and Machemehl (2008) considered the design of public transportation networks in the case of variable demand.
0.095238 - The authors developed multi-objective model.
0.132731 - The solution methodology is based on Tabu search method.
0.115498 - Guihaire and Hao (2008) classified 69 various approaches dealing with the transit network design and frequencies setting.
0.013889 - They also indicated trends for future research.
0.052079 - When solving route design and bus assignment problem, Pacheco, Alvarez, Casado, and Gonzalez-Velarde (2009) developed an algorithm based on local search strategy, as well as an algorithm based on a tabu search strategy.
0.122137 - The authors showed the robustness of their approach with respect to variations in demand.
0.111959 - The case study of the city of Burgos, Spain is presented in the paper.
0.073880 - Mauttone and Urquhart (2009) developed Pair Insertion Algorithm (PIA) that can be used to generate initial solutions for a local improvement or evolutionary algorithm.
0.102941 - The algorithm is inspired by the route generation algorithm (RGA) of Baaj and Mahmassani (1995).
0.124247 - Kepaptsoglou and Karlaftis (2009) presented and reviewed research results in the area of transit route network design problem.
0.081425 - Design objectives, operating environment parameters and solution approach are especially analyzed in the paper.
0.110375 - Fan and Mumford (2010) proposed a model of the urban transit routing problem that evaluates candidate route sets.
0.103291 - The proposed approach uses hill-climbing and simulated annealing techniques.
0.142566 - Bagloee and Ceder (2011) studied the design a transit network for the actual-size road networks.
0.170721 - The proposed algorithm was tested on the network of the city of Winnipeg, Canada, as well as on the transit network of Mandl benchmark.
0.137319 - The review paper of Derrible and Kenneday (2011) is devoted to the applications of the graph theory in transit network design.
0.103562 - Szeto and Wu (2011) studied the bus network design problem in the case of Tin Shui Wai, a suburban residential area in Hong Kong.
0.157641 - The authors proposed the model that simultaneously performs the route design and bus frequency setting.
0.132749 - The proposed solution method represents the combination of the genetic algorithm, and a neighborhood search heuristic.
0.085010 - Miandoabchi, Farahani, Dullaert, and Szeto (2012) studied the design of urban road and public transit networks, The proposed multicriteria model decides about construction of new roads, adding lanes to the existing roads, lane allocation in two way streets, and the orientation of the one way streets.
0.117469 - At the same time, the model proposes new routes of a given bus routes.
0.089835 - Schoebel (2012) made the review of the various bus, railway, tram, and underground line planning models.
0.132726 - Blum and Mathew (2012) studied the transit route network redesign problem.
0.127896 - The proposed approach was tested in the case of city of Mumbai, India.
0.082528 - One can conclude that the majority of authors tried to minimize total travel time, or generalized cost.
0.030534 - Simultaneously, greater part of papers introduced simplified assumption about fixed demand for transit services.
0.164363 - More realistic assumption is the assumption that passenger flows depend on the transit network design, and that should be determined as a solution of an equilibrium problem.
0.122205 - The decision variables are transit network route configuration and/or bus frequencies.
0.051565 - Papers in the open literature also dealt with both type of passengers’ assignment among possible transit routes: single path assignment and multiple path assignment.
0.118721 - Due to the problem hardness and computational complexity, the majority of papers offer heuristic, or metaheuristic approach.
0.132184 - Let us consider the road network shown in the Fig 1.
0.070175 - We denote this network by G = (N, A), where N is the set of nodes, and A set of links (street segments).
0.000000 - Nodes represent potential bus stops (intersections, zone centroids).
0.019608 - Any path used by transit passengers is defined by a sequence of nodes, and links.
0.223312 - We study the transit network design problem in the case of connected undirected street networks.
0.079470 - Connected street network assumes that any two nodes in the network are connected by at least one path.
0.032922 - Road network Fig 1.
0.037559 - Road network.
0.092962 - Within transit network design problem we search for the best possible set of routes R. In other words, we make the decision about the links from the set A to be included in the set of routes R, as well as the decision how to bring together chosen links into the fixed transit routes.
0.070393 - In addition to this, authors in some cases also determine frequency of transit service on each of the defined routes.
0.118280 - The main indicator that we use to describe the level of transit service is the total travel time spent by the users of transit service.
0.180180 - We express the quality of the solution generated in minutes.
0.052351 - We calculate the total travel time of all passengers T in the network in the following way: (1) where TT – total in-vehicle time of all served passengers, TTR – the total number of transfers in the network, TU – the total number of unsatisfied passengers (we assume that the passenger is unsatisfied when she/he has to make more than two transfers during the trip), w1 – time penalty for one transfer, w2 – time penalty for one unsatisfied passenger.
0.125448 - When measuring the quality of the solution generated, we take into account the total number of transfers, since transfers keep back passengers to use transit.
0.147126 - Obviously, the total number of transfers may be decreased by optimizing the configuration of the transit network.
0.086207 - In the same way, we use penalty for every unsatisfied passenger.
0.170042 - One potential solution of the transit network design problem is shown in Fig 2.
0.079559 - Public transit network Fig 2.
0.090377 - Public transit network.
0.073059 - We denote by dij the number of trips per time unit between node i and node j.
0.082148 - We also denote by D the origin–destination matrix (O–D matrix): (2) We denote by trij the in-vehicle travel time between the node i and the node j.
0.095369 - By TR we denote the travel time matrix: (3) We assume in this paper that the network by G = (N, A), the O–D matrix D, and the travel time matrix TR are given.
0.167834 - We also assume that passengers choose the route based on the shortest travel time principle.
0.121378 - Many researchers decomposed the transit network design problem into the following two stages: (1) generation of the set of transit routes; (2) determination of the frequency of service for each generated route.
0.157898 - We do the same in this paper, and we focus exclusively on the generation of the set of transit routes.
0.096521 - The transit network design problem that we study in this paper could be defined in the following way: For a given set of n nodes, known origin–destination matrix D that describes demand among these nodes, and known travel time matrix TR, generate set of transit routes on a network in such a way to minimize the total travel time of all passengers T.
0.175195 - The transit network design problem is one of the essential problems in the area of public transit.
0.133831 - It has been shown that the network design problem is NP-hard problem (Magnanti & Wong, 1984).
0.024845 - Due to its hardness and significance it has constantly been a test for researchers who approached it from various perspectives.
0.104675 - As we indicated in the literature review, several heuristics and approaches based on meta-heuristics have been developed by different authors.
0.290130 - The approach to the transit network design problem, that we propose, is based on the Bee Colony Optimization (BCO).
0.125786 - The BCO represents one of the Swarm Intelligence techniques.
0.055705 - Swarm Intelligence (Beni, 1988; Beni & Wang, 1989; Beni & Hackwood, 1992; Bonabeau, Dorigo, & Theraulaz, 1997) is the part of Artificial Intelligence based on study of actions of individuals in different decentralized systems.
0.032448 - These decentralized systems are composed of physical individuals (robots, for example) or artificial ones that communicate among themselves, cooperate, collaborate, exchange information and knowledge and perform some tasks in their environment (Teodorović, 2008).
0.111941 - The Bee Colony Optimization (BCO) metaheuristic has been introduced by Lučić and Teodorović (2001, 2002, 2003a, 2003b).
0.050847 - The BCO has been successfully applied to various engineering and management problems (Teodorović & Dell’Orco, 2005, 2008; Šelmić, Teodorović, & Vukadinović, 2010; Davidović, Ramljak, Šelmić, & Teodorović, 2011, 2012; Teodorović, Šelmić, & Mijatović-Teodorović, 2012; Todorović & Petrović, 2013).
0.099174 - Nikolić and Teodorović (2013) recently performed empirical study of the BCO algorithm.
0.114114 - The authors applied BCO to optimize numerous numerical test functions.
0.129286 - They compared the obtained results with the results in the literature, and showed that the BCO is competitive with other methods.
0.126126 - The BCO is motivated by bees’ behavior in the nature.
0.109589 - The artificial bees utilize the principles used by honey bees for the period of nectar collection process.
0.120858 - The basic idea behind the BCO is to create the colony of artificial bees able to effectively solve difficult combinatorial optimization problems.
0.137741 - Artificial bees explore through the search space, looking for the feasible solutions.
0.138365 - Every artificial bee generates one solution to the problem.
0.055593 - In order to discover good solutions, artificial bees collaborate and exchange information.
0.080906 - By the use of collective knowledge and sharing information among themselves, artificial bees concentrate on more promising areas, and step by step reject solutions from the less promising ones.
0.050314 - Artificial bees together generate and/or improve their solutions.
0.066116 - The algorithm consists of two alternating phases: forward pass and backward pass.
0.068966 - In each forward pass, every artificial bee explores the search space.
0.068376 - It applies a predefined number of moves, which construct and/or improve the solution, yielding to a new solution.
0.108691 - Having obtained new solutions, the bees go again to the nest and start the second phase, the so-called backward pass.
0.088154 - In the backward pass, all artificial bees share information about their solutions.
0.132275 - In other words, bees make known the quality of the solution, i.e.
0.082305 - the objective function value.
0.059801 - Through the backward pass, every bee decides with a certain probability whether to abandon the created solution and become uncommitted follower, or dance and thus recruit the nestmates before returning to the created solution (bees with higher objective function value have greater chance to continue its own exploration).
0.062615 - Every follower, choose a new solution from recruiters (Fig 7) by the roulette wheel (better solutions have higher probability of being chosen for exploration).
0.095512 - The two phases of the search algorithm, forward and backward pass, are performed iteratively, until a stopping condition is met.
0.066365 - The possible stopping conditions could be, for example, the maximum total number of forward/backward passes, the maximum total number of forward/backward passes without the improvement of the objective function, etc.
0.084084 - The BCO algorithm could be of constructive or improving type.
0.006173 - Constructive approach starts from scratch (Lučić & Teodorović, 2001, 2002, 2003a, 2003b; Teodorović, 2003, 2008, 2009; Šelmić et al., 2010; Davidović, Šelmić, & Teodorović, 2009, 2011, 2012; Dimitrijević, Teodorović, Simić, & Šelmić, 2011).
0.086207 - Within this approach the analyst constructs a solution step by step.
0.137931 - Quite the opposite, the improving approach begins from a complete solution.
0.073529 - The complete solution (possible a feasible one) is typically generated randomly or by some heuristics.
0.055556 - By perturbing that solution, we try to improve it (Davidović et al., 2011; Todorović & Petrović, 2013; Nikolić & Teodorović, 2013).
0.148760 - In this paper we apply the improvement version of the BCO algorithm.
0.071348 - The BCO algorithm parameters whose values need to be set prior the algorithm execution are as follows: B – the number of bees involved in the search, IT – the number of iteration, NP – the number of forward and backward passes in a single iteration, NC – the number of changes in one forward pass, S – the best known solution.
0.116607 - The following is the pseudo code of the BCO algorithm: procedure BCOi(inB,IT,NP,NC, outS) fori = 1 toBdo Determine the initial solution for the bee i.
0.160530 - Evaluate the solution of the bee i.
0.175226 - S ← the best solution of the bees.
0.154808 - forj = 1 toITdo fori = 1 toBdo the bee i ← Set the initial solution.
0.098583 - fork = 1 toNPdo fori = 1 toBdo forr = 1 toNCdo Evaluate possible changes in the solution of the bee i.
0.000000 - Taking into account evaluated values choose one change.
0.092627 - fori = 1 toBdo Evaluate solution of the bee i. fori = 1 toBdo Make a decision whether the bee i is loyal.
0.087049 - fori = 1 toBdo ifthe bee i is not loyalthen Chose one of the loyal bees that will be followed by the bee i. ifthe best solution generated by the bees isbetterthan the solution Sthen S ← the best bee’s solution.
0.257846 - In this paper, we propose the BCO heuristic algorithm tailored for the transit network design problem.
0.239396 - We propose the BCO algorithm that is based on the improvement concept.
0.215423 - In other words, we first generate the initial feasible solution (the initial transit network).
0.115385 - Then, artificial bees investigate solution space in the neighborhood of the current solution, and try to improve the solution.
0.107843 - The modification of solution is performed through NP forward passes with in the single iteration.
0.160153 - We assume that at the beginning of a network design, all artificial bees are in the hive.
0.061069 - The hive is an artificial location, it is not connected either to bus lines.
0.110533 - Generating the initial solution Let us consider bus line l whose terminals are located in the nodes i and j respectively (Fig 3).
0.066194 - Bus line l contains all nodes that belong to the shortest path between i and j.
0.072968 - Let us denote with Nl the set of nodes connected by the line l. Bus line whose terminals are located in the nodes i and j Fig 3.
0.066116 - Bus line whose terminals are located in the nodes i and j.
0.074434 - This bus line could be used by the passengers that enjoy direct service, as well as by passengers that have to make the most two transfers during their trip.
0.114039 - The total number of passengers dsij that enjoy the direct service along this bus line l equals: (4) We denote by DS the corresponding matrix that contains information about the number of passengers that enjoy the direct service: (5) We propose a simple greedy algorithm to generate the initial solution.
0.098291 - In this algorithm we try to connect, by the direct service, pairs of nodes that have high dsij values.
0.127451 - In this way, we will increase the number of passengers that enjoy the direct service.
0.104418 - The algorithm is composed of the following steps: Step 1: Prescribe the total number of bus lines NBL in the network.
0.066007 - Denote the set of bus lines by Y.
0.000000 - Set Y = ϕ.
0.000000 - Let m = 1.
0.111111 - Step 2: Find the pair of nodes that has the highest dsij value.
0.060060 - Let this pair is the pair of nodes (a,b).
0.116402 - The nodes a and b are the terminals of the new bus line.
0.072607 - Find the shortest path between these two nodes.
0.117048 - The nodes that belong to the shortest path represents stations in the bus lines.
0.000000 - Add line l in set Y.
0.054795 - Step 3: Update the matrix DS, without taking into account passenger travel demands that is already satisfied.
0.009456 - Step 4: If m = NBL, stop; otherwise, set m = m + 1 and return to Step 2.
0.104418 - Solution modification The major step in our algorithm is modification of the solution through NP forward passes within the single iteration.
0.082192 - In all our previous applications of the BCO algorithm, we used a set of homogeneous artificial bees.
0.093664 - In this paper, for the first time, we operate with heterogeneous bees.
0.185309 - We solve the transit network design problem by using two sets of artificial bees.
0.079208 - The first set consists of bees type 1.
0.083333 - The second set contains bees type 2.
0.101365 - The type 1 artificial bees differ from the type 2 artificial bees only in the way in which they modify the solutions.
0.075829 - When making decisions about the loyalty, as well as decisions to join some of the recruiters both bees of type1, and bees of type 2 behave in the same way.
0.063927 - Solution modification by type 1 bees Let us note the given set of bus lines (Fig 4).
0.066116 - Type 1 bee chooses one line from the set of bus lines.
0.022989 - Bee makes a decision which line to take according to probability.
0.044924 - Probability of taking line l can be calculated as: (6) where: i and j are the terminals of the line l, L is the set of bus lines, r and s are the terminals of the line q, dsij – the total number of passengers that can travel without any transfer by using the line l that connects terminal i and terminal j.
0.039604 - Solution modification by type 1 bee Fig 4.
0.043956 - Solution modification by type 1 bee.
0.037825 - Let us assume, for example, that type1 bee chose line whose terminals are i and j.
0.066116 - In the next step, type 1 bee chooses one among two terminals.
0.090685 - Let us assume that the type1 bee chose terminal i.
0.013889 - Type 1 bee destroys selected bus line.
0.067797 - New bus line will be created between terminal i and new terminal k, which could be chosen with the probability: (7) Let us assume that type 1 bee chose node k for the new terminal.
0.092627 - Bee discovers the shortest path between the nodes i and k. This shortest path represents the new bus line (dashed line).
0.063927 - Solution modification by type 2 bees Let us note the given set of bus lines (Fig 5).
0.094563 - Type 2 bee chooses one bus line in the same manner as the type 1 bee.
0.018913 - After that, bee chooses in a random manner one, among two terminals, of this bus line.
0.033058 - Let us assume, for example, that type 2 bee chose terminal j.
0.092369 - In the next step, bee decides to destroy this terminal with the probability equals to P (The analyst prescribes P value).
0.091324 - The new bus line generated in this way contains all old bus stops, except the destroyed terminal.
0.062893 - In this way, the old bus line was shortened.
0.081031 - In the opposite case, if terminal survives (the terminals survives with the probability equal to (1 − P)), the old bus line will be expanded.
0.060060 - The new bus line will contain one more bus stop.
0.078853 - The new bus stop to be added to the bus line is chosen in a random manner from the nodes adjacent to the chosen terminal.
0.083770 - In the case shown in Fig 5, the node k was chosen to be included in the bus line, and the old bus line was expanded.
0.039604 - Solution modification by type 2 bee Fig 5.
0.043956 - Solution modification by type 2 bee.
0.103520 - Bee’s partial solutions comparison mechanism Type 1 and type 2 bees return to the hive after modifying the solutions.
0.045977 - All modified solutions are then evaluated by all bees (Fig 6).
0.111111 - Evaluation of the generated solutions Fig 6.
0.124031 - Evaluation of the generated solutions.
0.118891 - Let us denote by Tb (b = 1, 2, … , B) the total travel time of all passengers in the transit network generated by the bth bee.
0.081425 - We denote by Ob normalized value of the total travel time Tb, i.e.
0.117881 - : (8) where Tmin and Tmax are respectively the smallest and the largest total travel time in all transit networks generated by all bees.
0.056738 - The probability that bth bee (at the beginning of the new forward pass) is loyal to the previously generated solution is calculated in this paper in the following way: (9) By using relation (9) and a random number generator, every type 1 and every type 2 artificial bee decides to become uncommitted follower, or to continue exploration from the generated solution (Fig 7).
0.096096 - Comparison of the generated solutions (Nikolić & Teodorović, 2013) Fig 7.
0.105611 - Comparison of the generated solutions (Nikolić & Teodorović, 2013).
0.133045 - The superior the generated solution (higher Ob value), the higher the probability that the bee will be loyal to that solution.
0.078231 - Recruiting Process In the case when at the beginning of a new stage bee does not want to start from the previously generated solution, the bee will go to the dancing area and will follow another bee (Fig 8).
0.000000 - Recruiting of uncommitted followers Fig 8.
0.000000 - Recruiting of uncommitted followers.
0.144220 - Within the dance area the bee-dancers (recruiters) “advertise” different solutions.
0.098255 - We assume that the probability the recruiter b’s solution will be chosen by any uncommitted bee equals: (10) where: Ok – objective function value of the kth advertised solution; R – the number of recruiters.
0.018265 - By using relation (10) and a random number generator, every uncommitted follower join one bee dancer (recruiter).
0.114790 - Recruiters and recruited nestmates start exploration in the next forward pass from the solution discovered by the recruiter.
0.102941 - All artificial bees are free to independently search the solution space and perform solution modification.
0.157141 - The BCO approach that we propose is compared with other approaches that proved to be the best far in the literature.
0.069156 - Comparison is performed in the case of Mandl’s road network, as well as in the case of network that contains 110 Nodes and 275 links (http://people.brunel.ac.uk/∼mastjjb/jeb/orlib/utraninfo.html).
0.111567 - In the proposed BCO algorithm we set B = 10, NP = 5, NC = 2.
0.126441 - The values are chosen based on our prior experience.
0.045392 - These values turn out to be both moderately small (resulting in rapid completion of each iteration) and sufficiently large to assure efficient knowledge exchange and discovering of a high quality final solutions.
0.068966 - The penalty for unsatisfied passenger equals: average travel time + 50 min.
0.127647 - The probability P that the red bee will destroy the terminal equals 0.2.
0.108108 - The stopping criterion is the number of iteration IT = 400.
0.104027 - In the first experiment, we compare the BCO approach that we propose with the approaches proposed by Mandl (1979), Baaj and Mahmassani (1991), Kidwai (1998), Charkroborty and Dwivedi (2002) and Fan and Mumford (2010).
0.101545 - The comparison is made in the case of Mandl’s road network (Mandl, 1979) shown in Fig 9.
0.029304 - Mandl’s road network Fig 9.
0.032922 - Mandl’s road network.
0.068596 - We use the following parameters for comparison: d0 – the percentage of demand satisfied without any transfers, d1 – the percentage of demand satisfied with one transfer, d2 – the percentage of demand satisfied with two transfers, dun – the percentage of demand unsatisfied, ATT – average travel time in minutes per transit user (mpu).
0.017660 - This travel time includes transfer waiting times, and transfer time that is equal to 5 min per passenger.
0.022989 - This set of parameters was proposed by Fan and Mumford (2010).
0.008282 - These authors performed comparison in four situations: 4 routes, 6 routes, 7 routes and 8 routes in each route set.
0.111111 - We do the same in this paper.
0.084084 - The results of comparison are given in Tables 1–4.
0.000000 - Table 1.
0.160553 - The initial solution.
0.000000 - Situation Number of routes Route description 1 4 0 1 2 5 7 9 10 4 3 5 7 9 12 8 14 6 9 13 0 1 2 5 14 6 2 6 0 1 2 5 7 9 10 4 3 5 7 9 12 8 14 6 9 13 0 1 2 5 14 6 9 10 11 0 1 3 11 3 7 0 1 2 5 7 9 10 4 3 5 7 9 12 8 14 6 9 13 0 1 2 5 14 6 9 10 11 0 1 3 11 11 10 12 13 4 8 0 1 2 5 7 9 10 4 3 5 7 9 12 8 14 6 9 13 0 1 2 5 14 6 9 10 11 0 1 3 11 11 10 12 13 0 1 4 Table 2.
0.155465 - Comparison between the initial solution obtained by the Greedy algorithm and the solutions obtained by the previous approaches.
0.007344 - Number of routes Parameters Mandl (1979) Baaj and Mahmassani (1991) Kidwai (1998) Charkroborty and Dwivedi (2002) Fan and Machemehl (2008) Greedy algorithm (initial solution) 4 d0 69.94 N 72.95 86.86 93.26 80.47 d1 29.93 N 26.92 12 6.74 12.33 d2 0.13 N 0.13 1.14 0 0.51 dun 0 N 0 0 0 6.68 ATT 12.9 N 12.72 11.9 11.37 10.22 6 d0 N 78.61 77.92 86.04 91.52 87.73 d1 N 21.39 19.68 13.96 8.48 11.75 d2 N 0 2.4 0 0 0.51 dun N 0 0 0 0 0 ATT N 11.86 11.87 10.3 10.48 11.03 7 d0 N 80.99 93.91 89.15 93.32 90.62 d1 N 19.01 6.09 10.85 6.36 8.86 d2 N 0 0 0 0.32 0.51 dun N 0 0 0 0 0 ATT N 12.5 10.69 10.15 10.42 10.57 8 d0 N 79.96 84.73 90.38 94.54 91.91 d1 N 20.04 15.27 9.62 5.46 7.58 d2 N 0 0 0 0 0.51 dun N 0 0 0 0 0 ATT N 11.86 11.22 10.46 10.36 10.47 Table 3.
0.165017 - The final solution obtained by the BCO algorithm.
0.000000 - Situation Number of routes Route description 1 4 0 1 2 5 7 9 10 11 1 4 3 5 7 9 12 10 8 14 6 9 7 5 3 11 3 1 2 5 14 6 9 13 2 6 0 1 2 5 7 9 10 12 0 1 4 3 5 7 9 10 8 14 6 9 13 12 10 11 0 1 2 5 14 6 9 10 14 7 9 10 11 3 1 0 8 14 5 2 1 4 3 11 3 7 0 1 2 5 7 9 13 12 0 1 4 3 5 7 9 10 8 14 6 9 13 12 10 11 0 1 2 5 14 6 9 10 5 7 9 10 11 3 1 0 8 14 7 5 2 1 3 4 6 14 7 5 3 11 10 12 4 8 0 1 2 5 7 9 10 12 2 1 4 3 5 7 14 6 8 14 6 9 10 11 3 5 0 1 2 5 14 6 9 13 8 14 5 2 1 3 11 0 1 3 11 10 12 13 9 1 4 3 5 7 9 10 12 0 1 4 3 11 10 12 13 Table 4.
0.137255 - The comparison between the final solution generated by the BCO approach and the previous approaches.
0.002337 - Number of routes Parameters Mandl (1979) Baaj and Mahmassani (1991) Kidwai (1998) Charkroborty and Dwivedi (2002) Fan and Machemehl (2008) BCO algorithm 4 d0 69.94 N 72.95 86.86 93.26 92.1 d1 29.93 N 26.92 12 6.74 7.19 d2 0.13 N 0.13 1.14 0 0.71 dun 0 N 0 0 0 0 ATT 12.9 N 12.72 11.9 11.37 10.51 6 d0 N 78.61 77.92 86.04 91.52 95.63 d1 N 21.39 19.68 13.96 8.48 4.37 d2 N 0 2.4 0 0 0 dun N 0 0 0 0 0 ATT N 11.86 11.87 10.3 10.48 10.23 7 d0 N 80.99 93.91 89.15 93.32 98.52 d1 N 19.01 6.09 10.85 6.36 1.48 d2 N 0 0 0 0.32 0 dun N 0 0 0 0 0 ATT N 12.5 10.69 10.15 10.42 10.15 8 d0 N 79.96 84.73 90.38 94.54 98.97 d1 N 20.04 15.27 9.62 5.46 1.03 d2 N 0 0 0 0 0 dun N 0 0 0 0 0 ATT N 11.86 11.22 10.46 10.36 10.09 The initial solution (set of bus lines) generated by the greedy algorithm is shown in Table 1.
0.133064 - The comparison between the initial solution of the BCO approach and the previous approaches is given in Table 2.
0.152028 - One can see that simple greedy heuristic algorithm generated the initial solution whose characteristics are reasonable good.
0.105180 - Artificial bee started to improve this initial solution through the search process.
0.132275 - The final solution obtained by the BCO algorithm is given in Table 3.
0.115942 - The comparison between the final solution generated by the BCO approach and the previous approaches is given in Table 4.
0.115942 - The results obtained by the BCO approach have better values for d0, and d1 in 3 out of 4 cases.
0.091603 - The BCO results have better values for ATT in 3 out of 4 cases.
0.137116 - The second experiment is performed for the bus network that contains 110 nodes and 275 links.
0.060060 - The total number of daily trips equals 3,603,360.
0.092409 - The task is to generate 55 bus lines.
0.049020 - The total number of bus stops at any bus line cannot be bigger than 29.
0.149517 - The initial solution generated by the Greedy algorithm is given in Table 5.
0.000000 - Table 5.
0.133268 - Second example: bus lines generated by the Greedy algorithm (initial solution).
0.009400 - Line Stations on the line Line 1 59 48 92 52 23 2 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 101 Line 2 38 78 80 61 34 89 4 29 33 6 94 68 12 26 57 21 104 18 32 87 Line 3 58 55 51 41 36 28 45 40 56 74 50 6 94 68 12 26 57 21 104 18 73 Line 4 87 32 18 104 21 57 26 12 68 94 6 50 74 56 40 45 90 75 22 86 107 Line 5 24 37 13 44 4 29 56 40 45 28 72 3 88 Line 6 10 48 92 52 23 2 45 40 56 74 30 93 64 67 100 Line 7 54 53 13 44 4 29 33 6 94 68 12 26 57 21 104 18 79 101 Line 8 8 108 52 91 19 65 89 44 13 31 82 15 Line 9 82 5 105 95 33 6 94 68 12 26 35 102 Line 10 58 55 51 41 36 28 45 2 23 52 92 48 47 71 Line 11 0 70 26 12 68 94 6 50 74 56 40 45 2 23 108 8 Line 12 47 46 61 34 89 4 29 50 30 93 64 67 Line 13 58 55 51 41 36 28 45 40 56 29 4 89 76 60 Line 14 99 78 48 92 52 23 2 45 90 75 22 86 107 Line 15 17 9 68 94 6 50 74 56 40 45 2 23 52 92 48 25 Line 16 81 37 13 44 89 65 19 91 23 2 1 84 Line 17 87 32 18 104 21 57 26 12 68 94 6 50 74 56 40 45 28 72 3 88 Line 18 27 105 95 4 65 19 91 52 92 48 103 Line 19 15 5 105 95 29 56 40 45 90 75 22 86 107 Line 20 11 1 2 45 40 56 74 50 6 94 68 12 26 35 102 Line 21 7 49 68 94 6 50 74 56 40 45 2 23 52 92 48 103 Line 22 87 32 18 104 21 57 26 12 68 94 6 33 29 65 19 91 Line 23 10 59 46 76 44 13 31 5 27 Line 24 0 70 26 12 68 94 6 33 29 4 89 34 61 46 69 Line 25 38 10 48 92 52 23 2 45 28 72 3 88 Line 26 8 1 84 106 36 72 3 86 107 Line 27 54 53 13 44 4 29 56 40 45 90 75 22 86 107 Line 28 15 5 105 95 33 6 94 68 12 26 57 21 104 18 32 87 Line 29 16 9 68 94 6 33 29 4 89 34 61 46 71 Line 30 84 106 28 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 101 Line 31 24 37 13 44 4 29 33 6 94 68 12 26 57 21 104 18 73 Line 32 15 82 31 13 44 76 46 47 48 103 Line 33 98 64 7 12 26 57 21 104 18 79 101 Line 34 58 55 51 41 36 28 45 40 56 74 30 93 64 67 100 Line 35 62 1 2 45 40 56 74 50 6 94 68 12 26 57 21 104 18 32 87 Line 36 63 41 36 28 45 40 56 29 4 89 34 66 Line 37 60 34 61 46 47 48 92 11 62 Line 38 20 75 90 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 101 Line 39 15 5 105 95 33 50 30 93 64 67 Line 40 99 61 34 89 4 29 33 6 94 68 12 26 35 102 Line 41 39 75 90 45 2 23 52 92 48 59 69 Line 42 14 5 31 13 44 76 61 80 78 38 Line 43 100 67 64 93 30 74 56 40 45 90 75 22 86 107 Line 44 58 55 51 41 36 28 45 40 56 29 95 105 5 82 Line 45 47 46 61 34 89 4 29 33 6 94 68 12 26 57 21 104 18 79 101 Line 46 11 108 52 91 19 65 4 95 105 14 Line 47 43 9 68 94 6 33 29 4 44 13 97 Line 48 67 64 93 30 50 29 4 44 13 37 81 Line 49 77 30 94 68 12 26 57 21 104 18 79 101 Line 50 60 76 89 4 29 33 6 94 68 12 26 57 21 104 18 73 Line 51 54 53 13 44 89 65 19 91 52 108 62 Line 52 14 105 95 33 6 94 68 12 26 57 21 104 18 79 101 Line 53 54 53 13 44 4 29 56 40 45 28 36 41 51 55 58 Line 54 88 3 72 28 45 40 56 74 30 93 64 67 100 Line 55 11 1 84 106 36 41 51 55 58 The following are characteristics of the generated initial solution: The total number of trips without transfer = 1,438,572 (d0 = 39.92%).
0.050891 - The total number of trips with one transfer = 1,607,740 (d1 = 44.62%).
0.052910 - The total number of trips with two transfers = 224,480 (d2 = 6.23%).
0.057471 - The total number of unsatisfied passengers = 332,568 (dun = 9.23%).
0.074074 - The average travel time in minutes per transit user ATT = 34.90 min.
0.166282 - As in the previous example, BCO algorithm significantly improved the initial solution.
0.132275 - The final solution generated by the BCO algorithm is given in Table 6.
0.000000 - Table 6.
0.109195 - Second example: bus lines generated by the BCO algorithm (final solution).
0.009400 - Line Stations on the line Line 1 80 78 46 99 69 38 10 25 48 92 52 23 2 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 101 Line 2 103 25 59 47 48 10 38 78 80 61 34 89 4 29 33 6 94 68 12 26 57 21 104 18 32 87 73 79 101 Line 3 58 55 51 41 36 28 45 40 56 74 50 6 94 68 12 26 57 21 104 18 73 87 32 79 101 Line 4 79 73 32 18 104 21 57 26 12 68 94 6 50 74 56 40 45 90 75 22 86 107 Line 5 54 53 81 24 37 13 44 4 29 56 40 45 28 72 3 39 20 88 75 36 106 84 1 62 11 108 52 91 83 Line 6 99 78 38 25 10 48 92 52 23 2 45 40 56 74 30 93 64 67 100 7 68 94 85 50 29 65 89 76 60 Line 7 19 65 109 95 96 105 5 97 37 81 54 53 13 44 4 29 33 6 94 68 12 26 57 21 104 18 79 32 87 Line 8 76 61 99 78 69 59 48 8 108 52 91 19 65 89 44 13 31 82 15 5 105 96 95 109 33 74 85 6 42 Line 9 54 37 97 82 5 105 95 33 6 94 68 12 26 35 102 0 70 57 16 17 49 100 9 7 67 64 98 30 85 Line 10 58 55 51 41 36 28 45 2 23 52 92 48 47 71 80 61 76 60 34 89 65 19 91 83 108 11 62 1 84 Line 11 98 64 67 100 49 7 9 17 43 16 57 102 0 70 26 12 68 94 6 50 74 56 40 45 2 23 108 92 8 Line 12 38 10 103 48 25 59 69 80 47 46 61 34 89 4 29 50 30 93 64 67 100 49 7 17 35 70 0 102 21 Line 13 58 55 51 41 36 28 45 40 56 29 4 89 76 60 34 66 61 80 99 46 71 47 48 10 103 25 59 69 78 Line 14 59 10 103 25 38 69 47 46 99 78 48 92 52 23 2 45 90 75 22 86 107 Line 15 35 57 16 43 17 9 68 94 6 50 74 56 40 45 2 23 52 92 48 25 38 69 47 71 46 76 44 13 53 Line 16 14 27 5 15 82 97 81 54 24 37 13 44 89 65 19 91 23 2 1 84 106 36 28 90 75 41 51 55 58 Line 17 73 87 32 18 104 21 57 26 12 68 94 6 50 74 56 40 45 28 72 3 88 86 22 75 36 106 84 1 8 Line 18 15 82 5 27 105 95 4 65 19 91 52 92 83 108 11 62 8 48 78 46 61 66 34 89 44 13 31 97 81 Line 19 10 59 46 61 34 60 76 44 13 37 24 53 54 81 97 82 15 5 105 95 29 56 40 45 90 75 22 86 107 Line 20 23 83 92 11 1 2 45 40 56 74 50 6 94 68 12 26 35 102 21 70 57 16 43 17 7 64 98 30 77 Line 21 43 17 26 57 21 0 70 102 35 12 9 7 49 68 94 6 50 74 56 40 45 2 23 52 92 48 103 10 38 Line 22 73 87 32 18 104 21 57 26 12 68 94 6 33 29 65 19 91 83 92 48 59 47 46 61 66 76 44 4 95 Line 23 66 61 80 78 48 25 103 10 59 46 76 44 13 31 5 27 105 96 95 4 109 65 19 91 52 23 108 11 62 Line 24 32 73 18 104 21 102 0 70 26 12 68 94 6 33 29 4 89 34 61 46 69 38 25 59 10 48 92 11 62 Line 25 82 5 105 96 95 109 65 89 34 61 80 71 69 59 25 38 10 48 92 52 23 2 45 28 72 3 88 75 20 Line 26 71 47 59 78 38 69 80 61 66 76 89 65 19 91 83 23 52 92 11 108 8 1 84 106 36 72 3 86 107 Line 27 5 82 31 97 81 24 37 54 53 13 44 4 29 56 40 45 90 75 22 88 20 39 72 28 36 41 3 86 107 Line 28 37 81 97 24 54 53 13 31 82 15 5 105 95 33 6 94 68 12 26 57 21 104 18 32 87 73 79 101 Line 29 49 17 26 70 35 12 43 16 9 68 94 6 33 29 4 89 34 61 46 71 80 78 59 25 48 92 108 52 83 Line 30 69 78 59 48 92 11 8 1 84 106 28 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 73 87 32 Line 31 54 53 81 24 37 13 44 4 29 33 6 94 68 12 26 57 21 104 18 73 87 32 79 101 Line 32 12 68 94 42 50 6 93 98 85 74 77 56 29 95 105 14 5 15 82 31 13 44 76 46 47 48 103 25 10 Line 33 48 47 46 76 89 65 109 33 74 50 30 94 42 6 93 85 98 64 7 12 26 57 21 104 18 79 73 32 87 Line 34 58 55 51 41 36 28 45 40 56 74 30 93 64 67 100 49 7 12 17 35 102 0 21 104 18 73 32 79 101 Line 35 31 13 44 4 65 19 91 52 92 8 62 1 2 45 40 56 74 50 6 94 68 12 26 57 21 104 18 32 87 Line 36 63 41 36 28 45 40 56 29 4 89 34 66 76 44 13 53 81 97 31 82 14 27 105 95 33 50 30 98 93 Line 37 23 91 19 65 89 44 76 34 61 46 47 48 92 11 62 8 1 2 45 28 36 75 3 51 63 41 72 39 20 Line 38 23 92 8 1 84 106 28 36 72 39 20 75 90 45 40 56 74 50 6 94 68 12 26 57 21 104 18 79 101 Line 39 54 81 53 24 97 82 15 5 105 95 33 50 30 93 64 67 100 9 12 43 16 57 21 104 18 73 87 32 Line 40 36 106 84 1 8 48 10 25 38 78 69 99 61 34 89 4 29 33 6 94 68 12 26 35 17 49 100 9 7 Line 41 11 62 1 84 106 36 72 41 63 51 3 39 75 90 45 2 23 52 92 48 59 69 78 99 46 76 44 13 97 Line 42 68 49 7 64 93 85 77 74 50 33 95 105 14 5 31 13 44 76 61 80 69 99 46 59 47 48 78 38 10 Line 43 101 79 73 87 32 18 104 21 57 26 17 9 100 67 64 93 30 74 56 40 45 90 75 22 86 107 Line 44 58 55 51 41 36 28 45 40 56 29 95 105 5 82 97 31 13 44 89 65 19 91 83 92 11 8 62 1 2 Line 45 69 99 78 48 10 103 25 59 47 46 61 34 89 4 29 33 6 94 68 12 26 57 21 104 18 79 32 87 73 Line 46 58 55 51 3 39 20 75 36 28 45 2 23 83 92 8 1 62 11 108 52 91 19 65 4 95 105 14 82 15 Line 47 12 17 43 9 68 94 6 33 29 4 44 13 97 82 14 27 105 96 95 109 65 19 91 83 92 48 103 10 38 Line 48 26 17 16 9 7 67 64 93 30 50 29 4 44 13 37 81 97 5 31 82 14 105 96 95 109 33 74 6 42 Line 49 24 37 53 81 97 5 27 105 96 95 29 109 33 42 50 77 30 94 68 12 26 57 21 104 18 79 32 73 87 Line 50 38 69 71 46 80 99 61 66 34 60 76 89 4 29 33 6 94 68 12 26 57 21 104 18 73 87 32 79 101 Line 51 5 15 82 97 37 81 54 53 13 44 89 65 19 91 52 108 11 1 84 106 36 72 39 75 20 3 51 55 58 Line 52 31 13 37 54 53 24 97 82 5 14 105 95 33 6 94 68 12 26 57 21 104 18 79 101 Line 53 95 96 105 14 27 5 97 37 54 53 13 44 4 29 56 40 45 28 36 41 51 3 86 22 88 39 72 75 90 Line 54 41 75 20 39 88 3 72 28 45 40 56 74 30 93 64 67 100 7 68 94 42 33 95 96 105 14 82 97 24 Line 55 27 14 82 15 5 105 95 4 44 76 46 59 48 8 11 1 84 106 36 41 51 55 58 The following are characteristics of the generated initial solution: d0 = 59.65%, d1 = 40.10%, d2 = 0.25%, dun = 0%, ATT = 36.16 min.
0.069067 - The obtained average travel time ATT (in minutes per transit user) is composed of the following two components: The first component represents the average travel time, while the second component represents the average penalty per transit user caused by transfer.
0.090416 - In order to better estimate the quality of the obtained final solution we calculated the average travel time per passenger in the case when every passenger exclusively follow the shortest path when traveling between the origin and destination.
0.000000 - This average travel time equals 33.84 min.
0.046334 - No one transit network cannot have average travel time per transit user less than 33.84 min.
0.060060 - This value represents lower bound of the average travel time.
0.118131 - The ATT value obtained by the BCO algorithm is relatively close to the lower bound, so one can conclude that the quality of the solution generated by the BCO algorithm is relatively high.
0.317070 - We developed the model for the transit network design problem.
0.137357 - The transit network design problem is a large combinatorial problem whose optimal solution is difficult to find, therefore a heuristic approach must be used.
0.171137 - The model proposed in this paper is based on the Swarm Intelligence concepts.
0.098765 - We tried to maximize the number of served passengers, to minimize the total in-vehicle time of all served passengers, and to minimize the total number of transfers in the network.
0.173339 - We clearly showed that the proposed BCO algorithm is competitive with other approaches in the literature, and that it can generate high-quality solutions within reasonable CPU times.
0.116187 - The challenge for the future research is to test the offered BCO concept simultaneously with the assumption that passenger flows depend on the transit network design, as well as in the case of the multiple path passengers’ assignment among possible transit routes.
0.090943 - The proposed concept should be expanded in the future research by including in the analysis available number of vehicles, as well as some other operational constraints.

[Frase 139] The approach to the transit network design problem, that we propose, is based on the Bee Colony Optimization (BCO).
[Frase 323] We clearly showed that the proposed BCO algorithm is competitive with other approaches in the literature, and that it can generate high-quality solutions within reasonable CPU times.
[Frase 318] The ATT value obtained by the BCO algorithm is relatively close to the lower bound, so one can conclude that the quality of the solution generated by the BCO algorithm is relatively high.
[Frase 183] In this paper, we propose the BCO heuristic algorithm tailored for the transit network design problem.
