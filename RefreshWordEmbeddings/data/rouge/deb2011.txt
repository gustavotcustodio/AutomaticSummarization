We apply Particle Swarm Optimization approach for parameter optimization of quantum well nano structure. Mobility of two-dimensional hot electrons in AlGaAs/GaAs quantum well is taken as the fitness/objective function. The 2D carrier concentration, quantum well width and lattice temperature of the quantum well are taken as the three input variables of the algorithm. Results show that the swarm approach can be successfully implemented for parameter optimization of complex nanostructure.

0.045977 - Analytical optimization techniques suffer from slow convergence in complex solution space.
0.055556 - Heuristics-based swarm intelligence is an efficient alternative to analytical optimization techniques.
0.162684 - In this paper, particle swarm optimization approach is utilized for better and efficient nano-device modeling.
0.233618 - Mobility of two-dimensional hot electrons in modulation doped square quantum well of AlGaAs/GaAs which is determined using heated drifted Fermi–Dirac distribution function and relevant scattering mechanisms is taken as the fitness/objective function.
0.373782 - The 2D carrier concentration, quantum well width and lattice temperature of the quantum well are taken as the input variables.
0.127579 - The algorithm with three input variables is then utilized to get optimized values of input parameters to get desired ac and dc mobility values.
0.148077 - High mobility two-dimensional electron gas in modulation doped low dimensional structures such as quantum wells has attracted much attention because of the possibility of realization of high speed nano-devices (Weisbuch & Vinter, 1991).
0.115036 - In such structures, mobility of the two-dimensional electron gas is enhanced considerably by spatial separation of electrons from their parent donor atoms with the modulation doping technique (Nguyen, 1992).
0.108905 - A lot of work is still going on in the area of the transport phenomena of carriers in QW nano-structures (Dewey et al., 2008).
0.164572 - Electrical characteristics of the carrier in a QW are controlled by the system parameters like lattice temperature, quantum well width, two dimensional carrier concentration, external dc biasing field and the frequency of applied ac field (Sarkar & Chattopadhyay, 2000).
0.061224 - All these parameters are related in such a complex way so that it is very difficult to predict optimized parameters for desired electrical characteristics (Chattopadhyay, 1991; Gold & Marty, 2007; Leburton, 1984).
0.063320 - Different optimization techniques can be employed to find suitable parameter combinations for optimum device performance (Zebulum, Pacheco, & Vellasco, 2000).
0.093704 - Different types of algorithms are used to obtain “best available” values of some objective function within a defined domain (Zebulum, Vellasco, & Pacheco, 2000).
0.067215 - Evolutionary algorithm based soft computing tools like Genetic Algorithm (GA), Artificial Neural Network (ANN), Simulated Annealing and Particle Swarm Optimization (PSO) are very useful techniques to predict optimized system parameter combinations to get better as well as desired device characteristics (De Jong, 2006; Eberhart & Shi, 1998; Parsopoulos & Vrahatis, 2004; Sarkar, Moi, Puttamadappa, De, & Naskar, 2003; Triki, Collette, & Siarry, 2005).
0.068376 - PSO is an evolutionary computational intelligence-based technique which was inspired by the social behavior of bird flocking and fish schooling.
0.080808 - It utilizes a population of particles that fly through the problem hyperspace with given velocities.
0.126098 - The velocities of the individual particles are stochastically adjusted according to the historical best position for the particle itself and the neighborhood best position at each iteration.
0.128860 - Both the particle best and the neighborhood best are derived according to a user defined fitness function.
0.098958 - The movement of each particle naturally evolves to an optimal or near-optimal solution.
0.098173 - The performance of PSO is not largely affected by the size and nonlinearity of the problem, and can converge to the optimal solution in many problems where most analytical methods fail to converge.
0.047619 - It can, therefore, be effectively applied to different optimization problems.
0.054167 - Moreover, PSO has some advantages over other similar optimization techniques such as GA, namely the following (Valle , Venayagamoorthy, Mohagheghi, Hernandez, & Harley, 2008).
0.064516 - (1) PSO is easier to implement and there are fewer parameters to adjust.
0.075623 - (2) In PSO, every particle remembers its own previous best value as well as the neighborhood best; therefore, it has a more effective memory capability than the GA. (3) PSO is more efficient in maintaining the diversity of the swarm (Engelbrecht, 2006), since all the particles use the information related to the most successful particle in order to improve themselves, whereas in GA, the worse solutions are discarded and only the good ones are saved; therefore, in GA the population evolves around a subset of the best individuals.
0.047619 - (4) PSO is comparatively faster than some other optimization algorithm.
0.192213 - Other optimization algorithm like GA has successfully implemented for parameter optimization of quantum well nanostructure (Sarkar et al., 2003) but successfully modeling a PSO algorithm for similar application is quite new.
0.117063 - Performance of any optimizing algorithm depends on efficient modeling of the problem.
0.195470 - In this paper, ac and dc mobility of two-dimensional hot electrons in modulation doped square quantum well of AlxGa1−xAs/GaAs is optimized with an efficient particle swarm optimization technique.
0.147442 - The derivation of the analytical model of the fitness function is presented in Section 2.
0.135468 - In Section 3, at first the basic concepts of PSO are explained then the problem is modeled in such a way that the fitness function is a function of three input parameters and can be incorporated in the PSO algorithm.
0.051282 - Results and discussion are presented in Section 4.
0.044872 - Finally, the concluding remarks appear in Section 5.
0.075269 - A square QW of AlxGa1−xAs/GaAs of infinite barrier height is considered.
0.027778 - Carrier scattering by deformation potential acoustic phonon, polar optic phonon, ionized and remote impurity scattering mechanisms are incorporated.
0.061349 - Improved carrier concentration and reduced ionized impurity scattering in the QW establish a strong electron–electron interaction, favouring a heated drifted Fermi–Dirac distribution function for the carriers characterized by an electron temperature Te, and a drifted crystal momentum pd (Sarkar, 2004; Sarkar, Ghosh, & Chattopadhyay, 1995; Sarkar et al., 2003).
0.081739 - In the presence of an electric field F applied parallel to the heterojunction interface, the carrier distribution function can be expressed as, (1) where f0(E) is the Fermi–Dirac distribution function for the carriers, is the drift crystal momentum, is Planck’s constant divided by 2π, is the two-dimensional wave vector of the carriers with energy E, m∗ is the electronic effective mass and γ is the angle between the applied electric field and the two dimensional wave vector .
0.066667 - An electric field of magnitude F1 and the angular frequency ω superimposed on a moderate dc bias field F0 is assumed to act parallel to the heterojunction interface.
0.071649 - The net field is thus given by; (2) As the electron temperature and the drift momentum depend on the field and the scattering processes, they will also have similar components with the alternating ones generally differing in phase.
0.060284 - Thus; (3) (4) where T0 and p0 are the steady state parts, T1r and p1r are real and T1i and p1i are imaginary parts of Te and pd respectively.
0.052016 - The energy and momentum balance equations obeyed by the carrier are; (5) and (6) where 〈dp/dt〉 and 〈dE/dt〉 represents, respectively, the average momentum and energy loss due to scatterings and 〈E〉 depicts the average energy of a carrier with charge e. We insert (3) and (4) in (5) and (6), retain terms up to the linear in alternating components and equate the steady parts and the coefficients of sin ωt and cos ωt on the two sides of the resulting equations following the procedure adopted in Sarkar et al.
0.000000 - (1995).
0.044444 - For a given electric field F0, we solve for p0 and T0.
0.087571 - The dc mobility μdc and ac mobility μac are then expressed as; (7) (8) The phase lag , the resulting alternating current lags behind the applied field is expressed as (9) Detail analysis of mobility calculation is given in Sarkar et al.
0.086420 - (1995) and deliberately avoided for brevity of this work.
0.079044 - Particle swarm optimization (PSO) was first developed by Eberhart and Kennedy in 1995 (Kennedy & Eberhart, 2001).
0.058559 - It is a swarm intelligence based algorithm to find a solution to an optimization problem in a search space.
0.071429 - PSO is inspired by the behavior of fish schools, bird flocks and colonies of many insects (Dutta, Dasgupta, & Bhattacharyya, 2007; VanVeldhuizen, Zydallis, & Lamont, 2003).
0.075397 - Basic PSO algorithm The basic PSO algorithm begins by initializing a group of random particles (solutions) and then searches for optima by updating generations.
0.152267 - The fitness values of all the particles are evaluated by the fitness function to be optimized.
0.016667 - An iterative process to improve these candidate solutions is set in motion.
0.101411 - The best solution that an individual has achieved so far is called the local best (pi,best) and the best solution obtained so far by any particle in the population is known as the global best (gi,best).
0.095238 - In every iteration, each particle is updated by following the two best values (pi,best & gi,best).
0.073604 - After finding pbest & gbest the particle updates its velocity and positions using the following two equations: (10) (11) Here is the velocity, is the position of the ith particle of kth iteration, rand is a random number between (0, 1), c1 and c2 are learning factors usually c1 = c2 = 2.
0.089183 - The velocity update equation in Eq (10) has three major components: (1) The first component ( ) is referred to as “inertia,” “momentum,” or “habit.” It models the tendency of the particle to continue in the same direction it has been traveling.
0.091270 - (2) The second component ( ) is referred to as memory and is a linear attraction towards the best position ever found by the given particle.
0.078431 - (3) The third component ( ) is a linear attraction towards the best position found by any particle.
0.107898 - The following procedure can be used for implementing the PSO algorithm (Shi, 2004).
0.078738 - (1) Initialize the swarm by assigning a random position in the problem hyperspace to each particle.
0.103098 - (2) Evaluate the fitness function for each particle.
0.085859 - (3) For each individual particle, compare the particle’s fitness value with its pi,best.
0.113127 - If the current value is better than the pi,best value, then set this value as the pi,best.
0.108974 - (4) Identify the particle that has the best fitness value in the entire population for current generation and compare with all the previous generations if the value is higher, identify it as gi,best.
0.105556 - (5) Update the velocities and positions of all the particles using Eqs.
0.015873 - (10) and (11).
0.044715 - (6) Repeat steps 2–5 until a stopping criterion is met (e.g., maximum number of iterations or a sufficiently good fitness value).
0.156950 - Problem modeling Carrier mobility in low-dimensional nanostructures such as QW depends on device parameters such as 2D carrier concentration (N2D), quantum well width (LZ), lattice temperature (TL).
0.210069 - Therefore, for the optimization algorithm carrier mobility is taken as the objective/fitness function.
0.091889 - According to the swarm approach adopted in present optimization problem, position of every particle is represented in three dimensional coordinates system where every parameter is represented as a coordinate and the scenario is presented as; For every parameter, 81 (a 9 × 9 matrix) values are randomly generated and assigned to 81 particles and in this two dimensional matrix every particle is identified with identity factor (i(1 9), j(1 9)).
0.161022 - Quantum well width (LZ); 2D carrier concentration (N2D); Lattice temperature (TL); In a swarm (i, j)th particle will defined with three input parameters as coordinates and a corresponding fitness value.
0.063063 - This total scenario virtually forms a four dimensional coordinate system as fitness value is represented along the fourth coordinate.
0.152201 - The fitness/objective function which is a function of the three input parameters are calculated and represented as; (12) After determining fitness value for all the particles, the individual’s best solution (pn,best(k)) is computed.
0.100577 - Here “n” signifies a particular parameter among the three input parameters and “k” is the iteration number.
0.076673 - If the fitness value at a particular particle is improved compared with the previous iteration, pn,best(k) value is updated as; (13) The best solution obtained so far by any particle in the entire population is (gn,best(k)) and which is determined as; (14) So in every iteration a particle has a pn,best(k) value signified with a set of three best parameters achieved so far.
0.092989 - After finding pn,best(k) and gn,best(k) the particle updates the velocity and the position (represented with three input parameters) with two following equations; (15) (16) In the present model parameter values will be updated along with updated position and velocity.
0.112719 - In Eq (16)vfn is the velocity tuning factor specially introduced to take care of the distinctly different range of different parameters.
0.121392 - Memorizing the best value for each particle in the previous iteration and the fittest value in the entire swarm, algorithm gradually converges towards the optimum solution.
0.105750 - The algorithm is terminated when all the particles in the swarm have converged to the optimum solution (De Jong, 2006).
0.047619 - Material parameters presented in Engelbrecht (2006) and Sarkar et al.
0.073333 - (1995) are used for the present work.
0.091398 - Optimization is separately performed for two fitness functions, dc mobility and ac mobility.
0.083333 - Convergence of swarm towards optimum value is graphically presented in Fig 1 after the 1st, 15th and 30th iteration respectively.
0.124859 - As the purpose of the present work is to find out the global best set of parameters with less computation time so that the algorithm can be used in real time fabrication process, number of iteration is restricted within thirty with higher velocity steep size.
0.091398 - Graphical representations of convergence of swarm: (a) after the 1st iteration,… Fig 1.
0.087500 - Graphical representations of convergence of swarm: (a) after the 1st iteration, (b) after the 15th iteration and (c) after the 30th iteration.
0.086420 - The values of dc mobility gradually increase with iteration.
0.105507 - After some iteration, fitness values (dc mobility values) are found to saturate for most of the particles at optimum value.
0.062500 - Variation of dc mobility with iteration for some particles with identity factor… Fig 2.
0.062500 - Variation of dc mobility with iteration for some particles with identity factor (i, j).
0.106061 - Movement of global best value of dc mobility in , and spaces are shown in Figs.
0.000000 - 3–5.
0.101190 - At the 27th iteration, all the particles converge to optimum dc mobility (1.92 m2/V s) with the optimized value of input parameter combination (shown in the figures 78.03 (TL), 11.91 (N2D), 12.71 (LZ)).
0.121053 - To establish the validity of the proposed algorithm, dc mobility value was calculated using Eq (7) with the optimized set of parameters.
0.051724 - The discrepancy or error is found to be less then 1%.
0.088235 - Movement of global best value of dc mobility in LZ–N2D space with iteration Fig 3.
0.093750 - Movement of global best value of dc mobility in LZ–N2D space with iteration.
0.088235 - Movement of global best value of dc mobility in LZ–TL space with iteration Fig 4.
0.093750 - Movement of global best value of dc mobility in LZ–TL space with iteration.
0.114574 - Movement of the global best value of dc mobility in N2D–TL space with iteration Fig 5.
0.121538 - Movement of the global best value of dc mobility in N2D–TL space with iteration.
0.066955 - The fitness values (ac mobility values) are found to saturate to optimum value after the 28th iteration.
0.062500 - Variation of ac mobility with iteration for some particles with identity factor… Fig 6.
0.062500 - Variation of ac mobility with iteration for some particles with identity factor (i, j).
0.106061 - Movement of global best value of ac mobility in , and spaces are shown in Figs.
0.000000 - 7–9.
0.075595 - In this case, the particles converges to the fittest solution (1.25 m2/V s) after the 27th iterations with optimum parameter values (shown in the figures 236 (TL), 11.45 (N2D), 9.42 (LZ)).
0.044444 - The error or discrepancy is also less than 1% in this case.
0.114574 - Movement of the global best value of ac mobility in LZ–N2D space with iteration Fig 7.
0.121538 - Movement of the global best value of ac mobility in LZ–N2D space with iteration.
0.114574 - Movement of the global best value of ac mobility in LZ–TL space with iteration Fig 8.
0.121538 - Movement of the global best value of ac mobility in LZ–TL space with iteration.
0.114574 - Movement of the global best value of ac mobility in N2D–TL space with iteration Fig 9.
0.121538 - Movement of the global best value of ac mobility in N2D–TL space with iteration.
0.167101 - The effective PSO approach is applied to determine the optimized set of input parameter combinations to obtain the desired value of ac and dc mobility values of a quantum well nanostructure.
0.280231 - Present analysis revels that the swarm algorithm can be successfully implemented for parameter optimization of complex nanostructures.
0.114987 - The proposed approach is found to be much fast and time consuming so that this type of optimization technique can be implemented in real time fabrication process.
0.096774 - The present results will be best understood when they appear in the literature.

[Frase 114] Present analysis revels that the swarm algorithm can be successfully implemented for parameter optimization of complex nanostructures.
[Frase 28] In this paper, ac and dc mobility of two-dimensional hot electrons in modulation doped square quantum well of AlxGa1−xAs/GaAs is optimized with an efficient particle swarm optimization technique.
[Frase 113] The effective PSO approach is applied to determine the optimized set of input parameter combinations to obtain the desired value of ac and dc mobility values of a quantum well nanostructure.
