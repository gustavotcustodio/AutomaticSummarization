It presents a novel training algorithm for artificial hydrocarbon networks. That training allows developing a novel audio filter. The proposed audio filter was implemented in three different scenarios. It presents a comparison between current results and previous results reported earlier.

0.037037 - Many audio signal applications are corrupted by noise.
0.057971 - In particular, adaptive filters are frequently applied to white noise reduction in audio.
0.086510 - Recent work provides that there exist some insights on using an artificial intelligence method called artificial hydrocarbon networks (AHNs) for filtering audio signals.
0.153186 - Thus, the scope of this paper is to design and implement a novel approach of artificial hydrocarbon networks on adaptive filtering for audio signals.
0.047619 - Three experiments were developed.
0.066667 - Results demonstrate that AHNs can reduce noise from audio signals.
0.183230 - A comparison between the proposed algorithm and a FIR-filter is also provided.
0.035714 - The short-time objective intelligibility value (STOI) and the signal-to-noise ratio (SNR) were used for evaluation.
0.083640 - At last, the proposed training method for finding the parameters involved in the AHN-filter can also be used in other fields of application.
0.046296 - One of the problems in audio signal applications is the addition of noise signals that interfere with the original ones arriving in poor performance of audio.
0.077519 - For human ears, this causes non-intelligibility of audio and for signal analysis it causes imprecise data information that blinds important features; which it implies a tradeoff between noise supression and signal distortion.
0.097516 - In order to face it, different audio filters have been developed in audio signals (Parks & Burrus, 1987; Smith, 1997; Winder, 2002).
0.093519 - In general, audio filters are analog or digital (Winder, 2002).
0.107327 - The following work considers digital audio filters, e.g.
0.109127 - filters implemented in software.
0.070634 - In digital signal processing, audio filters can be classified into finite impulse response (FIR) filters and infinite impulse response (IIR) filters.
0.060606 - The first one uses a filter kernel that reaches a finite zero frequency response while the second one uses a filter kernel that responds in frequency with infinite exponential decaying sinusoidal functions (Smith, 1997).
0.055556 - In practice, convolution implements FIR filters and recursion implements IIR filters.
0.032407 - In advance, FIR filters use convolution of the input signal while IIR filters uses convolution of the input but also of the output signals (Smith, 1997).
0.030303 - In so many cases, FIR filters are more used than IIR filters, primary based on their phase response in frequency domain (Clark, 2005).
0.059524 - For instance, FIR and IIR filters can be compared (in frequency domain) in their magnitude and phase responses.
0.074074 - As an example, consider the filter response of a sinc function as an input signal like both FIR and IIR filter responses shown in Fig 1.
0.069444 - Ideally, the frequency response in magnitude corresponds to a rectangular-shaped function (Clark, 2005).
0.050388 - However, as shown in Fig 1, the response of the IIR filter is smooth while the response of the FIR filter contains ripple, and both filters try to exhibit a rectangular-shaped function.
0.083946 - As observed, IIR filters might be better used, but in phase response FIR filters present a desired linear characteristic as shown in Fig 2.
0.100794 - Notice that FIR filters (Fig 2(a)) present a linear phase response while IIR filters (Fig 2(b)) do not.
0.031250 - This behavior is crucial when choosing for FIR or IIR filters because nonlinear phase responses might not be demodulate correctly (Clark, 2005).
0.075926 - Comparison between FIR and IIR responses in magnitude Fig 1.
0.084491 - Comparison between FIR and IIR responses in magnitude.
0.075926 - Comparison between FIR and IIR responses in phase Fig 2.
0.084491 - Comparison between FIR and IIR responses in phase.
0.065171 - Several audio filtering applications consider two interests: improving either time domain response or frequency domain response.
0.020833 - Smoothing, noise reduction and DC removal are typical problems in time domain while separating frequencies is typical in frequency domain (Smith, 1997).
0.080000 - However, it is very difficult to improve time and frequency responses with the same filter.
0.020833 - Thus other techniques have been proposed.
0.061404 - For example, the moving average and windowed-sinc filters are widely used in time domain like reported in Khan, Okuda, and Ohba (2003), Smith (2007) and Thede (1996).
0.055556 - In contrast, the single pole filter and Chebyshev’s filter are used in frequency domain (Bai & Lu, 2005; Smith, 1997).
0.058824 - The above examples fall into linear filters.
0.075758 - These kinds of filters have a linear response from the input signal.
0.089744 - However, there are other prominent filters that respond in a nonlinear way from the input signal.
0.030303 - Classical nonlinear filters are based on the time-varying Wiener’s filter (Chen, Benesty, Huang, & Doclo, 2006), probabilistic filters (Burnshtein & Gannot, 2002; Huda, Yearwood, & Togneri, 2009; Vermaak & Niranjan, 1998) and homomorphic filters (Smith, 1997).
0.031250 - Examples of these algorithms can be found in Comon and Laocume (1986), Manolakis, Kalouptsidis, and Carayannis (1983), Smith (1997) and Diniz (2008).
0.045455 - Consider a special kind of noise so-called white or uniform noise.
0.044025 - In particular, white noise reduction cannot be handled easily in audio signals because it contains similar low magnitude components in all the spectrum of frequencies that is typically confusing or overlapping with mainly voice signals and musical signals (Smith, 1997, 2007; Thede, 1996).
0.070707 - In that sense, linear filters cannot clean the signal efficiently and nonlinear filters for these purposes have been proposed (Diniz, 2008; Ling, 2007).
0.062963 - For example, Baravdish, Evangelista, Svensson, and Sofya (2012) reported an audio denoising using a singular value decomposition (SVD) matrix to determine the most significant components in audio and then to eliminate the less significant ones.
0.052846 - In fact, their approach also considers the usage of the inverse of partial differential equations that actually smooth the signal, resulting in a good performance denoising signal in a nonlinear fashion.
0.019608 - However, computational effort increases for nonlinear cases.
0.114943 - On the other hand, LeRoux and Vincent (2013) proposed a consistent Wiener filtering for audio denoising and source separation.
0.064327 - Their proposal considers to improve the Wiener filtering applied as a short-time Fourier transform (STFT) in order to relate short-time responses of STFT of different bins such that the redundancy present in STFT responses will act as a hard constraint or as a soft penalty.
0.071429 - They found that this technique can improve source separation, and that it can be exploited in audio denoising.
0.019608 - Other example applications can be found in Chen and Benesty (2013), Sprechmann, Bronstein, Bronstein, and Sapiro (2013) and Leutnant, Krueger, and Haeb-Umbach (2013).
0.039216 - Recent tendencies fall into adaptive nonlinear filters.
0.060606 - Those are primary nonlinear filters that react to segments of audio signals.
0.070513 - Depending on the time and/or frequency responses in these intervals, the filter provides different actions.
0.065891 - Most recent studies have improved audio signals using a set of previous clear-of-noise waveforms to reconstruct them, like the corpus-based speech enhancement reported in Nickel, Astudillo, Kolossa, and Martin (2013).
0.051724 - In contrast, most of adaptive filters are covered by artificial intelligence techniques like artificial neural networks or fuzzy systems.
0.037500 - Literature reports adaptive nonlinear filters based on artificial intelligence techniques like Asif and Hasnain (2004), Giura, Serina, and Rizzotto (1997), Prasad and Prasanna (2008) and Seng, Hui, and Ming (2003).
0.063235 - In this work, a novel adaptive filter for audio signals is proposed using the artificial hydrocarbon networks (AHNs) algorithm, firstly developed for modeling problems (inference and clustering) in 2011 by Ponce and Ponce (2011) with significant improvements published in Ponce and Ponce (2012) and Ponce, Ponce, and Molina (2013, 2012), is a supervised learning method inspired on chemical organic compounds that preserves stability and convergence in the algorithm as well as it builds an organized structure that encapsulates important information of a given system that can be used as metadata for improving analysis.
0.068889 - In addition, some insights on employing AHNs to audio filters have been highlighted (Ponce et al., 2012).
0.133911 - Thus, this paper introduces a modified adaptive noise filtering for audio signal based on the artificial hydrocarbon network algorithm originally proposed in Ponce et al.
0.089583 - (2012), applying the organized structure of metadata to develop a noise reduction method with a novel adjustment of molecular behaviors, i.e.
0.020833 - basic units of information in AHNs.
0.020833 - The paper is organized as follows.
0.126389 - First, Section 2 presents a brief review of artificial organic networks (AONs), the formal technique in which artificial hydrocarbon networks are based.
0.040230 - In Section 3, the AHN-algorithm is described focusing on their components and interactions, and properties of the algorithm.
0.104010 - Section 4 describes the proposed adaptive noise filtering for audio signals.
0.106754 - Next, Section 5 reports the results of a case study for denoising an audio signal corrupted with three different sources of noise: environmental, hardware and software.
0.019608 - Finally, The last section concludes the paper.
0.064815 - Observations to chemical organic compounds provide enough information to inspire a relatively new technique called artificial organic networks (AONs), first proposed by Ponce and Ponce (2011).
0.027778 - In organic chemistry theory, chemical organic compounds are the most stable ones in nature.
0.026042 - In fact, this stability is primary due to the energy minimization and the geometry of chemical structures (Brown, Foote, Iverson, & Anslyn, 2011).
0.052381 - Artificial organic networks only takes into account the energy minimization and it is considered as the central observation from chemical organic compounds for inspiring AONs.
0.019231 - In chemistry, the relationship of elements makes possible molecules, two or more atoms interacting among them.
0.022222 - Thus, different atoms and different arrangement of those make different molecules providing physical (structural features) and chemical (behavioral features) properties.
0.057143 - As a metaphor, the artificial organic networks technique mimics molecules as basic units with information, those built with a set of structural units called atoms.
0.023810 - Since molecules can be seen as packages, they can be used for encapsulation and potential inheritance of information.
0.000000 - Chemically, relationships among atoms are performed by two possible interactions, i.e.
0.022222 - chemical bonds and chemical reactions.
0.050505 - For instance, artificial bonding allows the formation of basic and complex molecules, while artificial chemical reactions allow the formation of mixtures of molecules.
0.040404 - Artificial organic networks called compounds to complex molecules, in order to distinguish them, and mixtures to any linear combination of molecules or compounds.
0.060606 - It is clear from the latter that it is easy to span structures of compounds (creation and addition of molecules to previous structures).
0.015873 - At last, these artificial organic compounds are stable via energy minimization.
0.037634 - Moreover, in artificial organic networks, each atom, molecule, compound or mixture unit tends to minimize the energy (Ponce & Ponce, 2011, 2012).
0.070707 - In fact, the artificial organic networks technique is designed for solving the modeling problem and it is used in inference and clustering applications.
0.080460 - It provides stability in algorithms and partial understanding of the model behavior, resulting in an organized structure, i.e.
0.000000 - chemically-inspired structure.
0.055556 - In fact, the artificial organic network technique provides a framework of components and interactions to use, the chemically-inspired energy rule to follow at each step, as well as its mathematical representation.
0.073333 - A brief review of AONs is presented in the following subsections (Ponce & Ponce, 2011, 2012).
0.049550 - Components and interactions An artificial organic network is a set of graphs (Ponce & Ponce, 2012), each one representing a molecule with atoms (vertices) and chemical bonds (edges).
0.055556 - From the global point of view, the set of graphs represents a mixture of compounds, as shown in Fig 3.
0.011111 - This technique uses four components: atomic units, molecules, compounds, and mixtures; and two interactions: covalent bonds and chemical balance interaction.
0.000000 - • Atomic units.
0.050000 - This is the simplest structural component of artificial organic networks.
0.050725 - It parameterizes molecules in structure; thus, this component does not implement any behavior.
0.039683 - However, chemically, atoms follow the ground-state principle –electron configuration inside the atom with the lowest energy–; then, atomic units in AONs are described with a number of valence electrons (i.e.
0.046512 - the degree of freedom representing all possible connections that an atom has) under an -rule in which refers to the maximum number of valence electrons that a set of atomic units must have.
0.011111 - At last, two atomic units are referred as similar atoms, if two atoms have the same number of valence electrons.
0.022222 - Otherwise, they are different atoms.
0.000000 - • Molecules.
0.035088 - This is the basic unit with information in AONs.
0.041667 - It is built using the general ground-state principle stated in the -rule, in order to minimize the energy in the structure.
0.019608 - Molecular units are physically and chemically characterized.
0.042857 - For instance, the structure of a molecule is described as a graph with two or more atomic units connected with a set of covalent bonds.
0.021505 - If the number of the free valence electrons of all atoms in the molecule is full, then the molecule is stable.
0.047619 - Otherwise, it is unstable.
0.030864 - Notice, that stable molecules are preferred than unstable molecules in order to follow the ground-state principle.
0.013333 - However, unstable molecules are considered for connecting other molecules to them to perform complex behaviors.
0.041667 - On the other hand, the behavior of a molecule is characterized by a -function with a mapping that transforms input (excited) signals to output (response) signals.
0.062500 - In addition, it is remarkable to say that molecules encapsulate information via the -function.
0.000000 - Then, two important types of molecules are identified.
0.050505 - The first one refers to a functional group that is used as a basis structural molecule (kernel of molecules) that spans other molecules.
0.047101 - The second one refers to primitive molecules that are unstable molecules primary used for interacting with other unstable molecules (linked with nonpolar covalent bonds) in order to build a stable molecule with minimum energy in structure.
0.000000 - • Compounds.
0.041667 - This is a special molecule formed when two or more primitive molecules interact among them to increase the complexity of its behavior.
0.021739 - In particular, the union of primitive molecules is done via nonpolar covalent bonds.
0.030303 - Notice that compounds represent information using the inherited behaviors of primitive molecules.
0.058824 - In fact, a compound is a big, unified and sophisticated unit that exploits inherited behaviors in a nonlinear way due to nonpolar covalent bonds.
0.000000 - At last, stable compounds as well as molecules are more preferred than unstable ones.
0.000000 - • Mixtures.
0.061728 - This is a relationship between two or more molecules (or compounds) without sharing valence electrons for combining.
0.047619 - In fact, a set of molecular behaviors forms a linear combination with definite ratios so-called stoichiometric coefficients.
0.023810 - The resultant response of the mixture of molecules due to excited signals X is represented as Eq (1).
0.000000 - • Covalent bonds.
0.026667 - These are interactions between two or more atoms in order to create or span molecules.
0.065217 - Two different covalent bondings are used in artificial organic networks: polar and nonpolar.
0.038760 - If two similar atomic units interact each other the relationship is referred to a nonpolar covalent bonding while if they are two different atomic units the interaction is called a polar covalent bonding.
0.024691 - Significantly, nonpolar covalent bonds are the most important bonds because they are used for connecting primitive molecules.
0.032986 - In that sense, a nonpolar covalent bonding that links a molecule with a molecule is characterized by a mapping with interesting properties to a real value in ; where, refers to the order of bond that is the number of pair of electrons shared in the interaction, refers to the length of bond defined as the distance between two linked atoms, and refers to the minimum energy of bond and it is the required energy that a bond needs to be applied to separate the linked atoms.
0.000000 - • Chemical balance interaction.
0.050505 - It refers to the process of finding the best real values of stoichiometric coefficients that minimize the energy loss in mixtures of molecules.
0.047619 - (1) The basic structure of an artificial organic network Fig 3.
0.055556 - The basic structure of an artificial organic network.
0.087058 - In this section, the artificial hydrocarbon networks (AHNs) algorithm is presented as an instantiation approach of artificial organic networks.
0.018519 - Firstly, its specific components and interactions are described.
0.088235 - After that, the AHN-algorithm is presented.
0.129808 - Lastly, there is a comparison of the artificial hydrocarbon networks algorithm among other supervised learning algorithms.
0.076409 - Components and interactions The artificial hydrocarbon network algorithm is inspired on chemical hydrocarbon compounds and it is under the artificial organic networks framework.
0.041667 - For instance, the AHN-algorithm restricted the number of different atomic units to two: hydrogen atoms H and carbon atoms C. In addition, the number of valence electrons (i.e.
0.043478 - the degrees of freedom) of H is equal to and for C is .
0.063578 - Moreover, H has associated a hydrogen value as well as C has associated a carbon value , both of them representing a parameter value of artificial hydrocarbon networks.
0.027363 - Then, the AHN-algorithm defines a special type of molecules called CH-molecules (Ponce & Ponce, 2011, 2012), written as , with molecular behavior due to an input signal x of the form as Eq (2); where, is the ith value of a hydrogen atom and d is the maximum number of hydrogen atoms associated to C bounded to .
0.017544 - (2) In order to generate complex molecules, i.e.
0.068543 - compounds, artificial hydrocarbon networks defines three primitive molecules and , coming directly from Eq (2) because a primitive molecule has at least two atoms and one free valence electron allowing an interaction with other molecules.
0.021505 - In particular, these interactions are modeled by nonpolar covalent bonds (Ponce et al., 2013) with behavior as expressed in Eq (3); where, and are two behaviors of interacting molecules, and are properties of covalent bonds (see Section 2.1), and and are constants that parameterize the molecular behaviors involved in the interaction.
0.037037 - (3) At last, the resultant compound has behavior equal to the composite behaviors of molecules, such that .
0.037634 - In practice, the most common behavior is simply a linear chain of CH-primitive molecules stated as Eq (4); where, n is the number of CH-primitive molecules in the compound, and represents the kth bound in the input signal x that determines the limits at which a molecule performs a behavior .
0.038462 - In that sense, the set of bounds L are the set of constants in Eq (3).
0.062121 - (4) Finally, an artificial hydrocarbon network may contain more than one compound.
0.049645 - Then, a set of compounds performs a linear combination (mixtures of compounds) like Eq (5); where, the set is a collection of stoichiometric coefficients and S is the resultant mixture of compound behaviors in (Ponce & Ponce, 2011).
0.100794 - (5) Fig 4 shows an abstraction of a simple artificial hydrocarbon network based on the above components and interactions described.
0.073844 - The basic structure of an artificial hydrocarbon network based on linear… Fig 4.
0.077273 - The basic structure of an artificial hydrocarbon network based on linear compounds.
0.068939 - The AHN-algorithm For instance, suppose that there exists any given system .
0.049383 - Moreover, there is a set of observations of input signals X and output signals Y extracted from .
0.074311 - Then, an artificial hydrocarbon network AHN can model , such that, like Eq (5) and the loss function E in Eq (6) is minimized until it meets a small value of tolerance ∊; where, is the ith observation over , and q is the number of observations.
0.046875 - (6)∊ It is remarkable to say that each compound minimizes the loss function E with a slight modification over each molecular behavior , , and it is expressed in Eq (7); where, is the ith observation over the subset like Eq (8) that contains only observations in the range , and is the number of observations in .
0.036036 - (7) (8) Without loss of generalization, this paper considers to be a single-input and single-output (SISO) system with an input signal and an output signal .
0.063611 - Thus, in order to build and train the artificial hydrocarbon network AHN, Algorithm 1 shows the supervised learning algorithm, namely the SIMPLE-AHN algorithm, to compute the structure and parameters of the artificial hydrocarbon network AHN (Ponce & Ponce, 2011, 2012).
0.080460 - In particular, it assumes that each compound is a saturated linear chain of n CH-primitive molecules, i.e.
0.033333 - two molecules and molecules, of the form as Eq (9).
0.021505 - In practice, the indices of these molecules are used to determine the maximum number of hydrogen atoms d in Eq (2).
0.000000 - (9) 3.3.
0.102892 - Properties of artificial hydrocarbon networks The artificial hydrocarbon networks algorithm is a supervised learning method for solving inference and classification problems.
0.012346 - In particular, AHNs act as regression methods but also as smoothers, as highlighted in Ponce et al.
0.000000 - (2012).
0.087826 - In addition, as noted in Algorithm 1, the artificial hydrocarbon networks algorithm is non-probabilistic.
0.057471 - Some references (Ponce & Ponce, 2012; Ponce et al., 2013, 2012) present experimental results in nonlinear, continuous and static problems.
0.065163 - Artificial hydrocarbon networks can be compared with artificial neural networks (ANNs).
0.053763 - For instance, the AHN-algorithm can be expressed in a more compact structure than ANNs, it cannot handle with initialization parameters as ANNs, and AHN-structures determine how molecules affect the overall result in contrast with ANNs in which neurons are not capable to determine the effects in the overall neural network.
0.024390 - On the other hand, since AHNs have basic units of information called molecules, the AHN-algorithm encapsulates information in molecular behaviors aiming to inherit data to other compounds or AHN-structures.
0.022523 - This characteristic also allows to mix properties of modeled systems (creating mixtures of different compounds) increasing the complexity of models to better explain systems (Ponce & Ponce, 2012).
0.067826 - Artificial hydrocarbon networks are organized structures primary due to the levels of topology, i.e.
0.023810 - molecules, compounds and mixtures.
0.046875 - Moreover, hydrogen parameters, stoichiometric coefficients and bounds parameterize the AHN-structure, also giving a partial understanding of the modeled system (i.e.
0.000000 - gray box).
0.057505 - At last, an artificial hydrocarbon network structure is stable (Ponce & Ponce, 2011) in terms of the connections between molecules due to heuristics inspired on chemical rules (e.g.
0.027778 - the degrees of freedom in molecules or the compound based on saturated linear chains).
0.027778 - Algorithm 1.
0.106295 - The SIMPLE-AHN algorithm for modeling a SISO-system.
0.033333 - Input: The training set , the number of molecules per compound n, and the number of compounds c. Output:The set of stoichiometric coefficients , the collection of parameters , and the structure .
0.017544 - Note:LSErefers to the least squares estimates optimization method.
0.046667 - ; for do Generate a saturated linear chain of n CH-primitive molecules like Eq (9).
0.026667 - Initialize the set of bounds L such that the input domain of is equally partitioned.
0.000000 - Split observations into n subsets using Eq (8).
0.037037 - for each partition do Obtain the hydrogen parameters and of Eq (2) using LSE over Eq (7).
0.000000 - Update .
0.052632 - Build a CH-molecular behavior using like Eq (2).
0.050000 - end Build a compound like Eq (4) using all behaviors.
0.000000 - Update .
0.020833 - Mix all compounds in to find the set of using LSE over Eq (5).
0.000000 - Override .
0.055556 - Calculate the value in Eq (5) using and .
0.000000 - Compute .
0.025641 - end return and .
0.094710 - This section introduces the description of the proposed adaptive artificial hydrocarbon network filter, namely the modified AHN-filter, that can be used for reducing white noise from audio signals.
0.051282 - In fact, this filter is based on the AHN-filter previously described in Ponce et al.
0.000000 - (2012).
0.084668 - The proposal of the following modified AHN-filter contributes in two aspects: first, it introduces a novel approach of Algorithm 1 based on the adjustment of n molecular behaviors acting on unequal intervals; and second, it implements the latter adjustment of molecular behaviors in order to filter audio signals corrupted with white noise better than the AHN-filter reported in Ponce et al.
0.000000 - (2012).
0.020202 - Adjustment of n molecular behaviors on unequal intervals As noted, Algorithm 1 fixes intervals equally at which molecules act over the input domain.
0.057292 - For example, if there are three molecules in a compound, then each molecule will act over a third of the input domain.
0.060606 - However, it does not assure that compounds will cover the input domain optimally, as shown in Fig 5(a); where molecules cannot cover the input domain optimally as noted in the overall loss function .
0.033333 - In that sense, it would be better if each molecule finds the best interval at which it can act, getting unequal intervals, as shown in Fig 5(b); where molecules cover the input domain optimally, minimizing the overall loss function .
0.033333 - Example of the influence of intervals in AHNs Fig 5.
0.037037 - Example of the influence of intervals in AHNs.
0.000000 - (dashed lines) bounds of molecules.
0.087407 - The above example shows that unequal intervals offer better performance in artificial hydrocarbon networks than equal intervals.
0.119444 - It is remarkable to say that unequal intervals will require a complex training strategy of building and finding parameters in artificial hydrocarbon networks in comparison with the training procedure of Algorithm 1.
0.022727 - Thus, the objective of the following improvement of Algorithm 1 is to find the best partition (possibly unequal) of the input domain in which n CH-primitive molecules will model any given system accurately.
0.086763 - For instance, suppose that an artificial hydrocarbon network AHN is built using the number of molecules and the number of compounds .
0.041667 - Let and be the two molecular behaviors of the CH-primitive molecules in AHN.
0.028986 - Also, let be the behavior of the compound such that Eq (10) holds.
0.044872 - Moreover, suppose that any given system has an input domain in the overall interval ; then, and .
0.033333 - (10) In that sense, might be interpreted as the length of bond r (i.e.
0.053333 - the distance between two linked molecules) centered at , such that , as shown in Fig 6.
0.023810 - In fact, the value has to be optimized in order to minimize the overall loss function of AHN.
0.022222 - Then, Eq (3) can be used as the objective function in the optimization problem, as suggested in Ponce et al.
0.034314 - (2013); where, is the order of bond (in this case is fixed to as expected in a saturated linear chain, see Eq (9)), is a transformation of the length of bond r in terms of the loss function of Eq (7) for all (the molecule number), and is a constant value referred to the minimum energy of bond.
0.012821 - Two bonded CH-primitive molecules separated by the length of bond r=L1-L0 Fig 6.
0.015873 - Two bonded CH-primitive molecules separated by the length of bond .
0.031746 - Using a gradient descent method to minimize Eq (3) with respect to r and calculating the change of length , the update rule of Eq (11) is found; where, is a small real value called the step size, and and are the loss function values of Eq (7) for both molecular behaviors and , respectively.
0.010101 - (11) Until now, the optimization procedure to find the best value of is done with two CH-primitive molecules (Ponce et al., 2013).
0.047619 - In that sense, the current proposal defines an extension of the two molecules to find length of bonds between n CH-primitive molecules, as follows.
0.040230 - Suppose that there are n molecular behaviors forming a compound with behavior as Eq (4) with a set of bounds ; where, and , and the subset is the set of length of bonds, relative to an arbitrary origin set at , between two adjacent linked molecules with molecular behaviors and .
0.027083 - Moreover, since the loss function of Eq (7) can be computed for each molecular behavior , the update rule of Eq (11) can be extended to an update rule like Eq (12) of n molecular behaviors assuming that each pair of linked molecules has a length of bond , and this pair of molecules can be treated as an isolated one; where, is the step size of the ith length of bond.
0.051282 - For simplicity, this paper will consider a step size for all lengths of bond, i.e.
0.000000 - .
0.016129 - (12) Finally, in order to obtain the subset of bounds relatively measured from , each bound can be calculated as Eq (13).
0.059481 - (13) Using the above information, this paper proposes Algorithm 2, the PROPOSED-AHN algorithm, to compute the structure and parameters of an artificial hydrocarbon network AHN with n CH-primitive molecular behaviors over optimal (and possibly unequal) intervals.
0.040650 - Design of the modified AHN-filter For instance, consider an audio signal sample vector over time t corrupted with white noise; where, y is the set of samples of one channel.
0.075049 - The idea of the following proposal is to design an adaptive filter based on artificial hydrocarbon networks using optimal intervals for molecular behaviors, namely the modified AHN-filter.
0.027778 - Algorithm 2.
0.101159 - The PROPOSED-AHN algorithm for modeling a SISO-system using optimal intervals for molecular behaviors.
0.040404 - Input: The training set , the number of molecules per compound n, the number of compounds c, the step size , and the tolerance value ∊ .
0.028986 - Output:The set of stoichiometric coefficients , the collection of parameters , and the structure .
0.016667 - Note: LSE refers to the least squares estimates optimization method.
0.046667 - ; for do Generate a saturated linear chain of n CH-primitive molecules like Eq (9).
0.012346 - while overall loss function ∊ do Initialize randomly the set of bounds L over the input domain of .
0.000000 - Split observations into n subsets using Eq (8).
0.038462 - for each partition do Obtain the parameters and of Eq (2) using LSE over Eq (7).
0.019608 - Calculate the loss function using Eq (7).
0.028986 - end Update the set of bounds L using Eq (12) and Eq (13).
0.000000 - end Update .
0.000000 - Build all CH-molecular behaviors using like Eq (2).
0.052632 - Build a compound like Eq (4) using all behaviors.
0.000000 - Update .
0.020833 - Mix all compounds in to find the set of using LSE over Eq (5).
0.000000 - Override .
0.055556 - Calculate the value in Eq (5) using and .
0.000000 - Compute .
0.025641 - end return and .
0.047619 - First, the audio signal is divided into batches, so-called windows.
0.060606 - Each window has a finite time size measured in seconds, i.e.
0.000000 - milliseconds.
0.000000 - Then, each window is also divided into n partitions, each partition i with time size .
0.059137 - In order to determine the set of optimal time size values for all partitions, an artificial hydrocarbon network AHN is built and trained in order to use the resultant lengths of bonds over the time domain t of , such that, each time size is equal to the distance between two CH-primitive molecules, i.e.
0.000000 - .
0.092593 - Moreover, suppose that a window starts in time .
0.022222 - Then, the set of bounds L of AHN is determined with and the subset is completely defined using Eq (13).
0.000000 - At last, this process is repeated window by window until is totally covered.
0.026042 - In order to simplify the structure of AHN, Algorithm 2 is restricted to one compound ( ) with n CH-primitive molecules initially set.
0.086957 - Also, it is known that there is a stoichiometric coefficient trivially set to .
0.045977 - Thus, the resultant AHN is an adaptive structure that only modifies its parameters in presence of each window of .
0.070370 - In fact, it is easy to check that increasing the number of sample points inside a partition i, the AHN-structure will perform a lowpass filter with a small value of the cut-off frequency.
0.020202 - Since that, the smaller the number of molecules n is, the smaller the value of the cut-off frequency is performed by AHN.
0.062847 - To this end, the overall application of AHN over the audio signal corrupted with white noise performs the proposed modified AHN-filter.
0.047619 - Fig 7 shows the block diagram of the modified AHN-filter.
0.087246 - Block diagram of the proposal: the modified AHN-filter for noisy audio signals Fig 7.
0.094893 - Block diagram of the proposal: the modified AHN-filter for noisy audio signals.
0.060000 - In order to measure the performance of the modified AHN-filter three evaluations are used.
0.129274 - The first one considers a comparison between the modified AHN-filter and the classical FIR-filter.
0.036765 - For instance, the FIR-filter is expressed as a finite weighted sum as Eq (14); where, is a finite sequence of data representing the input signal over is a set of filter coefficients found by designing methods like windowing, is the finite sequence representing the output signal over t, and N represents the order of the FIR-filter.
0.043011 - See Antoniou (2005), Parks and Burrus (1987) and Smith (1997) for detailed information of FIR-filters and methods for designing parameters.
0.068376 - (14) The second evaluation considers the short-time objective intelligibility (STOI) value which it represents a monotonic relation with the average intelligibility of filtering signals (Taal, Heusdens, & Jensen, 2011).
0.030612 - In fact, the STOI metric offers an objective, non-qualitative way to measure the intelligibility of filtered signals with respect to original signals, ranging from to ; where, small values represent poor intelligibility and large values represent high-quality intelligibility.
0.043478 - The last evaluation considers the signal-to-noise ratio (SNR) which it measures the ratio between the average power of the interested signal and the average power of the noise signal as shown in Eq (15).
0.011494 - If the SNR-value is greater than , then the signal contains much more meaningful information than noise (Smith, 1997).
0.000000 - (15)
0.060000 - In order to prove the performance of the modified AHN-filter, three experiments were designed.
0.054422 - The first experiment uses an audio signal digitally contaminated with white noise; the second experiment was run on a DSP hardware; and the third experiment considers a naturally contaminated audio signal coming from a recording using a mobile phone.
0.046875 - Experiment 1: filtering audio signal digitally corrupted with white noise This experiment is based on the previous work of Ponce et al.
0.000000 - (2012).
0.066667 - In particular to the current paper, the experiment considers a five-second mono-channel audio signal segment sampled at kHz of a popular rock band.
0.068182 - In addition, it was normalized and corrupted with white noise of SNR.
0.035088 - Fig 8 shows the original and the corrupted signals.
0.028986 - Audio segment of Experiment 1: (black) corrupted audio signal, (gray) original… Fig 8.
0.028986 - Audio segment of Experiment 1: (black) corrupted audio signal, (gray) original audio signal.
0.119963 - In fact, the proposed AHN-filter was built using 10 CH-primitive molecules ( ) and trained with Algorithm 2.
0.035088 - The size of the window was fixed to ms.
0.111111 - Fig 9(a) presents the response of the modified AHN-filter in time domain.
0.131965 - In order to compare it, a classical 30-th order FIR-filter was implemented and its response is presented in Fig 9(b).
0.064103 - As notice in Fig 9, the modified AHN-filter can achieve noise reduction in audio signals.
0.092593 - Audio segment filtered in Experiment 1 Fig 9.
0.104167 - Audio segment filtered in Experiment 1.
0.057690 - To better analyze the performance of the modified AHN-filter, Fig 10 depicts a comparison in frequency domain of the original signal (Fig 10(a)), the response of the modified AHN-filter (Fig 10(b)) and the response of the FIR-filter (Fig 10(c)).
0.047619 - Notice that the cut-off frequency ( ) is approximately at Hz in the modified AHN-filter response and Hz in the FIR-filter response, qualitatively proving that AHN-filters can achieve lowpass responses.
0.062651 - It is important to remark that the cut-off frequency of the FIR-filter was set at Hz because important data of original audio signal is removed at the same cut-off frequency of the modified AHN-filter.
0.072222 - In addition, the STOI-value was measured in both responses obtaining for the AHN-filter and for the FIR-filter.
0.119883 - Thus, a FIR-filter is more intelligible than the proposed filter.
0.043011 - Finally, the SNR-value of the filtered signal applying the modified AHN-filter is of and when applying the FIR-filter.
0.016667 - Analysis of signals in frequency domain (Experiment 1) Fig 10.
0.018519 - Analysis of signals in frequency domain (Experiment 1).
0.138782 - Since the above evaluation, a filter based on artificial hydrocarbon networks can reduce considerably the noise in audio signals.
0.033333 - However, the STOI-value suggests that the filtered signal via the modified AHN-filter is not much intelligible, but in terms of noise reduction, the SNR-value reveals that the AHN-filter has better performance than the classical FIR-filter.
0.098485 - In fact, Fig 10 shows that a non-adaptive filter, i.e.
0.080885 - FIR-filter, has poor performance of filtering white noise, while the proposed adaptive filter can reach a better performance.
0.037037 - Table 1 summarizes the results of all experiments.
0.000000 - Table 1.
0.023810 - Summary of experimental results.
0.008830 - Description Experiment 1 Experiment 2 Experiment 3 Time size of audio signal 5 s 3 s 5 s Number of channels mono-channel mono-channel mono-channel Sample rate 44.10 kHz 44.10 kHz (mic) 44.10 kHz (mobile) Noise corruption 15% SNR 20% SNR ∼15% SNR AHN-filter specifications 10 CH-molecules 10 CH-molecules 10 CH-molecules tw = 10 ms tw = 10 ms tw = 10 ms fc = 5000 Hz fc = 5000 Hz fc = 4500 Hz FIR-filter specifications 30-th order 30-th order 30-th order fc = 7000 Hz fc = 5000 Hz fc = 5000 Hz STOI-value 0.6628 AHN 0.6404 AHN 0.3514 AHN 0.8083 FIR 0.6648 FIR 0.4918 FIR SNR-value 2.3318 AHN 8.3917 AHN 6.1314 AHN 0.8609 FIR 1.4556 FIR 1.9239 FIR 5.2.
0.044218 - Experiment 2: filtering audio signal on DSP hardware This experiment considers the implementation of the modified AHN-filter on DSP NI-Speedy 33 hardware; an educational board for signal processing that can be easily programmed using the LabVIEW platform.
0.080460 - In this case, the audio signal was obtained via a microphone connected to the analog input of the hardware.
0.060606 - Then, the audio signal was corrupted programmatically with white noise of SNR.
0.035088 - The response of the modified AHN-filter is then obtained and finally the filtered signal is reproduced on headphones connected to the analog output port of the hardware.
0.070513 - Fig 11(a) shows a 3-s audio signal collected from the hardware sampled at kHz.
0.046296 - Fig 11(b) shows the response of the modified AHN-filter and Fig 11(c) shows the response of the FIR-filter, both in time domain.
0.111947 - The AHN-filter was built using molecules trained with Algorithm 2.
0.049020 - The size of the window was fixed to ms. Notice that offline performance is needed for calculating all hydrogen parameters in the adaptive structure.
0.025641 - If online filtering is required, real-time techniques may be used; but presetting parameters is mandatory.
0.039216 - Audio segment of Experiment 2 Fig 11.
0.044444 - Audio segment of Experiment 2.
0.041667 - In can be seen in Fig 11 that classical FIR-filter achieves lowpass filtering but does not attenuates noisy signal while voiceless, in comparison with the response of the AHN-filter (Fig 11(b)).
0.066667 - In addition, Fig 12 shows the comparison of the modified AHN-filter and the FIR-filter, both in frequency domain.
0.071053 - Fig 12(b) reveals that the proposed AHN-filter can eliminate most of the white noise in the corrupted signal, but it does not cancel all white noise after Hz.
0.047619 - Actually, the FIR-filter can deal with high frequencies, e.g.
0.053922 - after Hz; but it cannot filter white noise in low frequencies, as revealed in Fig 12(c) in the interval from Hz to Hz.
0.054348 - The qualitative comparison is also complemented with the quantitative STOI metric; in which, the response of the AHN-filter has of STOI value and STOI value obtained from the filtered audio signal using the FIR-filter.
0.053333 - Thus, FIR-filter is relatively more efficient than the AHN-filter, in terms of intelligibility.
0.041667 - Finally, applying the SNR metric, the response of the AHN-filter obtained and the FIR-filter , showing that the modified AHN-filter reduces white noise better than the FIR-filter.
0.039216 - All results are summarized in Table 1.
0.016667 - Analysis of signals in frequency domain (Experiment 2) Fig 12.
0.018519 - Analysis of signals in frequency domain (Experiment 2).
0.040404 - Experiment 3: Filtering Audio Signal Naturally Corrupted with White Noise The last experiment considers an audio segment corrupted with noise from the environment.
0.107143 - In that case, a mobile phone was used for recording the audio signal from an audio CD track.
0.073333 - In fact, this is a real-world application in mobile devices to recognize audio segments.
0.015873 - Examples of these applications can be found in Golik et al.
0.020833 - (2012) and Zhong and Xiang (2011).
0.096272 - Actually, in order to compute the results of the artificial hydrocarbon network based filter and the FIR-filter; the same segment of audio signal was extracted from the audio CD.
0.072917 - At last, five-second mono-channel audio segment sampled at kHz was used in the experiment as shown in Fig 13(a).
0.086957 - Analyzing Fig 14(a), the recorded audio signal is corrupted with approximately SNR.
0.039216 - Audio segment of Experiment 3 Fig 13.
0.044444 - Audio segment of Experiment 3.
0.016667 - Analysis of signals in frequency domain (Experiment 3) Fig 14.
0.018519 - Analysis of signals in frequency domain (Experiment 3).
0.064103 - Fig 13(b) shows the response of the modified AHN-filter and Fig 13(c) shows the response of a 30-th order FIR-filter, both in time domain.
0.129274 - In addition, Fig 14 shows a comparison between the responses of both filters in frequency domain.
0.061728 - The cut-off frequency of the AHN-filter is approximately Hz, and Hz in the FIR-filter.
0.058333 - In fact, Fig 14(c) reveals that some of white noise could not be removed by the FIR-filter in low frequencies, but it is very efficient in high frequencies.
0.086667 - In contrast, the AHN-filter has a better performance in low frequencies eliminating white noise.
0.067901 - In terms of intelligibility, the STOI-value of the AHN-filter is and for the FIR-filter.
0.061728 - At last, the SNR-value for the modified AHN-filter and the FIR-filter are and , respectively.
0.044325 - Practical implications As shown in experimental results, the proposed AHN-filter can achieve high performance in audio filtering as measured with the signal-to-noise ratio values (2.33-SNR experiment 1, 8.39-SNR experiment 2, 6.13-SNR experiment 3); but it is less competitive in intelligibility as determined with the short-time objective intelligibility values (0.66-STOI experiment 1, 0.64-STOI experiment 2, 0.35-STOI experiment 3).
0.107038 - In that sense, the proposed AHN-filter can be use as an alternative method for audio filtering in contrast with the FIR-filter.
0.098127 - Also, the proposed AHN-filter (Algorithm 2) exhibits a better response than a previous work of Ponce et al.
0.041667 - (2012) where Algorithm 1 was used.
0.022222 - For instance, Ponce et al.
0.046296 - (2012) reports that the response of the FIR-filter over the same experiment, as Experiment 1, is more intelligible ( ) than the response of the AHN-filter.
0.077950 - In contrast, the proposed modified AHN-filter of the current paper demonstrates a reduction of this comparison stating that the FIR-filter is better in intelligible more than the response of the modified AHN-filter.
0.066667 - In a similar fashion with Experiment 2, Ponce et al.
0.065476 - (2012) reports an efficiency of in the response of the FIR-filter in comparison with the AHN-filter.
0.052632 - However, the modified AHN-filter reduces this ratio to .
0.049383 - In both cases, the modified AHN-filter improved the performance of its response in terms of intelligibility.
0.078738 - Furthermore, the proposed AHN-filter can be used in other audio applications more than noise filtering, such as: system identification, prediction and channel equalization.
0.062500 - For example, in system identification, an AHN-filter might be act as the model of an unknown audio system using the information of a broadband signal corrupted with white noise.
0.068627 - As a prediction model, an AHN-filter might be used for determining future values in an input signal in order to prevent undesired signals.
0.055556 - Lastly, AHN-filters might also be used for channel equalization by acting as the inverse model of the channel using a noisy signal with a delayed version of it.
0.061404 - In addition, the AHN-filter has some practical implications.
0.112903 - For instance, it is an adaptive filter that computes the output-filtered signal in more steps than a classical FIR filter.
0.050000 - Also, the randomization of Algorithm 2 causes variation in computational time at each window frame, in contrast with FIR filters.
0.051724 - In that sense, real-time techniques have to be used to improve the computational time of the AHN-filter.
0.122807 - This implies a tradeoff between timing and filtering computations.
0.124768 - But as shown in the results, the proposed AHN-filter presents high performance that can be efficiently used in audio filtering.
0.092805 - This work introduces an adaptive filtering based on artificial hydrocarbon networks that can reduce white noise from audio signals.
0.018519 - In fact, this work contributes in two aspects.
0.074603 - First, it introduces an improvement of artificial hydrocarbon networks algorithm (Algorithm 1) based on adjustment of n molecular behaviors acting on unequal intervals as developed in the proposed Algorithm 2; and second, it implements the latter Algorithm 2 in order to filter audio signals corrupted with white noise better than the response of Algorithm 1.
0.088889 - Actually, it can be seen from the experiments above that the proposed AHN-filter can achieve its goal of denoising audio signals.
0.064815 - In particular, the modified AHN-filter has a better performance in terms of the signal-to-noise ratio (SNR) value than the classical FIR-filters employed.
0.051282 - However, FIR-filters produce more intelligible audio segments than AHN-filters, as shown by STOI-values.
0.030612 - On one hand, the performance in terms of the SNR-value can be explained by the fact that adaptive filters deal with white noise much better than non-adaptive filters, because white noise is normally distributed along all frequencies.
0.047619 - On the other hand, the intelligibility in audio signals are better in FIR-filters than AHN-filters because FIR-filters do not reduce several low frequencies that provide information to audio signals.
0.046296 - In contrast, AHN-filters reduce few low frequencies.
0.051724 - In that sense, future research includes analysis of the cut-off frequency in AHN-filters to improve their performance.
0.099306 - In addition, this paper presented some implementations of the modified AHN-filter that prove practicability of the proposed filter in different contexts.
0.060580 - In particular, three different sources of noise were experimented: programmatically, DSP hardware, and mobile devices.
0.052632 - Similar results were found and reported through Section 5.
0.055556 - Actually, the modified AHN-filter is inspired in the work of Ponce et al.
0.000000 - (2012).
0.076577 - The latter reported that the response of the FIR-filter in a similar experiment as Experiment 1 is more intelligible ( ) than the response of the AHN-filter.
0.077950 - In contrast, the proposed modified AHN-filter of the current paper demonstrates a reduction of this comparison stating that the FIR-filter is better in intelligible more than the response of the modified AHN-filter.
0.066667 - In a similar fashion with Experiment 2, Ponce et al.
0.065476 - (2012) reports an efficiency of in the response of the FIR-filter in comparison with the AHN-filter.
0.052632 - However, the modified AHN-filter reduces this ratio to .
0.049383 - In both cases, the modified AHN-filter improved the performance of its response in terms of intelligibility.
0.072222 - Future directions in audio signals consider the implementation of Algorithm 2 in applications like system identification, prediction, and channel equalization.
0.121739 - Furthermore, the proposed Algorithm 2 is not limited to be used in audio filtering applications.
0.065052 - Since, the algorithm performs an optimal training of the intervals at which molecular behaviors act, the artificial hydrocarbon networks technique can implement Algorithm 2 in future applications to improve the performance of inference and classification problems, like: engineering system identification, prediction, and pattern recognition.

[Frase 384] In addition, this paper presented some implementations of the modified AHN-filter that prove practicability of the proposed filter in different contexts.
[Frase 4] Thus, the scope of this paper is to design and implement a novel approach of artificial hydrocarbon networks on adaptive filtering for audio signals.
[Frase 3] Recent work provides that there exist some insights on using an artificial intelligence method called artificial hydrocarbon networks (AHNs) for filtering audio signals.
