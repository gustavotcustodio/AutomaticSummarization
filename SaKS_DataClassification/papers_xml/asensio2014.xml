<article>
  <title>Artificial Intelligence approaches for the generation and assessment of believable human-like behaviour in virtual characters</title>
  <abstract>
    <sentence>Having artificial agents to autonomously produce human-like behaviour is one of the most ambitious original goals of Artificial Intelligence (AI) and remains an open problem nowadays.</sentence>
    <sentence>The imitation game originally proposed by Turing constitute a very effective method to prove the indistinguishability of an artificial agent.</sentence>
    <sentence>The behaviour of an agent is said to be indistinguishable from that of a human when observers (the so-called judges in the Turing test) cannot tell apart humans and non-human agents.</sentence>
    <sentence>Different environments, testing protocols, scopes and problem domains can be established to develop limited versions or variants of the original Turing test.</sentence>
    <sentence>In this paper we use a specific version of the Turing test, based on the international BotPrize competition, built in a First-Person Shooter video game, where both human players and non-player characters interact in complex virtual environments.</sentence>
    <sentence>Based on our past experience both in the BotPrize competition and other robotics and computer game AI applications we have developed three new more advanced controllers for believable agents: two based on a combination of the CERA–CRANIUM and SOAR cognitive architectures and other based on ADANN, a system for the automatic evolution and adaptation of artificial neural networks.</sentence>
    <sentence>These two new agents have been put to the test jointly with CCBot3, the winner of BotPrize 2010 competition (Arrabales et al., 2012), and have showed a significant improvement in the humanness ratio.</sentence>
    <sentence>Additionally, we have confronted all these bots to both First-person believability assessment (BotPrize original judging protocol) and Third-person believability assessment, demonstrating that the active involvement of the judge has a great impact in the recognition of human-like behaviour.</sentence>
  </abstract>
  <keywords>
    <keyword>Turing test</keyword>
    <keyword>Human-like behaviour</keyword>
    <keyword>Believability</keyword>
    <keyword>Non-player characters</keyword>
    <keyword>Cognitive architectures</keyword>
    <keyword>Genetic algorithm</keyword>
    <keyword>Artificial neural networks</keyword>
  </keywords>
  <section name="Introduction">
    <sentence>The design and implementation of believable artificial agents, truly indistinguishable from humans, remains an open problem.</sentence>
    <sentence>This challenge has been typically addressed from two interrelated perspectives within cognitive science.</sentence>
    <sentence>On one hand, psychological models of human cognition try to explain how human behaviour is produced.</sentence>
    <sentence>On the other hand, computational models implemented in artificial agents try to replicate to some extent human-like behaviour.</sentence>
    <sentence>In this work, we focus exclusively in the sensorimotor behavioural dimension, setting aside any concerns related to the physical appearance of the artificial agents or their verbal report capabilities.</sentence>
    <sentence>The imitation game proposed by Turing is the paradigmatic test for believability.</sentence>
    <sentence>However, current state of the art in cognitive and computer sciences has not reached the degree of development in which this test could be considered truly achievable.</sentence>
    <sentence>Therefore, a number of different variations of the original Turing test have been proposed, usually limited Turing tests with relaxed constraints and more specific problem domains.</sentence>
    <sentence>In this paper, we focus in a specific limited version of the Turing test designed for virtual characters and based in a First-Person Shooter (FPS) video game.</sentence>
    <sentence>From the point of view of the scientific research on human cognition, video game characters are an interesting case of artificial agents because they are easy to implement using the video game industry state of the art tools and their virtual environments can become quite complex, simulating a great variety of contexts and ambient conditions.</sentence>
    <sentence>Furthermore, interaction with real world and with human players is also seamlessly integrated in real-time, as video games are designed to facilitate the prompt interaction between human players and non-player characters (NPC).</sentence>
    <sentence>While old game character implementations (for instance, Pac-Man ghosts or Space Invaders alien spacecrafts) were based on really simple pre-programmed and scripted behaviours, modern AAA video games are developed to simulate real complex environments and they require engaging, realistic and believable human-like behaviour for their NPCs.</sentence>
    <sentence>Although scripted behaviours might still be acceptable for some specific scenarios, AAA game consumers expect to find synthetic characters at the same level of behavioural realism and unpredictability as evoked by the visual experience of the game.</sentence>
    <sentence>Generally, human-like behaviour is difficult to both define and test.</sentence>
    <sentence>In fact, the Turing test paradigm stills apply to this problem because no better alternatives have been found to characterise human behaviour.</sentence>
    <sentence>In the realm of computer games, this elusive characterisation might, in principle, be seen easier to define.</sentence>
    <sentence>For instance, human players usually consider disappointing the behaviour of artificial characters for two main reasons (Nareyek, 2004): they are either too intelligent, rational and accurate to be human, or on the contrary, they are too silly.</sentence>
    <sentence>Therefore, the challenge is to find that blurred medium level that characterises human player behaviour.</sentence>
    <sentence>From the point of view of cognitive science, human-level intelligence and human-like behaviour can be considered as produced by several interrelated psychological processes, ranging from basic activation processes like primary motivations to complex high level cognitive processes such as set shifting and imitation learning.</sentence>
    <sentence>The current knowledge we have about these processes can be used to inspire the design of artificial cognitive architectures.</sentence>
    <sentence>In this paper, we present three different approaches to this sort of inspiration and put them to the test in an adapted version of the Turing test based in a video game (Hingston, 2009).</sentence>
    <sentence>Additionally, we assess the believability (or “humanness”) of these bots using two different assessing methods: First-person and Third-person judges.</sentence>
    <sentence>The remainder of this paper is structured as follows.</sentence>
    <sentence>In the next section we discuss the problems of assessing believability and describe the testing protocols we have used in this research.</sentence>
    <sentence>In Section 3 we present the different approaches to the design of believable agents, followed in Section 4 by a description of the implementations that we have developed for the believability experiments.</sentence>
    <sentence>Finally, experimental results are presented in Section 5 and discussed in Section 7.</sentence>
  </section>
  <section name="Testing for believability in video games">
    <sentence>Testing for human-like behaviour is not straightforward as different observers usually pay attention to different aspects (Arrabales et al., 2012).</sentence>
    <sentence>Therefore the task of judging the believability of a video game character can be approached from the perspective of inter-subjective assessment.</sentence>
    <sentence>In this context there is a key factor to take into account: the possible differences between First-person and Third-person observation.</sentence>
    <sentence>Togelius et al.</sentence>
    <sentence>(2012) argue that believability is better assessed from a Third-person perspective rather than a First-person perspective, i.e.</sentence>
    <sentence>where the assessor is not a participant in the game.</sentence>
    <sentence>As described below, the BotPrize testing protocol forces all human judges to take active part in the game and perform the assessing task as First-person observers.</sentence>
    <sentence>One of the main contributions of this work is to compare the believability results of the same bots both using the First-person perspective of the BotPrize environment and the Third-person perspective using recorded video from the very same testing sessions.</sentence>
    <sentence>In other words, believability for each bot is assessed using two different methods but using the same game play data.</sentence>
    <sentence>The BotPrize testing protocol The first method that we have used in order to assess the believability of our bots is the international BotPrize competition testing environment (Hingston, 2009).</sentence>
    <sentence>The BotPrize challenge (held yearly since 2008) was originally conceived as a Turing test for First-Person video game bots (NPCs).</sentence>
    <sentence>In the classical Turing test accurate verbal report and conversational skills are the key factors, however in the domain of FPS bots these aspects are neglected, focusing the assessment completely in observed non-verbal sensory-motor skills.</sentence>
    <sentence>BotPrize environment is based in the video game “Unreal Tournament 2004” by Epic Games, a First-Person Shooter set in a fictional future with futuristic weapons.</sentence>
    <sentence>The objective of the game (deathmatch mode) is to kill as many opponents as possible without being killed by the other players.</sentence>
    <sentence>Both artificial bots and human players connect to the game server by means of a local area network or over the Internet.</sentence>
    <sentence>Different judging schemes were used in early editions of the BotPrize competition.</sentence>
    <sentence>In this work, we use the latest scheme adopted in 2010 (Hingston et al., 2010).</sentence>
    <sentence>In this scheme a judging gun (the “Link Gun”) is included in the game.</sentence>
    <sentence>All players, humans and NPCs spawn with a Link Gun with infinite ammo.</sentence>
    <sentence>Although the primary and alternate fire modes of the judging gun look and sound the same to all observers, they have completely different meanings and effects: the primary firing mode is meant to issue a vote for a bot (artificial player or NPC) and the alternate firing mode is meant to issue a vote for a human player.</sentence>
    <sentence>If a human player shoots a bot or another human using the primary firing mode of the Link Gun, then the bot or the other human player obtains a bot vote.</sentence>
    <sentence>Analogously, If a human player shoots a bot or another human using the alternate firing mode of the Link Gun, the other player (bot or human) obtains a human vote.</sentence>
    <sentence>At the end the humanity percentage will be the human votes divided by the total number of votes received.</sentence>
    <sentence>During our tests we allow the players to judge any other players as many times as desired.</sentence>
    <sentence>Using the judging gun the game play is transformed from a pure deathmatch game into a hybrid game in which both judging and killing/surviving aspects have to be taking into account simultaneously.</sentence>
    <sentence>It is important to remark that all players (humans and artificial) have access to the judging gun.</sentence>
    <sentence>Therefore, the designer of a bot also has to take decisions on how and when the bot will use the Link Gun, as this usage will also be part of the observed behaviour.</sentence>
    <sentence>Apart from the judging gun, the rest of the weapons function as usual.</sentence>
    <sentence>However, the damaged produced by these weapons is reduced by a 60%, thus giving human players more chances to observe the other players before being riddled under enemy fire.</sentence>
    <sentence>In order to obtain a significant amount of judging data and reduce the bias that a given map would introduce, different testing sessions in different maps are organised using a centralised game server that runs the BotPrize mod.</sentence>
    <sentence>Each session lasts for 15 min and different maps and scenarios are used each time.</sentence>
    <sentence>Anonymity of players is guaranteed using random player names and random player skins (clothes and body appearance) that changes from one session to the next.</sentence>
    <sentence>The number of human players and bots is balanced, having a similar number of human judges and artificial characters.</sentence>
    <sentence>All human players are meant to be judges, but they also compete for the highest score (that they obtain both from judging and from killing and not being killed).</sentence>
    <sentence>The BotPrize testing protocol is a First-person observation approach, as judges are not allowed to use the spectator mode of the game, and they are also subject of attacks and votes (Link Gun shoots) from other players.</sentence>
    <sentence>As a Third-person test we have used the method described in the following section.</sentence>
    <sentence>The Third-person observer testing protocol As Third-person believability assessment we use the same game data recorded by the game video server during the sessions of the First-person experimentation.</sentence>
    <sentence>However, we generate independent video footage for each player from a virtual Third-person high-angle “chasing camera”.</sentence>
    <sentence>In other words, for each player in the game (bots and humans) a Third-person camera keeps a high-angle view of the action and the corresponding video is stored.</sentence>
    <sentence>Video recordings obtained using the former method can be later used for offline observation.</sentence>
    <sentence>In this case, the judging protocol can be based on non-player human observers who watch the videos and try to tell apart humans and bots.</sentence>
    <sentence>Specific video sequences are selected for judging purposes out of the total available video files.</sentence>
    <sentence>This selection is performed based on the content presented in the film.</sentence>
    <sentence>Basically, scenes just containing a single character moving from one place to another are discarded, and we have decided to focus and select those situations in which two or more characters are engaged in some kind of interaction.</sentence>
    <sentence>This testing method is in principle much more demanding, and humanness ratios are expected to be much lower, as human observers can pay all their attention to the action in the video, not needing to worry about being killed or achieving a high score in the game.</sentence>
    <sentence>While the judge in the First-person approach have to divide attention in two different tasks (play and judge), the judge in the Third-person approach only needs to focus on judging.</sentence>
    <sentence>Similarly, motivational aspects also differ in the two approaches.</sentence>
  </section>
  <section name="Different approaches to the design of believable characters">
    <sentence>A number of different approaches can be used to address the problem of believable behaviour generation.</sentence>
    <sentence>We can distinguish between two main types of approaches in the design of artificial agent controllers.</sentence>
    <sentence>In one hand, controllers can be built and trained based on data obtained by logs of human behavioural data.</sentence>
    <sentence>On the other hand, controllers can be designed based on models of human cognition.</sentence>
    <sentence>While the former exploit the statistical structure of actions in typical human behaviour, the latter focus on psychological models of the human being.</sentence>
    <sentence>In this work, we take a more cognitive stance, considering the problem of behaviour generation as a S–O–R (Stimulus–Organism–Response) problem (Ertmer and Newby, 1993), as we consider that classical behaviourist S–R models cannot cope with the complexity of believable behaviour.</sentence>
    <sentence>However, S–R models cannot be neglected in specific problem domain scenarios, like computer video game characters, as controllers based in the replay of human trace data have shown good results (Schrum et al., 2011).</sentence>
    <sentence>Although replaying human trace data can provide good results, this approach is not applicable to environments where no previous human data is available, for instance in new maps of a video game, or in games where the content is generated real time (Yannakakis and Togelius, 2011).</sentence>
    <sentence>S–O–R models are neither free of theoretical and practical problems.</sentence>
    <sentence>In the experimental settings for believability tests stimuli and responses can be well defined and their scope limited.</sentence>
    <sentence>However, the organism component, i.e., the very design of the agent controller, can be addressed in different ways.</sentence>
    <sentence>The problem of modelling O in a S–O–R framework can be considered as the problem of choosing a model of the mind that allows the agent to show perception and action capabilities.</sentence>
    <sentence>This model could be either implicit (subsymbolic) or explicit (symbolic).</sentence>
    <sentence>In other words, stimuli can be associated to actions using implicit rules (as in artificial neural networks) or using explicit rules (as in cognitive architectures).</sentence>
    <sentence>In the following subsections we discuss the details of these approaches and how they can be combined into hybrid models.</sentence>
    <sentence>Exploring the differences between these approaches is interesting to understand the role of the symbol grounding problem in the domain of agent believability (Anderson, 2003).</sentence>
    <sentence>The cognitive approach The cognitive modelling approach is based on the imitation of the human psychological processes that are considered the cause of the human observable behaviour.</sentence>
    <sentence>From this point of view, in order to generate human-like behaviour in a machine, the AI engineer tries to simulate information processing models inspired by psychological models of human cognition.</sentence>
    <sentence>These models usually offer plausible explanations about how different aspect of cognition work in humans and how they interact with each other and with the environment.</sentence>
    <sentence>Artificial cognitive systems aim at integrating both activation processes, like emotion and motivation, and several cognitive processes, like attention, memory, learning, and even language production and understanding.</sentence>
    <sentence>Ultimately, cognitive systems are expected to become effective and adaptive control systems for a situated agent.</sentence>
    <sentence>Although a number of popular models exist in the field of cognitive psychology for each cognitive process, the real challenge is to integrate them all into a functional control system able to develop human-level intelligence and human-like behaviour.</sentence>
    <sentence>Classical AI techniques and models are usually based on very specific and partial explanations of human cognition.</sentence>
    <sentence>For instance, reinforcement learning algorithms focus on the self-adaptation of a system to achieve one or more goals (Szepesvri, 2010), however when we deal with the problem of human-like behaviour we need to take a more global approach, where the actual definition of the goals of the system might be the real challenge.</sentence>
    <sentence>In this work, we describe two bots, codenamed CCBot and CCBotSOAR, both based on artificial cognitive architectures.</sentence>
    <sentence>As explained below, these control systems deal with the problem of integrating and coordinating multiple cognitive processes in order to generate human-like behaviour.</sentence>
    <sentence>The subsymbolic approach Typically, cognitive systems basically deal with symbolic representations of the world.</sentence>
    <sentence>However, at a lower level, taking the inspiration not from the psychological processes but from their neurobiological substrate, the artificial neural networks (ANN) approach Schrum et al.</sentence>
    <sentence>(2012) focuses on imitating the adaptive and pattern recognition capabilities of the nervous system.</sentence>
    <sentence>The human body uses automatic processes purely based on sensory-motor skills for prototypical reactions that need to be executed promptly without losing any time to deeply process the information.</sentence>
    <sentence>For example, when we touch something hot and we burn our hand, the reaction is a quick withdrawal.</sentence>
    <sentence>If this kind of human behaviour is transported to the game, we can make bots have reactions according to each sensation that comes from the environment.</sentence>
    <sentence>Although the reaction can be pre-programmed, there are so many different combination of input information coming to the individual that taking all them into account and all the possible combinations is too difficult.</sentence>
    <sentence>ANN can be taught to act when sensory (input) information is received, for that task, first it has to be defined in detail which sensory information we want to process (inputs) and which actions the bot can perform (outputs).</sentence>
    <sentence>Hybrid approaches Humans cope both with symbolic and subsymbolic representations.</sentence>
    <sentence>While language and conscious thought are the paradigmatic examples of explicit and symbolic information processing, we can easily reckon that a great part of human behaviour is also generated by implicit and automatic processes purely based on sensory-motor skills.</sentence>
    <sentence>Therefore, we think hybrid approaches that can successfully integrate symbolic and subsymbolic approaches are a promising research line towards the generation of human-like behaviour.</sentence>
    <sentence>However, in this deathmatch-mode video game environment where judging is based on short-term assessments both cognitive approaches and pure ANN approaches are expected to reach similar believability ratios.</sentence>
    <sentence>In more complex Turing test environments, where both verbal report and sensory-motor skills are expected to be integrated, hybrid approached are required in order to generate believable behaviours.</sentence>
    <sentence>In the next section we describe the implementations we have designed and built, indicating how we aim at integrating implicit and explicit information processing.</sentence>
  </section>
  <section name="NPC controller implementations">
    <sentence>In this section we describe the three different NPC controllers that we have designed, built and confronted to each other for experimentation.</sentence>
    <sentence>CCBot The Conscious-Robots bot, also known as CCBot2, has been designed and implemented based on the cognitive architecture CERA–CRANIUM, which takes inspiration from several cognitive theories of cognition and human consciousness (Arrabales et al., 2012).</sentence>
    <sentence>CCBot2 is essentially a control architecture that implements some key aspects from the field of Machine Consciousness (MC) research.</sentence>
    <sentence>Basically, the cognitive approach to MC addresses the integration of different cognitive processes into an integrated thread of conscious experience.</sentence>
    <sentence>As described below, in the case of CCBot2 we focus on the integration of basic cognitive processes such as attention and short-term memory.</sentence>
    <sentence>Additionally, activation processes like motivation and emotion are modelled to a lesser extend in this implementation.</sentence>
    <sentence>While classical agent control architectures generally focus in next action selection, CERA–CRANIUM also take decisions about what should be the content of agents conscious perception.</sentence>
    <sentence>There exist a number of cognitive architectures that can be potentially used for the control of video game characters (Samsonovich, 2010) for a review of main cognitive architectures used in robotics, intelligent software agents and other related applications.</sentence>
    <sentence>For instance, SOAR (Laird et al., 1987) and ACT-R (Anderson, 1993) are well-known cognitive architectures that can be used in this domain.</sentence>
    <sentence>In fact, we have also used a combination of CERA–CRANIUM and SOAR in the bot CCBotSOAR (see Section 4.2).</sentence>
    <sentence>Pursuing the goal of human-like behaviour is directly related with the design of cognitive architectures because human higher cognitive processes themselves are believed to be the origin of the behavioural patterns that characterise humans.</sentence>
    <sentence>In this work we propose and demonstrate the use of new trends within the field of cognitive modelling.</sentence>
    <sentence>In the case of CERA–CRANIUM we use consciousness as the main inspiration towards the design for more human-like cognitive systems.</sentence>
    <sentence>In this section we describe the particular way in which CCBot processes the sensory-motor information and generates sequences of adaptive human-like actions.</sentence>
    <sentence>We also argue that having a mechanism to select the conscious contents of the agent’s simulated mind is required in order to successfully generate human-like behaviour.</sentence>
    <sentence>Action selection in CERA–CRANIUM is based on a competitive selection process that establishes, at any given time, a limited set of percepts considered the conscious content of the agent.</sentence>
    <sentence>The architecture CERA–CRANIUM consists of two main components: CERA and CRANIUM.</sentence>
    <sentence>The former is a control architecture of four layers (see Fig 1) and the latter is a platform able to run and manage a large amount of parallel specialized processors.</sentence>
    <sentence>CERA–CRANIUM Architecture Fig 1.</sentence>
    <sentence>CERA–CRANIUM Architecture.</sentence>
    <sentence>CERA’s top layers manage more abstract meaning while lower layers deal with raw sensory data from the simulated sensors.</sentence>
    <sentence>In CCBot we have used an implementation with the following layers: sensory-motor services layer, physical layer, mission-specific layer, and core layer.</sentence>
    <sentence>CRANIUM is an implementation of a blackboard system (Nii, 1994).</sentence>
    <sentence>On one hand, CRANIUM is in charge of managing and dispatching the execution of specialized processors; on the other hand, it has a shared working memory space “the CRANIUM workspace” where the processors can interchange information.</sentence>
    <sentence>Each of the processors is designed to perform a specific function on certain types of data.</sentence>
    <sentence>There are two instances of CRANIUM located in the physical and mission-specific layers.</sentence>
    <sentence>These two CRANIUM instances simulate the working-memory mechanism of the bot.</sentence>
    <sentence>Contents in working memory are iteratively elaborated by specialized processors (see Fig 2).</sentence>
    <sentence>CRANIUM and working memory mechanism Fig 2.</sentence>
    <sentence>CRANIUM and working memory mechanism.</sentence>
    <sentence>CERA’s sensory-motor services layer is an interface between the architecture and the sensors and actuators of the bot.</sentence>
    <sentence>This layer includes the required services to retrieve sensory data readings and to send motor commands to the actuators.</sentence>
    <sentence>In the case of CCBot series, this layer is an adaptation of the Pogamut functions to the CERA–CRANIUM architecture (all the bots described in this paper use Pogamut 3 library functions (Gemrot et al., 2009) to interface with Unreal Tournament 2004 video game).</sentence>
    <sentence>In the physical layer we manage low-level representations of the sensory data and effectors commands.</sentence>
    <sentence>Typically, this layer includes processors that create more abstract representations out of the sensory information and processors that decompose high-level commands into atomic actions, which can be sent directly to the sensory-motor services layer.</sentence>
    <sentence>Mission-specific layer produces and manages elaborated sensory-motor content related to bot’s assigned missions.</sentence>
    <sentence>The information from the physical layer is combined into more meaningful contents related to the goals of the agent and processed to execute the corresponding mission behaviours.</sentence>
    <sentence>The top layer is the so-called core layer, where the mechanisms associated with the cognitive functions are regulated.</sentence>
    <sentence>The cognitive control modules enclosed in this layer are in charge of regulating the way the lower layers work, that is, how the processors interact with each other and what it is the most relevant content to be processed at any given time.</sentence>
    <sentence>In particular, CCBot2 included in this layer only an attentional mechanism, that prioritizes those contents closer to the current active sensory-motor context of the bot.</sentence>
    <sentence>CRANIUM includes a mechanism to select which processors are assigned more priority for execution.</sentence>
    <sentence>Although in principle all processors are treated as equals and all of them are supposed to run asynchronously and concurrently, limitations on computational resources have to be taken into account.</sentence>
    <sentence>Consequently, there is an implicit competition for activation amongst all the processors.</sentence>
    <sentence>The level of priority attained by a processor does not only affect its available execution time, but the specific information it might generate and submit to the workspace.</sentence>
    <sentence>This mechanism can be seen as a winner-takes-all algorithm, where the most activated signals are the ones most likely processed.</sentence>
    <sentence>From this point of view, CRANIUM is a particular implementation of a “pandemonium”, where daemons “or specialized processors” compete with each other for activation (Dennett, 1993).</sentence>
    <sentence>The activation of each processor is calculated based on a heuristic estimation of how much it can contribute to information processing in current active sensory-motor context.</sentence>
    <sentence>The concrete parameters used for this estimation are established by the CERA core layer.</sentence>
    <sentence>As a general rule, CRANIUM workspace operation is constantly modulated by commands sent from the CERA core layer.</sentence>
    <sentence>The two workspaces we use (see Fig 3) are connected with each other through CERA sensory-motor information flows and share selected contents generated by the processors, specifically those with the highest activation level.</sentence>
    <sentence>So the outcome of the workspaces can be seen as a filter where only the signals that contribute more to the global solution pass from one layer to the other.</sentence>
    <sentence>The workspace in the physical layer contains all the processors in charge of processing all data coming from the sensor services and also all processors which decompose the actions into basic commands, atomic actions, for the effectors.</sentence>
    <sentence>The workspace located in the mission layer is populated with higher-level specialized processors, which process the most activated information generated in the physical layer and the signals produced in the workspace itself.</sentence>
    <sentence>All this processed information generated by the specialized processors are integrated into data packages called single percepts, complex percepts, and mission percepts, depending on the sort of information they contain.</sentence>
    <sentence>The single percepts are those which include atomic information, usually sensory signals, while complex percepts include more elaborated and multimodal information.</sentence>
    <sentence>Finally, mission percepts contain information related with goals (and they are only produced in the mission layer).</sentence>
    <sentence>CERA–CRANIUM bottom-up flow Fig 3.</sentence>
    <sentence>CERA–CRANIUM bottom-up flow.</sentence>
    <sentence>There are two flows of information in CERA–CRANIUM.</sentence>
    <sentence>One is the bottom-up flow, where the information from the sensors, the percepts, are processed and combined in order to obtain abstract representations of the environment and the state of the agent.</sentence>
    <sentence>The bottom-up flow can be referred as to the perception flow.</sentence>
    <sentence>The top-down information flow is concerned with the generation of adaptive behaviours oriented to achieve the agent’s goals.</sentence>
    <sentence>The whole set of specialized processors used in the workspaces cannot be described here due to space constraints.</sentence>
    <sentence>CCBot implementation is described in detail in Arrabales et al.</sentence>
    <sentence>(2012).</sentence>
    <sentence>A relatively simple task like shooting an enemy might involve the interaction of seven different specialized processors (Arrabales et al., 2012).</sentence>
    <sentence>For instance, there is a “Player Novelty Detector” in the physical layer that detects when a new enemy appears in the field of view and submit that specific information to the working memory.</sentence>
    <sentence>We have also implemented another processor called “Select Enemy To Shoot” that operates in the mission layer and selects an enemy amongst all players within the field of view.</sentence>
    <sentence>CCBotSOAR The CCBotSOAR controller is based on the CERA–CRANIUM architecture which has been improved with two additional mechanisms that allow: (i) the self-assessment of performance in the achievement of targets (“longtime memory”), (ii) the monitoring of the effects on behaviour of the emotional state of the bot (“feelings”), (iii) the adjustment of the pursued objectives to the context (“situatedness”) and (iv) the focus level as a measure of the game progresses.</sentence>
    <sentence>In Vernon et al.</sentence>
    <sentence>(2007) a comparative assessment of the most relevant cognitive architectures is made from which it can be noticed that the only characteristic that the Global Workspace architecture (Baars, 1997) -on which CERA–CRANIUM has its foundations- is missing is adaptation.</sentence>
    <sentence>Driven by this fact, we have integrated a new module in CERA–CRANIUM that enables the addition of this attribute.</sentence>
    <sentence>By means of a SOAR module (Laird et al., 1987) integrated in CERA–CRANIUM, the system can deploy a learning and memory based decision-making mechanism based on the bot’s experiences that are implemented as “artificial emotions”.</sentence>
    <sentence>In the following paragraphs, we show an explanation of each of the new features of CCBotSOAR.</sentence>
    <sentence>Long-time memory SOAR includes a reinforcement learning system that alters the selection of operators with a reward system.</sentence>
    <sentence>Through several cycles, the bot selects and executes actions while calculating in each of the steps which is the best action according to a reinforcement function.</sentence>
    <sentence>In our implementation, the reinforcement function is grounded on the idea of emotional “appraisal” (based on the theories of Arnold (1960) and Schachter and Singer (1962)) and its positive (action attraction) and negative variation (action repulsion).</sentence>
    <sentence>A more detailed explanation about the emotional model is shown below.</sentence>
    <sentence>Given the emotional appraisal in certain state, the way in which the learning operates is following the learning algorithm SARSA (Laird et al., 1987), which is more appropriate than other more common ones -such as Q-learning algorithm- for very dynamic environments like the one in the Unreal Tournament.</sentence>
    <sentence>The learning mechanism (i.e.</sentence>
    <sentence>selection of operators) is completely provided by the architecture SOAR.</sentence>
    <sentence>Emotional state According to the classical theories (Arnold, 1960 and Schachter and Singer, 1962), we could assume the emotions to be an entity product of two aspects: (1) a generic response of the autonomous system (“arraisal”) and (2) the cognitive evolution of this disturbance (“appraisal”).</sentence>
    <sentence>From these ideas, we consider bots as having an emotional module comprising the following components: • Internal state: The agent’s internal state will be composed of motivations connected with the drives (“essential needs”) of the bot that will drive it to act in a certain way.</sentence>
    <sentence>In our model we have implemented: – Motivations: Aggressiveness (tendency to kill enemies), Illness (need for improved health) and Inability (need for ammunition).</sentence>
    <sentence>– Basic drives: The initial and ideal value of all drives is zero.</sentence>
    <sentence>In this initial setting we will consider drives as satisfied since there is not an associated need.</sentence>
    <sentence>We model two types: health pursuit (high &gt;100, low &lt;40, medium, between both limits) and ammunition search (high &gt;100, low &lt;50, between both limits).</sentence>
    <sentence>– Actions (aiming to satisfy the drive): collect first-aid kit, kill enemy, collect ammunition, etc.</sentence>
    <sentence>• External state: It is a binary state (yes/no) recording proximity of certain elements of the Unreal Tournament environment that can interact with the bot, more specifically, if the bot finds (i) first-aid kit, (ii) enemies or (ii) ammunition.</sentence>
    <sentence>The global intensity of the drive (attribute around which the bot action choice revolves) is calculated as the sum of two terms: the own intensity of the related drive and the value of the closest related external stimulus (i.e., if the bot is close to a first-aid kit, the drive relating to health will be increased).</sentence>
    <sentence>It is conventionally assumed that while all the drives values are inferior to a given threshold, the bot will not have a dominating motivation, and it will be in a state in which all its needs are satisfied.</sentence>
    <sentence>• Bot’s mood and appraisal function: We define the bot‘s mood as the “degree of satisfaction of its needs” in such a way that the mood will reach its maximum when all the bot‘ drives are satisfied.</sentence>
    <sentence>The mood is modelled as a function of (1) the agent’s drives and (2) the pondered importance of each drive (applying weights ) with respect to a reference ideal mood () which intends to reflect the bot’s personality.</sentence>
    <sentence>As the drive’s values increase/decrease, the agent mood changes.</sentence>
    <sentence>If the variation in the mood () exceeds a threshold, the corresponding “appraisal” will be triggered.</sentence>
    <sentence>The behaviour between two thresholds (denoted by and ) is defined as follows: (1) Positive appraisal (If ) and Negative appraisal (If ) that set the start of certain behaviour.</sentence>
    <sentence>Situatedness Frequently, videogamers recognise the so-called “hot points” of a multiplayer game, i.e., they will know in which areas of the environment they are more likely to be killed (e.g., because it is a frequent path for many players, because it does not have many places where to hide, because there is a specific condition of the scenery such as quicksand, etc.).</sentence>
    <sentence>As a new modification, a map of the environment is included in CCBotSoar where the hazard of navigation points (NavPoints in the Unreal Tournament maps) close to conflict situations is portrayed.</sentence>
    <sentence>Through a classification in five levels of danger (null, low, medium, high, fatal) according to the number of deaths caused, CCBotSOAR will have available this “hazard mental map”, analogously to the one players as a consequence of their experience in the game or their terrain knowledge.</sentence>
    <sentence>Focus level We have included a new modification in the architecture related to the lost of focus level accordingly to the results in the game.</sentence>
    <sentence>This aspect is related to situations when the enemies seem unbeatable (apathy) or when players think they are (euphoria).</sentence>
    <sentence>In both situations, the bot’s behaviour is programmed to be more erratic and less focus on the game.</sentence>
    <sentence>In order to model this effect, we introduce a weighting factor which is a function of the difference in targets up to the end of the game.</sentence>
    <sentence>This parameter -a focus tempering coefficient- moderates the values of the emotions shown through the game.</sentence>
    <sentence>Integration of new features developed In the original behaviour of CERA–CRANIUM, the execution cycle is approximately four cycles per second and the architecture would select an action of each type amongst those proposed by the workspace in the physical layer, which would then be all performed.</sentence>
    <sentence>In the CCBotSOAR architecture, this pattern is modified in such a way that every time a cycle is executed, a SOAR operator is assigned to each of the proposed actions, and only one is selected by means of the rules engine.</sentence>
    <sentence>The global action selected in the figure results from: (1) SOAR‘s decision system and its reinforcement learning, and (2) a global factor that gathers elements of emotional character which have been previously described.</sentence>
    <sentence>In order to be clearer, Fig 4 shows how the information flow is modified by the additional module.</sentence>
    <sentence>CCBotSOAR bottom-up flow Fig 4.</sentence>
    <sentence>CCBotSOAR bottom-up flow.</sentence>
    <sentence>When trying to set the parameters in each of the sections (persistence of long-term memory in the learning process, ideal and threshold mood values, map of situatedness, focus tempering coefficient, etc.)</sentence>
    <sentence>real values obtained from games with expert players have been used.</sentence>
    <sentence>ADANN bot When working with ANN, finding an adequate ANN model is a key issue.</sentence>
    <sentence>Different studies have dealt with the design of an ANN from two different points of view.</sentence>
    <sentence>• Topology: number of hidden layers, hidden nodes in each layer, etc.</sentence>
    <sentence>; and • Connection weights: values for each connection in an ANN.</sentence>
    <sentence>In this specific domain the topology is given by the problem.</sentence>
    <sentence>After a detailed study of the inputs (current health, armour, damage, weapons, etc.)</sentence>
    <sentence>and outputs (movement, rotate, dodge, jump, crouch, etc.)</sentence>
    <sentence>from the game that should be used, carried us to the final decision of using the same architecture for each ANN.</sentence>
    <sentence>Related to the estimation of the connection weights, it is well known that learning algorithms like backpropagation usually got stuck in a local minimum Riedmiller et al.</sentence>
    <sentence>(1993).</sentence>
    <sentence>Moreover, it was not possible to obtain learning patterns from the game to train the ANN models because of the restrictions derived from working with real time computer games.</sentence>
    <sentence>Whitley and Hanson (1989) proposed the use of evolutionary computation to search for appropriate connection weights and avoiding the local minimum problem by means of a global search Rocha et al.</sentence>
    <sentence>(2007).</sentence>
    <sentence>The process of obtaining a candidate model will be split into two steps.</sentence>
    <sentence>First, several random initialized individuals (ANN) of a first generation are obtained.</sentence>
    <sentence>We make them combat using the input information that comes from the game and let them apply actions (outputs), while we measure how good they are (fitness value).</sentence>
    <sentence>This fitness value is measured as the number of deaths caused by the bot divided by the number of times it has died.</sentence>
    <sentence>Every six minutes we apply genetic operators (i.e., gaussian mutation) to obtain a new generation.</sentence>
    <sentence>The whole process (shown in Fig 5) is repeated until a maximum number of generations (i.e., 100) is reached.</sentence>
    <sentence>ADANN schema Fig 5.</sentence>
    <sentence>ADANN schema.</sentence>
    <sentence>At the end of the training process we will have a good NPC which will be introduced into the game (test) with other human and non-human players as it will be explained below in detail.</sentence>
  </section>
  <section name="Experimental results">
    <sentence>In the following we summarise the results we have obtained confronting our bot controllers to both the First-person and Third-person believability assessments.</sentence>
    <sentence>Structure of the “user study” User studies cover a wide range of activities designed to obtain information on the interactions between users and specific products.</sentence>
    <sentence>We next summarise the basic principles of the user study that we have used to measure the differences confronting our bot’s controllers to both the First-person and Third-person believability assessments.</sentence>
    <sentence>User tests involve analysing carefully the users behaviour as they interact with a product or system in some stages: Objective: Our tests try to find out which of the developed controllers is“more human”.</sentence>
    <sentence>Methodology: The methods and techniques we use in order to obtain this information were first-person (participants votes) and Third-person (votes on the recorded videos) interactions.</sentence>
    <sentence>Design of the tasks and settings: Details of the First-person and Third-person tasks are provided below: • First-person approach: (i) 20 matches (4 maps of 15 min each) during 5 sessions (5 different days) and (ii) 6 judges (three human players and three NPCs).</sentence>
    <sentence>Different human judges participated in different matches.</sentence>
    <sentence>• Third-person approach: (i) 10 video clips (1 min each) where all the bots and human players are included (they are not all present in all the videos, a weighted selection has been considered), (ii) the 10 video clips were purposefully selected to comply with the experiment requirements (i.e., must include actions with two or more players interacting) from a total of 35 h of recorded video, and (iii) 12 subjects were selected for the evaluation who had no prior knowledge in videogames and had not participated in the First-person experiment.</sentence>
    <sentence>A vote is considered positive when they guess correctly and negative when they fail or do not know what to answer.</sentence>
    <sentence>Test environment: The BotPrize competition environment http://human-machine.unizar.es/ and recorded videos of the games.</sentence>
    <sentence>Results and Analysis: The differences in believability assessment will be measured using a First-person approach and Third-person approach.</sentence>
    <sentence>These measurements will be expressed in terms of percentage of success vs. votes.</sentence>
    <sentence>We follow by explaining in detail the stages of the experiment.</sentence>
    <sentence>First-person assessment As described above, we used the BotPrize competition environment and testing protocol as First-person observer method for assessing believability.</sentence>
    <sentence>We ran a total of 20 matches conducted during 5 sessions of 1 h each.</sentence>
    <sentence>Matches last for 15 min and 4 different maps have been used per session, counterbalancing level maps across the sessions.</sentence>
    <sentence>Therefore, human players (judges) were asked to play (and judge) for 1 h (4 maps of 15 min each) in 5 different days, with a period of one week between consecutive sessions.</sentence>
    <sentence>The whole testing procedure took place during 5 weeks and the selected human players were always the same.</sentence>
    <sentence>There were the same number of NPC and human players, three human and three NPC.</sentence>
    <sentence>Human judges agreed voluntarily to participate in this study.</sentence>
    <sentence>They neither had previous experience in the design or programming of a NPC, nor any expertise in Artificial Intelligence.</sentence>
    <sentence>However, they were selected because they have intermediate experience with FPS video games (none of the judges was a novice or advanced player).</sentence>
    <sentence>As it can be observed in Table 1, after the five judging sessions (session 1 to 5) of the three different approaches presented in this paper against human players, ADANN system outperforms the other approaches followed very near by CCBotSOAR.</sentence>
    <sentence>Table 1.</sentence>
    <sentence>First-person humanity assessment results (in percentage).</sentence>
    <sentence>Bots S1 S2 S3 S4 S5 Average CCBot 19.59 19.84 16.81 20.14 28.70 21.02 ADANN 17.34 37.04 31.73 30.26 47.23 32.72 CCBotSOAR 21.18 27.06 35.80 38.82 40.61 32.69 In order to have another measure of believability we have also used a Third-person observer method based on recorded data from the BotPrize sessions described in the former section.</sentence>
    <sentence>The 20 matches from the First-person assessment experiment were recorded in the central video game server.</sentence>
    <sentence>These deathmatch game recordings were used to generate 35 h of video that included a Third-person view of each player (20 matches, 15 min per match, 3 bots and 4 human players per match).</sentence>
    <sentence>A set of 10 video clips with a duration of 1 min each were selected as a representative sample of the whole visual data collected from the video game server.</sentence>
    <sentence>These clips were extracted based on the following criteria: they include a sequence of actions in which two or more players are interacting (most of video footage time corresponds to periods in which the player observed is just moving from one place in the map to another, or not interacting with any other player), all bots and human players are included in the clips, and clips correspond to different maps or different parts of the maps.</sentence>
    <sentence>This representative sample of 10 video clips were made available to a set of human judges using a mobile application called Knowxel.1 Knowxel is a multipurpose crowdsourcing platform oriented to mobile devices (see Amato et al., 2013, 2014).</sentence>
    <sentence>This platform was specifically developed for mobile devices in order to exploit the strengths of such devices; namely: (i) massivity, (ii) ubiquity and (iii) embedded sensors.</sentence>
    <sentence>The combined use of mobile platforms and the crowdsourcing model allows to tackle from the simplest to the most complex tasks.</sentence>
    <sentence>Knowxel allows to conduct a video-based poll experiment where the users vote a the end of each video clip.</sentence>
    <sentence>Possible votes were: (a) I think the player is a human, (b) I think the player is a bot, (c) I cannot tell whether it is a human or a bot.</sentence>
    <sentence>Fig 6 shows an example of the interface of the Android app that we have used in order to present the videos to the Third-person human judges.</sentence>
    <sentence>Snapshot of the Knowxel mobile application used un the Third-person judging… Fig 6.</sentence>
    <sentence>Snapshot of the Knowxel mobile application used un the Third-person judging process.</sentence>
    <sentence>In this Third-person assessment process we asked for voluntary participation to university students with no former experience in video game NPC development or Artificial Intelligence.</sentence>
    <sentence>However, all of them had previous experience playing FPS video games, and of course none of them participated in the First-person assessment experiment.</sentence>
    <sentence>Table 2 represents the difference between the believability assessment using the First-person approach (BotPrize) and Third-person approach (video observation).</sentence>
    <sentence>Table 2.</sentence>
    <sentence>Comparison of First-person and Third-person results.</sentence>
    <sentence>Bots 3rd Person 1st Person Average CCBot 17.39 21.02 19.20 ADANN 25.00 32.72 28.86 CCBotSOAR 26.09 32.69 29.39 Comparing the results of the two different assessment methods we can see that the Third-person assessment is much more demanding.</sentence>
    <sentence>Using the Third-person assessment average humanness ratio for humans and bots are 68,67 and 22,83 respectively (see Fig 7) (see next section for a detailed discussion).</sentence>
    <sentence>Third person humanity assessment results (in percentage) Fig 7.</sentence>
    <sentence>Third person humanity assessment results (in percentage).</sentence>
  </section>
  <section name="Discussion">
    <sentence>As we have shown, three different approaches were designed and compared using two different measurements methods.</sentence>
    <sentence>We can observe that although ANN approach obtains better results in First-person experimentation, in general, cognitive approach CCBotSOAR is the best option.</sentence>
    <sentence>In Fig 8 we compare the results of the two assessment methods for the three bots.</sentence>
    <sentence>Consistently the First-person method offers a higher humanness ratio for all bots.</sentence>
    <sentence>Applying the Student’s T-test for the paired samples corresponding to the two assessment methods we obtain a P = 0,038 &lt; 0,05, thus confirming that we cannot consider the First-person and Third-person methods as equivalent.</sentence>
    <sentence>First Person versus Third Person humanity assessment results (in percentage) Fig 8.</sentence>
    <sentence>First Person versus Third Person humanity assessment results (in percentage).</sentence>
    <sentence>While the bot solely based in the CERA–CRANIUM architecture lacks any learning or long-term adaptation mechanism, the two bots with better results implement different mechanism of adaptation.</sentence>
    <sentence>We believe the reason why these two bots have similar performance in terms of believability lies in the learning/adaptation mechanisms.</sentence>
    <sentence>CCBotSOAR implements a reinforcement learning mechanism as described in Section 4.2.</sentence>
    <sentence>(see “long time memory” subsection), which makes it more adaptable to the dynamics of the interaction with other players.</sentence>
    <sentence>Similarly, ADANN also adapts well to the dynamics of the interaction with other players, however, in this case the mechanism used is not an explicit learning algorithm, but a genetic algorithm optimisation.</sentence>
    <sentence>It can be argued that the fitness function in the genetic algorithm in ADANNBot is equivalent in terms of adaptation results to the reinforcement learning algorithm implemented in CCBotSOAR.</sentence>
    <sentence>The believability assessment methods applied in this work are indeed fully behavioural tests, as they are inspired by the Turing test.</sentence>
    <sentence>Pure behavioural approaches are pragmatic as they do not take into account the internal states or mechanisms of the agents.</sentence>
    <sentence>In other words, Stimulus–Response (S–R) models are the references to understand and evaluate the subjects being tested.</sentence>
    <sentence>When we confront artificial agents to a full Turing test this should not be a problem, as we assume human-like internal processes exists (even though we do not study them directly) and the resulting behaviour is the result of the interaction between the stimuli and these internal psychological processes.</sentence>
    <sentence>However, when we are dealing with limited versions of the Turing test, where some behaviours might well be pre-programmed, we might want to also inspect the inner workings of the agents.</sentence>
    <sentence>By inspecting and analysing the inner processes of the agents we are adopting a Stimulus–Organism–Response (S–O–R) stance.</sentence>
    <sentence>Additionally, by “looking inside” the agents we are making sure no deceiving strategies have been implemented in order to fool the judges.</sentence>
    <sentence>Human judges are usually influenced by the personification effect (Arrabales et al., 2012) and they tend to assign psychological states, personality and intentions to simple behaviours that may be just simple pre-programmed routines.</sentence>
    <sentence>Although this issue is not a main concern in the present work, as we exclusively focus on the perceived humanness, more comprehensive S–O–R oriented tests might be developed based on Machine Consciousness testing approaches like the ConsScale cognitive development measure (Arrabales et al., 2012).</sentence>
  </section>
  <section name="Conclusions">
    <sentence>As introduced in this paper, the automatic generation of human-like behaviour is an enormous challenge, even when addressed in the constrained domain of a video game without verbal interaction.</sentence>
    <sentence>We have explored the application of different control architectures and also new ways to address the problem of assessment.</sentence>
    <sentence>The results obtained clearly indicate that the Third-person approach to assessment is much more demanding in this context.</sentence>
    <sentence>Therefore, we plan to perform more extensive testing using this approach.</sentence>
    <sentence>As explained in the paper, when we design cognitive architectures we model different cognitive processes and try to integrate them effectively so the resulting synergies translate into a more human-like behaviour.</sentence>
    <sentence>We believe that the results obtained in the experimentation are consistent with the implementation and integration of the cognitive processes we have focused on: attention, memory and the activation processes like emotion.</sentence>
    <sentence>Although good results have been obtained, for example, by ADANN, still the training and testing process are still separated.</sentence>
    <sentence>Due to this, although a good NPC is obtained during the training process, once this bot is taken from the training sandbox to the testing one, it will not learn more while it is playing.</sentence>
    <sentence>Then, a possible future work would be to make use of non-supervised learning process and ANN so there would be only one sandbox, being it used for training and testing at the same time.</sentence>
    <sentence>On the other hand, every time the bot is taken to a new game, it would be able to keep on learning from new players.</sentence>
    <sentence>In order to achieve better humanness results we plan to integrate higher level cognitive processes, mainly learning mechanisms such as reinforcement learning.</sentence>
    <sentence>In fact, as we have seen, CCBotSOAR clearly surpasses CCBot thanks to this feature.</sentence>
    <sentence>1 www.knowxel.com</sentence>
  </section>
</article>
